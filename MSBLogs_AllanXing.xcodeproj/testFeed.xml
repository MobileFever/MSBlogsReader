<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:sxp="http://sxpdata.microsoft.com/sxp" xmlns:sxpMd="http://sxpdata.microsoft.com/metadata">
<channel>
<title>Developer Tools Blogs</title>
<description>Developer Tools Blogs</description>
<copyright>Copyright (c) 2013 Microsoft Corp. All rights reserved.</copyright>
<link>http://sxp.microsoft.com/feeds/3.0/DevBlogs</link>
<generator>SXP 3.0</generator>
<item>
<title>Download Wrappers and Unwanted Software are pure evil</title>
<description>&lt;div&gt;&lt;p&gt;Call it Adware, Malware, Spyware, Crapware, it's simply unwanted. Every non-technical relative I've ever talked to has toolbars they apparently can't see, apps running in the background, browser home pages set to Russian Google clones, and &lt;strong&gt;they have no idea how it got that way&lt;/strong&gt;.&lt;/p&gt;  &lt;p&gt;Here's how they get that way.&lt;/p&gt;  &lt;p&gt;You go to download something reasonable. I wanted to download a Skype Recorder, so I went &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~download.cnet.com/Skype-Recorder/3000-2349_4-75448075.html"&gt;here&lt;/a&gt;. (Yes, I linked here to the URL because they don't need Google Juice from me.)&lt;/p&gt;  &lt;p&gt;&lt;img title="CLICK THE GREEN BUTTON YOU WANT TO" style="display: inline" alt="CLICK THE GREEN BUTTON YOU WANT TO" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_58b4fbcb-67a2-4504-ad9f-c6ff11a8b0e9.png" width="426" height="167" /&gt;&lt;/p&gt;  &lt;p&gt;OK at this point I'm screwed. The green button CLEARLY desperately wants me to click on it. I totally ignore the tiny "Direct Download Link" below the friendly button. I have no idea what that glyph icon means, but it's pointing down, so that must mean download. &lt;/p&gt;  &lt;p&gt;Welcome to the Download.com installer! How helpful!&lt;/p&gt;  &lt;p&gt;&lt;img title="image" style="display: inline" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_4a949235-8d3e-49f3-9b3e-e4f5419c9893.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;More green buttons, awesome. Let's go!&lt;/p&gt;  &lt;p&gt;&lt;img title="CLICK IT!!!" style="display: inline" alt="CLICK IT!!!" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_a6144656-4bcd-44e7-864c-d87eef7dab1d.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;Pre-selected Express installation? Super helpful, I love that. Ah, and next to it there's text in the same font size and color that I totally won't read that says:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;Install Search Protect to set [&lt;strong&gt;CHANGE] &lt;/strong&gt;my home page and &lt;strong&gt;[TOTALLY MESS UP]&lt;/strong&gt; default search to Conduit Search &lt;strong&gt;[THAT I HAVE NEVER HEARD OF AND NEITHER DO YOU]&lt;/strong&gt; and &lt;strong&gt;[NOW THIS IS AUDACIOUS...]&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;&lt;font style="background-color: #ffff00"&gt;prevent attempts to change my browser settings&lt;/font&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/blockquote&gt;    &lt;p&gt;In other words, we, Download.com, are going to totally change the way you use you computer and browser the way and prevent you from easily changing it back. We're going to do it now, when you press Next, and oh, by the way, we have Admin on your computer because just a moment ago you pressed YES on the Windows Warning that we could mess things up, because everyone ignores that. &lt;/p&gt;  &lt;p&gt;Or, you can click Custom, because non-technical relative ALWAYS clicks Custom. NO. They don't. Technical people &lt;strong&gt;ALWAYS &lt;/strong&gt;press Custom. ALWAYS. Always. Other people? Never.&lt;/p&gt;  &lt;p&gt;&lt;img title="MOAR GREEN BUTTONS" style="display: inline" alt="MOAR GREEN BUTTONS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_df0d8b3b-90ee-4e42-a4d8-70349ce7ea38.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;Ah, nice, when I press Custom it's set to...wait for it...the same stuff that was gonna happen if you pressed Express. &lt;/p&gt;  &lt;p&gt;&lt;strong&gt;AND WE ARE ONLY ON STEP 2. &lt;/strong&gt;What ever happened to clicking just once and getting what I needed?&lt;/p&gt;  &lt;p&gt;&lt;img title="YOU WILL NEVER READ THE EULA!" style="display: inline" alt="YOU WILL NEVER READ THE EULA!" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_c98839be-8fe7-4efc-b719-dc742f53b662.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;OMG "It communicates several times a day with servers to check for new offers and change ads on my computer?" I totally want that. Thanks Green Button!&lt;/p&gt;  &lt;p&gt;I'm sure that if I press Decline here that it will mess up my installation of the original thing I wanted to install...I have forgotten what that was, but I'll just keep going.&lt;/p&gt;  &lt;p&gt;&lt;img title="PAY NO ATTENTION TO THE MAN BEHIND THE EULA" style="display: inline" alt="PAY NO ATTENTION TO THE MAN BEHIND THE EULA" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_99b4d081-7f28-4568-9ca8-4a5ef8f21de0.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;Weird. I thought I was already here. I'm sure I want this also.&lt;/p&gt;  &lt;p&gt;&lt;img title="ZOMG THERE ARE THREE EULAS" style="display: inline" alt="ZOMG THERE ARE THREE EULAS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_44707e79-6415-434c-bc04-fc7c568429d6.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;Huh. Does my Mouse not work? I'll click it again. Backing up my files without asking seems legit.&lt;/p&gt;  &lt;p&gt;&lt;img title="NOT DONE YET" style="display: inline" alt="NOT DONE YET" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_4e6c2783-2a03-4e83-8404-31ba89bf56d2.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;Install Now? What have we been doing all this time?&lt;/p&gt;  &lt;p&gt;I am disappointed in us, Internet, that this is a business. Someone wrote this, for their job, directed by their middle manager, who was directed by their rich boss. There was a meeting (there's always a meeting) where it was discussed on how we could most effectively fool non-technical relatives into installing crap.&lt;/p&gt;  &lt;p&gt;These are &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~darkpatterns.org/"&gt;Dark UI Patterns&lt;/a&gt;.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;A Dark Pattern is a type of user interface that appears to have been carefully crafted to trick users into doing things, such as buying insurance with their purchase or signing up for recurring bills.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;This isn't cool and it needs to stop. I won't be visiting Download.com anymore. &lt;/p&gt;  &lt;p&gt;I'll only install software from Vendors I trust, like Oracle...&lt;/p&gt;  &lt;p&gt;&lt;img title="Thanks Ask Toolbar!" style="display: inline" alt="Thanks Ask Toolbar!" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/java_5912afeb-b46c-48c6-ae57-4ebf287597cd.png" width="516" height="393" /&gt;&lt;/p&gt;  &lt;p&gt;Gosh, maybe I need to install that "Crap Cleaner" everyone talks about so I can remove these unwanted toolbars.&lt;/p&gt;  &lt;p&gt;&lt;img title="Crapware Inception" style="display: inline" alt="Crapware Inception" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_d55ea5bf-e3f8-48fe-b6ee-6db23c352971.png" width="513" height="400" /&gt;&lt;/p&gt;  &lt;p&gt;Ok, forgot it. I'll just stick with the official Windows Updates because I'm sure I want all those.&lt;/p&gt;  &lt;p&gt;&lt;img title="Seems legit." style="display: inline" alt="Seems legit." src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_89d409d6-70b2-4a9d-b5eb-3651906b7a15.png" width="649" height="305" /&gt;&lt;/p&gt;  &lt;p&gt;So, um. Yeah.&lt;/p&gt;    &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/dumbledore_welp_2.gif"&gt;&lt;img title="Dumbledore Welp" style="display: inline" alt="Dumbledore Welp" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/dumbledore_welp_thumb.gif" width="225" height="177" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Sound off in the comments.&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2014 Scott Hanselman. All rights reserved.
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/56388161/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/56388161/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/56388161/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/56388161/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/56388161/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/56388161/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;/div&gt;</description>
<pubDate>Wed, 12 Feb 2014 01:15:06 GMT</pubDate>
<guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=1356b4d2-9288-43bc-80a1-8604b49ba3a7</guid>
<link>http://feeds.hanselman.com/~/56388161/0/scotthanselman~Download-Wrappers-and-Unwanted-Software-are-pure-evil.aspx</link>
<author>Scott Hanselman</author>
<comments>http://www.hanselman.com/blog/CommentView.aspx?guid=1356b4d2-9288-43bc-80a1-8604b49ba3a7</comments>
<category>Musings</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>DotNETFramework</sxp:FeedId>
<sxp:PublishId>6079161</sxp:PublishId>
<sxp:AssetId>http://www.hanselman.com/blog/PermaLink.aspx?guid=1356b4d2-9288-43bc-80a1-8604b49ba3a7</sxp:AssetId>
<sxp:Author>Scott Hanselman</sxp:Author>
<sxp:Comments>http://www.hanselman.com/blog/CommentView.aspx?guid=1356b4d2-9288-43bc-80a1-8604b49ba3a7</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Wed, 12 Feb 2014 03:07:42 GMT</sxp:LastUpdated>
<sxp:Link>http://feeds.hanselman.com/~/56388161/0/scotthanselman~Download-Wrappers-and-Unwanted-Software-are-pure-evil.aspx</sxp:Link>
<sxp:PublishDate>Wed, 12 Feb 2014 01:15:06 GMT</sxp:PublishDate>
<sxp:RelativeTime>5 hours ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35413179</sxp:SourceItemId>
<sxp:SourceFeedId>2413</sxp:SourceFeedId>
<sxp:SourceName>hanselman</sxp:SourceName>
<sxp:Title>Download Wrappers and Unwanted Software are pure evil</sxp:Title>
<sxp:Content>&lt;div&gt;&lt;p&gt;Call it Adware, Malware, Spyware, Crapware, it's simply unwanted. Every non-technical relative I've ever talked to has toolbars they apparently can't see, apps running in the background, browser home pages set to Russian Google clones, and &lt;strong&gt;they have no idea how it got that way&lt;/strong&gt;.&lt;/p&gt;  &lt;p&gt;Here's how they get that way.&lt;/p&gt;  &lt;p&gt;You go to download something reasonable. I wanted to download a Skype Recorder, so I went &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~download.cnet.com/Skype-Recorder/3000-2349_4-75448075.html"&gt;here&lt;/a&gt;. (Yes, I linked here to the URL because they don't need Google Juice from me.)&lt;/p&gt;  &lt;p&gt;&lt;img title="CLICK THE GREEN BUTTON YOU WANT TO" style="display: inline" alt="CLICK THE GREEN BUTTON YOU WANT TO" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_58b4fbcb-67a2-4504-ad9f-c6ff11a8b0e9.png" width="426" height="167" /&gt;&lt;/p&gt;  &lt;p&gt;OK at this point I'm screwed. The green button CLEARLY desperately wants me to click on it. I totally ignore the tiny "Direct Download Link" below the friendly button. I have no idea what that glyph icon means, but it's pointing down, so that must mean download. &lt;/p&gt;  &lt;p&gt;Welcome to the Download.com installer! How helpful!&lt;/p&gt;  &lt;p&gt;&lt;img title="image" style="display: inline" alt="image" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_4a949235-8d3e-49f3-9b3e-e4f5419c9893.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;More green buttons, awesome. Let's go!&lt;/p&gt;  &lt;p&gt;&lt;img title="CLICK IT!!!" style="display: inline" alt="CLICK IT!!!" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_a6144656-4bcd-44e7-864c-d87eef7dab1d.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;Pre-selected Express installation? Super helpful, I love that. Ah, and next to it there's text in the same font size and color that I totally won't read that says:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;Install Search Protect to set [&lt;strong&gt;CHANGE] &lt;/strong&gt;my home page and &lt;strong&gt;[TOTALLY MESS UP]&lt;/strong&gt; default search to Conduit Search &lt;strong&gt;[THAT I HAVE NEVER HEARD OF AND NEITHER DO YOU]&lt;/strong&gt; and &lt;strong&gt;[NOW THIS IS AUDACIOUS...]&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;&lt;font style="background-color: #ffff00"&gt;prevent attempts to change my browser settings&lt;/font&gt;.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/blockquote&gt;    &lt;p&gt;In other words, we, Download.com, are going to totally change the way you use you computer and browser the way and prevent you from easily changing it back. We're going to do it now, when you press Next, and oh, by the way, we have Admin on your computer because just a moment ago you pressed YES on the Windows Warning that we could mess things up, because everyone ignores that. &lt;/p&gt;  &lt;p&gt;Or, you can click Custom, because non-technical relative ALWAYS clicks Custom. NO. They don't. Technical people &lt;strong&gt;ALWAYS &lt;/strong&gt;press Custom. ALWAYS. Always. Other people? Never.&lt;/p&gt;  &lt;p&gt;&lt;img title="MOAR GREEN BUTTONS" style="display: inline" alt="MOAR GREEN BUTTONS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_df0d8b3b-90ee-4e42-a4d8-70349ce7ea38.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;Ah, nice, when I press Custom it's set to...wait for it...the same stuff that was gonna happen if you pressed Express. &lt;/p&gt;  &lt;p&gt;&lt;strong&gt;AND WE ARE ONLY ON STEP 2. &lt;/strong&gt;What ever happened to clicking just once and getting what I needed?&lt;/p&gt;  &lt;p&gt;&lt;img title="YOU WILL NEVER READ THE EULA!" style="display: inline" alt="YOU WILL NEVER READ THE EULA!" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_c98839be-8fe7-4efc-b719-dc742f53b662.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;OMG "It communicates several times a day with servers to check for new offers and change ads on my computer?" I totally want that. Thanks Green Button!&lt;/p&gt;  &lt;p&gt;I'm sure that if I press Decline here that it will mess up my installation of the original thing I wanted to install...I have forgotten what that was, but I'll just keep going.&lt;/p&gt;  &lt;p&gt;&lt;img title="PAY NO ATTENTION TO THE MAN BEHIND THE EULA" style="display: inline" alt="PAY NO ATTENTION TO THE MAN BEHIND THE EULA" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_99b4d081-7f28-4568-9ca8-4a5ef8f21de0.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;Weird. I thought I was already here. I'm sure I want this also.&lt;/p&gt;  &lt;p&gt;&lt;img title="ZOMG THERE ARE THREE EULAS" style="display: inline" alt="ZOMG THERE ARE THREE EULAS" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_44707e79-6415-434c-bc04-fc7c568429d6.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;Huh. Does my Mouse not work? I'll click it again. Backing up my files without asking seems legit.&lt;/p&gt;  &lt;p&gt;&lt;img title="NOT DONE YET" style="display: inline" alt="NOT DONE YET" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_4e6c2783-2a03-4e83-8404-31ba89bf56d2.png" width="663" height="544" /&gt;&lt;/p&gt;  &lt;p&gt;Install Now? What have we been doing all this time?&lt;/p&gt;  &lt;p&gt;I am disappointed in us, Internet, that this is a business. Someone wrote this, for their job, directed by their middle manager, who was directed by their rich boss. There was a meeting (there's always a meeting) where it was discussed on how we could most effectively fool non-technical relatives into installing crap.&lt;/p&gt;  &lt;p&gt;These are &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~darkpatterns.org/"&gt;Dark UI Patterns&lt;/a&gt;.&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;A Dark Pattern is a type of user interface that appears to have been carefully crafted to trick users into doing things, such as buying insurance with their purchase or signing up for recurring bills.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;This isn't cool and it needs to stop. I won't be visiting Download.com anymore. &lt;/p&gt;  &lt;p&gt;I'll only install software from Vendors I trust, like Oracle...&lt;/p&gt;  &lt;p&gt;&lt;img title="Thanks Ask Toolbar!" style="display: inline" alt="Thanks Ask Toolbar!" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/java_5912afeb-b46c-48c6-ae57-4ebf287597cd.png" width="516" height="393" /&gt;&lt;/p&gt;  &lt;p&gt;Gosh, maybe I need to install that "Crap Cleaner" everyone talks about so I can remove these unwanted toolbars.&lt;/p&gt;  &lt;p&gt;&lt;img title="Crapware Inception" style="display: inline" alt="Crapware Inception" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_d55ea5bf-e3f8-48fe-b6ee-6db23c352971.png" width="513" height="400" /&gt;&lt;/p&gt;  &lt;p&gt;Ok, forgot it. I'll just stick with the official Windows Updates because I'm sure I want all those.&lt;/p&gt;  &lt;p&gt;&lt;img title="Seems legit." style="display: inline" alt="Seems legit." src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/image_89d409d6-70b2-4a9d-b5eb-3651906b7a15.png" width="649" height="305" /&gt;&lt;/p&gt;  &lt;p&gt;So, um. Yeah.&lt;/p&gt;    &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/dumbledore_welp_2.gif"&gt;&lt;img title="Dumbledore Welp" style="display: inline" alt="Dumbledore Welp" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/CNET-Download-Wrappers-are-evil-and-must_EBA8/dumbledore_welp_thumb.gif" width="225" height="177" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Sound off in the comments.&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2014 Scott Hanselman. All rights reserved.
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/56388161/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/56388161/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/56388161/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/56388161/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/56388161/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/56388161/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;/div&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>Download Wrappers and Unwanted Software are pure evil</sxp:MobileTitle>
<sxp:MobileContent>Call it Adware, Malware, Spyware, Crapware, it's simply unwanted. Every non-technical relative I've ever talked to has toolbars they apparently can't see, apps running in the background, browser home pages set to Russian Google clones, and they have no idea how it got that way.
Here's how they get that way.
You go to download something reasonable. I wanted to download a Skype Recorder, so I went here. (Yes, I linked here to the URL because they don't need Google Juice from me.)

OK at this point I'm screwed. The green button CLEARLY desperately wants me to click on it. I totally ignore the tiny "Direct Download Link" below the friendly button. I have no idea what that glyph icon means, but it's pointing down, so that must mean download.
Welcome to the Download.com installer! How helpful!

More green buttons, awesome. Let's go!

Pre-selected Express installation? Super helpful, I love that. Ah, and next to it there's text in the same font size and color that I totally won't read that says:
Install Search Protect to set [CHANGE] my home page and [TOTALLY MESS UP] default search to Conduit Search [THAT I HAVE NEVER HEARD OF AND NEITHER DO YOU] and [NOW THIS IS AUDACIOUS...]prevent attempts to change my browser settings.
In other words, we, Download.com, are going to totally change the way you use you computer and browser the way and prevent you from easily changing it back. We're going to do it now, when you press Next, and oh, by the way, we have Admin on your computer because just a moment ago you pressed YES on the Windows Warning that we could mess things up, because everyone ignores that.
Or, you can click Custom, because non-technical relative ALWAYS clicks Custom. NO. They don't. Technical people ALWAYS press Custom. ALWAYS. Always. Other people? Never.

Ah, nice, when I press Custom it's set to...wait for it...the same stuff that was gonna happen if you pressed Express.
AND WE ARE ONLY ON STEP 2. What ever happened to clicking just once and getting what I needed?

OMG "It communicates several times a day with servers to check for new offers and change ads on my computer?" I totally want that. Thanks Green Button!
I'm sure that if I press Decline here that it will mess up my installation of the original thing I wanted to install...I have forgotten what that was, but I'll just keep going.

Weird. I thought I was already here. I'm sure I want this also.

Huh. Does my Mouse not work? I'll click it again. Backing up my files without asking seems legit.

Install Now? What have we been doing all this time?
I am disappointed in us, Internet, that this is a business. Someone wrote this, for their job, directed by their middle manager, who was directed by their rich boss. There was a meeting (there's always a meeting) where it was discussed on how we could most effectively fool non-technical relatives into installing crap.
These are Dark UI Patterns.
A Dark Pattern is a type of user interface that appears to have been carefully crafted to trick users into doing things, such as buying insurance with their purchase or signing up for recurring bills.
This isn't cool and it needs to stop. I won't be visiting Download.com anymore.
I'll only install software from Vendors I trust, like Oracle...

Gosh, maybe I need to install that "Crap Cleaner" everyone talks about so I can remove these unwanted toolbars.

Ok, forgot it. I'll just stick with the official Windows Updates because I'm sure I want all those.

So, um. Yeah.

Sound off in the comments.© 2014 Scott Hanselman. All rights reserved.</sxp:MobileContent>
<sxp:Tag>Musings</sxp:Tag>
</item>
<item>
<title>Preview of Dynamic Data Provider and EntityDataSource Control for EF6</title>
<description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;This post was &lt;/strong&gt;&lt;/em&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/01/30/announcing-preview-of-dynamic-data-provider-and-entitydatasource-control-for-entity-framework-6.aspx"&gt;&lt;em&gt;&lt;strong&gt;originally posted on the .NET Web Development and Tools Blog&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;em&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;We are pleased to announce an update to ASP.NET DynamicData and EntityDataSource control, so that they work with Entity Framework 6.&lt;/p&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;What’s in this preview&lt;/h2&gt;  &lt;ul&gt;   &lt;li&gt;DynamicData provider for Entity Framework 6&lt;/li&gt;    &lt;li&gt;EntityDataSource control for Entity Framework 6&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;How to install this preview&lt;/h2&gt;  &lt;p&gt;You can download this preview for ASP.NET DynamicData.EFProvider (&lt;a href="http://www.nuget.org/packages/Microsoft.AspNet.DynamicData.EFProvider/"&gt;http://www.nuget.org/packages/Microsoft.AspNet.DynamicData.EFProvider/&lt;/a&gt;) and EntityDataSource (&lt;a href="http://www.nuget.org/packages/Microsoft.AspNet.EntityDataSource/"&gt;http://www.nuget.org/packages/Microsoft.AspNet.EntityDataSource/&lt;/a&gt;) as preview NuGet packages from the NuGet gallery. You can install these pre-release packages through NuGet using the NuGet Package Manager Console, like this:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Install-Package Microsoft.AspNet.DynamicData.EFProvider -Version 6.0.0-alpha1 –Pre &lt;/li&gt;    &lt;li&gt;Install-Package Microsoft.AspNet.EntityDataSource -Version 6.0.0-alpha1 –Pre &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;Getting started&lt;/h2&gt;  &lt;h3&gt;Microsoft.AspNet.DynamicData.EFProvider&lt;/h3&gt;  &lt;p&gt;This package has a DynamicData EFProvider for Entity Framework 6. This provider can work with a Model (either Code First or EF Designer) which was created using Entity Framework 6. This package also installs the Page Templates, Entity Templates and Field Templates which are required for DynamicData. The templates have been updated to use &lt;strong&gt;Microsoft.AspNet.EntityDataSource&lt;/strong&gt; control which we are also previewing today as well.&lt;/p&gt;  &lt;p&gt;For more information on ASP.NET DynamicData please see &lt;a href="http://msdn.microsoft.com/en-us/library/cc488545.aspx"&gt;http://msdn.microsoft.com/en-us/library/cc488545.aspx&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Following are the steps for using this package in a ASP.NET DynamicData application:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Create a new ASP.NET Dynamic Data Entities Web Application &lt;/li&gt;    &lt;li&gt;Add the Microsoft.AspNet.DynamicData.EFProvider NuGet package &lt;/li&gt;    &lt;li&gt;This will do the following      &lt;ul&gt;       &lt;li&gt;Add a reference to the DynamicData EFProvider binary &lt;/li&gt;        &lt;li&gt;Install the templates. If you are starting with a new project, then you can override the templates. If you have an existing application, then you should be careful when overriding the changes. The templates replace the EntityDataSource control which shipped in .NET with Microsoft.AspNet.EntityDataSource and also have a few bug fixes in the Many-Many field template so they work with Entity Framework 6. &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Create your model using Entity Framework Code First or EF Designer. &lt;/li&gt;    &lt;li&gt;Add the following code in RegisterRoutes in Global.asax.cs to register your EF Model:      &lt;pre&gt;DefaultModel.RegisterContext(
new Microsoft.AspNet.DynamicData.ModelProviders.EFDataModelProvider(&lt;br /&gt;        () =&gt; newNorthwindEntities1()),
newContextConfiguration { ScaffoldAllTables = true });&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;Run the project &lt;/li&gt;

&lt;li&gt;You would see all the tables listed on the Default page. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Microsoft.AspNet.EntityDataSource Control&lt;/h3&gt;

&lt;p&gt;This is an update to the EntityDataSource control which shipped in the .NET Framework. The EntityDataSource control has been updated to work with Entity Framework 6.&lt;/p&gt;

&lt;p&gt;To use this control, please do the following&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create an ASP.NET application &lt;/li&gt;

&lt;li&gt;Install the package&lt;strong&gt; &lt;/strong&gt;Microsoft.AspNet.EntityDataSource

&lt;ul&gt;
&lt;li&gt;This package will
&lt;ul&gt;
&lt;li&gt;install the runtime binary for &lt;strong&gt;&lt;/strong&gt;Microsoft.AspNet.EntityDataSource &lt;/li&gt;

&lt;li&gt;Install the EntityFramework version 6 NuGet package &lt;/li&gt;

&lt;li&gt;Add the following tag prefix in web.config
&lt;pre&gt;&lt;pages&gt;
&lt;controls&gt;
&lt;add &lt;br /&gt;      tagPrefix="ef" &lt;br /&gt;      assembly="Microsoft.AspNet.EntityDataSource" &lt;br /&gt;      namespace="Microsoft.AspNet.EntityDataSource" /&gt;
&lt;/controls&gt;
&lt;/pages&gt; &lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;Create a new Web Form page &lt;/li&gt;

&lt;li&gt;Use the control as follows and bind it to any Databound control such as GridView, FormView etc.
&lt;pre&gt;&lt;ef:EntityDataSource ID="GridDataSource" runat="server" EnableDelete="true" /&gt; &lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt; &lt;/h5&gt;

&lt;h2&gt;Known Issues&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The templates in Microsoft.AspNet.DynamicData.EFProvider are for C# only. &lt;/li&gt;

&lt;li&gt;The templates in Microsoft.AspNet.DynamicData.EFProvider are for Web Application projects only and will not work for WebSites projects. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;Give feedback&lt;/h2&gt;

&lt;p&gt;If you find any issues with this preview, please file issues at the EntityFramework CodePlex site &lt;a href="https://entityframework.codeplex.com/"&gt;https://entityframework.codeplex.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for trying out the preview and helping us make it better.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498647" width="1" height="1"&gt;</description>
<pubDate>Tue, 11 Feb 2014 23:13:09 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10498647</guid>
<link>http://blogs.msdn.com/b/adonet/archive/2014/02/11/preview-of-dynamic-data-provider-and-entitydatasource-control-for-ef6.aspx</link>
<author>Rowan Miller</author>
<comments>http://blogs.msdn.com/b/adonet/archive/2014/02/11/preview-of-dynamic-data-provider-and-entitydatasource-control-for-ef6.aspx#comments</comments>
<category>Entity Framework</category>
<category>Entity Data Source</category>
<category>What's New</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>DotNETFramework</sxp:FeedId>
<sxp:PublishId>6079393</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10498647</sxp:AssetId>
<sxp:Author>Rowan Miller</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/adonet/archive/2014/02/11/preview-of-dynamic-data-provider-and-entitydatasource-control-for-ef6.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Wed, 12 Feb 2014 03:13:10 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/adonet/archive/2014/02/11/preview-of-dynamic-data-provider-and-entitydatasource-control-for-ef6.aspx</sxp:Link>
<sxp:PublishDate>Tue, 11 Feb 2014 23:13:09 GMT</sxp:PublishDate>
<sxp:RelativeTime>7 hours ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35413863</sxp:SourceItemId>
<sxp:SourceFeedId>2412</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>Preview of Dynamic Data Provider and EntityDataSource Control for EF6</sxp:Title>
<sxp:Content>&lt;p&gt;&lt;em&gt;&lt;strong&gt;This post was &lt;/strong&gt;&lt;/em&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2014/01/30/announcing-preview-of-dynamic-data-provider-and-entitydatasource-control-for-entity-framework-6.aspx"&gt;&lt;em&gt;&lt;strong&gt;originally posted on the .NET Web Development and Tools Blog&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;&lt;em&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;We are pleased to announce an update to ASP.NET DynamicData and EntityDataSource control, so that they work with Entity Framework 6.&lt;/p&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;What’s in this preview&lt;/h2&gt;  &lt;ul&gt;   &lt;li&gt;DynamicData provider for Entity Framework 6&lt;/li&gt;    &lt;li&gt;EntityDataSource control for Entity Framework 6&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;How to install this preview&lt;/h2&gt;  &lt;p&gt;You can download this preview for ASP.NET DynamicData.EFProvider (&lt;a href="http://www.nuget.org/packages/Microsoft.AspNet.DynamicData.EFProvider/"&gt;http://www.nuget.org/packages/Microsoft.AspNet.DynamicData.EFProvider/&lt;/a&gt;) and EntityDataSource (&lt;a href="http://www.nuget.org/packages/Microsoft.AspNet.EntityDataSource/"&gt;http://www.nuget.org/packages/Microsoft.AspNet.EntityDataSource/&lt;/a&gt;) as preview NuGet packages from the NuGet gallery. You can install these pre-release packages through NuGet using the NuGet Package Manager Console, like this:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Install-Package Microsoft.AspNet.DynamicData.EFProvider -Version 6.0.0-alpha1 –Pre &lt;/li&gt;    &lt;li&gt;Install-Package Microsoft.AspNet.EntityDataSource -Version 6.0.0-alpha1 –Pre &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;Getting started&lt;/h2&gt;  &lt;h3&gt;Microsoft.AspNet.DynamicData.EFProvider&lt;/h3&gt;  &lt;p&gt;This package has a DynamicData EFProvider for Entity Framework 6. This provider can work with a Model (either Code First or EF Designer) which was created using Entity Framework 6. This package also installs the Page Templates, Entity Templates and Field Templates which are required for DynamicData. The templates have been updated to use &lt;strong&gt;Microsoft.AspNet.EntityDataSource&lt;/strong&gt; control which we are also previewing today as well.&lt;/p&gt;  &lt;p&gt;For more information on ASP.NET DynamicData please see &lt;a href="http://msdn.microsoft.com/en-us/library/cc488545.aspx"&gt;http://msdn.microsoft.com/en-us/library/cc488545.aspx&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Following are the steps for using this package in a ASP.NET DynamicData application:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Create a new ASP.NET Dynamic Data Entities Web Application &lt;/li&gt;    &lt;li&gt;Add the Microsoft.AspNet.DynamicData.EFProvider NuGet package &lt;/li&gt;    &lt;li&gt;This will do the following      &lt;ul&gt;       &lt;li&gt;Add a reference to the DynamicData EFProvider binary &lt;/li&gt;        &lt;li&gt;Install the templates. If you are starting with a new project, then you can override the templates. If you have an existing application, then you should be careful when overriding the changes. The templates replace the EntityDataSource control which shipped in .NET with Microsoft.AspNet.EntityDataSource and also have a few bug fixes in the Many-Many field template so they work with Entity Framework 6. &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;Create your model using Entity Framework Code First or EF Designer. &lt;/li&gt;    &lt;li&gt;Add the following code in RegisterRoutes in Global.asax.cs to register your EF Model:      &lt;pre&gt;DefaultModel.RegisterContext(
new Microsoft.AspNet.DynamicData.ModelProviders.EFDataModelProvider(&lt;br /&gt;        () =&gt; newNorthwindEntities1()),
newContextConfiguration { ScaffoldAllTables = true });&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;Run the project &lt;/li&gt;

&lt;li&gt;You would see all the tables listed on the Default page. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Microsoft.AspNet.EntityDataSource Control&lt;/h3&gt;

&lt;p&gt;This is an update to the EntityDataSource control which shipped in the .NET Framework. The EntityDataSource control has been updated to work with Entity Framework 6.&lt;/p&gt;

&lt;p&gt;To use this control, please do the following&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create an ASP.NET application &lt;/li&gt;

&lt;li&gt;Install the package&lt;strong&gt; &lt;/strong&gt;Microsoft.AspNet.EntityDataSource

&lt;ul&gt;
&lt;li&gt;This package will
&lt;ul&gt;
&lt;li&gt;install the runtime binary for &lt;strong&gt;&lt;/strong&gt;Microsoft.AspNet.EntityDataSource &lt;/li&gt;

&lt;li&gt;Install the EntityFramework version 6 NuGet package &lt;/li&gt;

&lt;li&gt;Add the following tag prefix in web.config
&lt;pre&gt;&lt;pages&gt;
&lt;controls&gt;
&lt;add &lt;br /&gt;      tagPrefix="ef" &lt;br /&gt;      assembly="Microsoft.AspNet.EntityDataSource" &lt;br /&gt;      namespace="Microsoft.AspNet.EntityDataSource" /&gt;
&lt;/controls&gt;
&lt;/pages&gt; &lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;Create a new Web Form page &lt;/li&gt;

&lt;li&gt;Use the control as follows and bind it to any Databound control such as GridView, FormView etc.
&lt;pre&gt;&lt;ef:EntityDataSource ID="GridDataSource" runat="server" EnableDelete="true" /&gt; &lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt; &lt;/h5&gt;

&lt;h2&gt;Known Issues&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The templates in Microsoft.AspNet.DynamicData.EFProvider are for C# only. &lt;/li&gt;

&lt;li&gt;The templates in Microsoft.AspNet.DynamicData.EFProvider are for Web Application projects only and will not work for WebSites projects. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;Give feedback&lt;/h2&gt;

&lt;p&gt;If you find any issues with this preview, please file issues at the EntityFramework CodePlex site &lt;a href="https://entityframework.codeplex.com/"&gt;https://entityframework.codeplex.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for trying out the preview and helping us make it better.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498647" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>Preview of Dynamic Data Provider and EntityDataSource Control for EF6</sxp:MobileTitle>
<sxp:MobileContent>This post was originally posted on the .NET Web Development and Tools Blog.
We are pleased to announce an update to ASP.NET DynamicData and EntityDataSource control, so that they work with Entity Framework 6.
What’s in this previewDynamicData provider for Entity Framework 6EntityDataSource control for Entity Framework 6
How to install this preview
You can download this preview for ASP.NET DynamicData.EFProvider (http://www.nuget.org/packages/Microsoft.AspNet.DynamicData.EFProvider/) and EntityDataSource (http://www.nuget.org/packages/Microsoft.AspNet.EntityDataSource/) as preview NuGet packages from the NuGet gallery. You can install these pre-release packages through NuGet using the NuGet Package Manager Console, like this:Install-Package Microsoft.AspNet.DynamicData.EFProvider -Version 6.0.0-alpha1 –Pre Install-Package Microsoft.AspNet.EntityDataSource -Version 6.0.0-alpha1 –Pre
Getting startedMicrosoft.AspNet.DynamicData.EFProvider
This package has a DynamicData EFProvider for Entity Framework 6. This provider can work with a Model (either Code First or EF Designer) which was created using Entity Framework 6. This package also installs the Page Templates, Entity Templates and Field Templates which are required for DynamicData. The templates have been updated to use Microsoft.AspNet.EntityDataSource control which we are also previewing today as well.
For more information on ASP.NET DynamicData please see http://msdn.microsoft.com/en-us/library/cc488545.aspx
Following are the steps for using this package in a ASP.NET DynamicData application:Create a new ASP.NET Dynamic Data Entities Web Application Add the Microsoft.AspNet.DynamicData.EFProvider NuGet package This will do the following      Add a reference to the DynamicData EFProvider binary Install the templates. If you are starting with a new project, then you can override the templates. If you have an existing application, then you should be careful when overriding the changes. The templates replace the EntityDataSource control which shipped in .NET with Microsoft.AspNet.EntityDataSource and also have a few bug fixes in the Many-Many field template so they work with Entity Framework 6. Create your model using Entity Framework Code First or EF Designer. Add the following code in RegisterRoutes in Global.asax.cs to register your EF Model:      DefaultModel.RegisterContext(
new Microsoft.AspNet.DynamicData.ModelProviders.EFDataModelProvider(        () =&gt; newNorthwindEntities1()),
newContextConfiguration { ScaffoldAllTables = true });Run the project You would see all the tables listed on the Default page. Microsoft.AspNet.EntityDataSource Control
This is an update to the EntityDataSource control which shipped in the .NET Framework. The EntityDataSource control has been updated to work with Entity Framework 6.
To use this control, please do the followingCreate an ASP.NET application Install the packageMicrosoft.AspNet.EntityDataSource

This package will
install the runtime binary for Microsoft.AspNet.EntityDataSource Install the EntityFramework version 6 NuGet package Add the following tag prefix in web.config
tagPrefix="ef"       assembly="Microsoft.AspNet.EntityDataSource"       namespace="Microsoft.AspNet.EntityDataSource" /&gt;
Create a new Web Form page Use the control as follows and bind it to any Databound control such as GridView, FormView etc.
Known IssuesThe templates in Microsoft.AspNet.DynamicData.EFProvider are for C# only. The templates in Microsoft.AspNet.DynamicData.EFProvider are for Web Application projects only and will not work for WebSites projects.
Give feedback
If you find any issues with this preview, please file issues at the EntityFramework CodePlex site https://entityframework.codeplex.com
Thank you for trying out the preview and helping us make it better.</sxp:MobileContent>
<sxp:Tag>Entity Framework</sxp:Tag>
<sxp:Tag>Entity Data Source</sxp:Tag>
<sxp:Tag>What's New</sxp:Tag>
</item>
<item>
<title>Enhancements to the App download and In-app purchase reports</title>
<description>&lt;p&gt;We know that the Dev Center reports are one of the data points you use in Dev Center to monitor progress on your apps and determine ways improve your apps. We continuously enhance Dev Center, and this week we delivered improvements to both the App downloads and the In-app purchases reports.&lt;/p&gt; &lt;p&gt;As part of this update, report data may be delayed or unavailable. We are targeting completing the updates over the next few days. &lt;h4&gt;&lt;br&gt;App downloads report&lt;/h4&gt; &lt;p&gt;In the App downloads page, we’ve added a filter to allow you to select a language and view only downloads for that language. This could help you determine the next language to localize your app in, or view download trend of a newly localized version of your app. &lt;p&gt;&lt;a href="http://blogs.windows.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-53-84-metablogapi/clip_5F00_image002_5F00_06FA99F5.jpg"&gt;&lt;img title="clip_image002" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="clip_image002" src="http://blogs.windows.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-53-84-metablogapi/clip_5F00_image002_5F00_thumb_5F00_56D34F31.jpg" width="628" height="414"&gt;&lt;/a&gt; &lt;h4&gt;App download and in-app purchase file exports&lt;/h4&gt; &lt;p&gt;We’ve also added additional data to the App downloads and In-app purchase export spreadsheets, so you can slice and dice the data yourself in Excel. This includes App version, Language, Age group, Gender, Phone manufacturer, and Mobile operator. You can use this data to find trends in your download count and help optimize your app further. &lt;p&gt;&lt;a href="http://blogs.windows.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-53-84-metablogapi/clip_5F00_image004_5F00_240348BD.jpg"&gt;&lt;img title="clip_image004" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" hspace="12" alt="clip_image004" src="http://blogs.windows.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-53-84-metablogapi/clip_5F00_image004_5F00_thumb_5F00_1B16472F.jpg" width="820" height="183"&gt;&lt;/a&gt; &lt;p&gt;We hope this added information about where your app downloads are coming from is useful. If you have ideas for more reporting features, please post these to the &lt;a href="http://wpdev.uservoice.com/forums/110711-dev-center-store" target="_blank"&gt;Windows Phone Dev Center UserVoice forum&lt;/a&gt;&lt;b&gt;&lt;/b&gt;. &lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.windows.com/aggbug.aspx?PostID=589766&amp;AppID=5384&amp;AppType=Weblog&amp;ContentType=0" width="1" height="1"&gt;</description>
<pubDate>Tue, 11 Feb 2014 21:56:04 GMT</pubDate>
<guid isPermaLink="false">d5e57398-b9ef-4490-9955-07cbb4e4a80d:c666de63-49d5-4897-b606-b7073bf6a2fb</guid>
<link>http://blogs.windows.com/windows_phone/b/wpdev/archive/2014/02/11/enhancements-to-the-app-download-and-in-app-purchase-reports.aspx</link>
<author>Bernardo Zamora</author>
<comments>http://blogs.windows.com/windows_phone/b/wpdev/archive/2014/02/11/enhancements-to-the-app-download-and-in-app-purchase-reports.aspx#comments</comments>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>PlatformDevelopment</sxp:FeedId>
<sxp:PublishId>6077727</sxp:PublishId>
<sxp:AssetId>d5e57398-b9ef-4490-9955-07cbb4e4a80d:c666de63-49d5-4897-b606-b7073bf6a2fb</sxp:AssetId>
<sxp:Author>Bernardo Zamora</sxp:Author>
<sxp:Comments>http://blogs.windows.com/windows_phone/b/wpdev/archive/2014/02/11/enhancements-to-the-app-download-and-in-app-purchase-reports.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Tue, 11 Feb 2014 22:41:43 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.windows.com/windows_phone/b/wpdev/archive/2014/02/11/enhancements-to-the-app-download-and-in-app-purchase-reports.aspx</sxp:Link>
<sxp:PublishDate>Tue, 11 Feb 2014 21:56:04 GMT</sxp:PublishDate>
<sxp:RelativeTime>9 hours ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35412510</sxp:SourceItemId>
<sxp:SourceFeedId>2179</sxp:SourceFeedId>
<sxp:SourceName>windows</sxp:SourceName>
<sxp:Title>Enhancements to the App download and In-app purchase reports</sxp:Title>
<sxp:Content>&lt;p&gt;We know that the Dev Center reports are one of the data points you use in Dev Center to monitor progress on your apps and determine ways improve your apps. We continuously enhance Dev Center, and this week we delivered improvements to both the App downloads and the In-app purchases reports.&lt;/p&gt; &lt;p&gt;As part of this update, report data may be delayed or unavailable. We are targeting completing the updates over the next few days. &lt;h4&gt;&lt;br&gt;App downloads report&lt;/h4&gt; &lt;p&gt;In the App downloads page, we’ve added a filter to allow you to select a language and view only downloads for that language. This could help you determine the next language to localize your app in, or view download trend of a newly localized version of your app. &lt;p&gt;&lt;a href="http://blogs.windows.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-53-84-metablogapi/clip_5F00_image002_5F00_06FA99F5.jpg"&gt;&lt;img title="clip_image002" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="clip_image002" src="http://blogs.windows.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-53-84-metablogapi/clip_5F00_image002_5F00_thumb_5F00_56D34F31.jpg" width="628" height="414"&gt;&lt;/a&gt; &lt;h4&gt;App download and in-app purchase file exports&lt;/h4&gt; &lt;p&gt;We’ve also added additional data to the App downloads and In-app purchase export spreadsheets, so you can slice and dice the data yourself in Excel. This includes App version, Language, Age group, Gender, Phone manufacturer, and Mobile operator. You can use this data to find trends in your download count and help optimize your app further. &lt;p&gt;&lt;a href="http://blogs.windows.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-53-84-metablogapi/clip_5F00_image004_5F00_240348BD.jpg"&gt;&lt;img title="clip_image004" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" hspace="12" alt="clip_image004" src="http://blogs.windows.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-53-84-metablogapi/clip_5F00_image004_5F00_thumb_5F00_1B16472F.jpg" width="820" height="183"&gt;&lt;/a&gt; &lt;p&gt;We hope this added information about where your app downloads are coming from is useful. If you have ideas for more reporting features, please post these to the &lt;a href="http://wpdev.uservoice.com/forums/110711-dev-center-store" target="_blank"&gt;Windows Phone Dev Center UserVoice forum&lt;/a&gt;&lt;b&gt;&lt;/b&gt;. &lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.windows.com/aggbug.aspx?PostID=589766&amp;AppID=5384&amp;AppType=Weblog&amp;ContentType=0" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>Enhancements to the App download and In-app purchase reports</sxp:MobileTitle>
<sxp:MobileContent>We know that the Dev Center reports are one of the data points you use in Dev Center to monitor progress on your apps and determine ways improve your apps. We continuously enhance Dev Center, and this week we delivered improvements to both the App downloads and the In-app purchases reports.
As part of this update, report data may be delayed or unavailable. We are targeting completing the updates over the next few days. App downloads report
In the App downloads page, we’ve added a filter to allow you to select a language and view only downloads for that language. This could help you determine the next language to localize your app in, or view download trend of a newly localized version of your app.
App download and in-app purchase file exports
We’ve also added additional data to the App downloads and In-app purchase export spreadsheets, so you can slice and dice the data yourself in Excel. This includes App version, Language, Age group, Gender, Phone manufacturer, and Mobile operator. You can use this data to find trends in your download count and help optimize your app further.

We hope this added information about where your app downloads are coming from is useful. If you have ideas for more reporting features, please post these to the Windows Phone Dev Center UserVoice forum.</sxp:MobileContent>
</item>
<item>
<title>Announcing preview of Microsoft.AspNet.Identity 2.0.0-beta1</title>
<description>&lt;p&gt;&lt;font size="2"&gt;Today, we are releasing a preview of ASP.NET Identity. The main focus in this release was to add support for two-factor authentication and fix bugs. We released 2.0.0-alpha1 in December 2013 where we added lots of features. Please read about 2.0.0-alpha1 release &lt;/font&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/12/20/announcing-preview-of-microsoft-aspnet-identity-2-0-0-alpha1.aspx"&gt;&lt;font size="2"&gt;here&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt;.&lt;/font&gt;&lt;/p&gt;  &lt;h1&gt;Download this release&lt;/h1&gt;  &lt;p&gt;&lt;font size="2"&gt;You can download ASP.NET Identity from the NuGet gallery. You can install or update to these pre-release packages through NuGet using the NuGet Package Manager Console, like this:&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;ul&gt;&lt;font size="2"&gt;&lt;/font&gt;    &lt;li&gt;&lt;font size="2"&gt;Install-Package Microsoft.AspNet.Identity.EntityFramework –Version 2.0.0-beta1 –Pre&lt;/font&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;    &lt;li&gt;&lt;font size="2"&gt;Install-Package Microsoft.AspNet.Identity.Core -Version 2.0.0-beta1 –Pre&lt;/font&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;    &lt;li&gt;&lt;font size="2"&gt;Install-Package Microsoft.AspNet.Identity.OWIN -Version 2.0.0-beta1 –Pre&lt;/font&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;    &lt;li&gt;&lt;font size="2"&gt;Install-Package Microsoft.AspNet.Identity.Samples -Version 2.0.0-beta1 –Pre&lt;/font&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;&lt;/ul&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;Please remember to select the “Include Prerelease” option when searching for packages using the NuGet Package Manager or the Package Manager Console. For more information on how to install pre-release packages please read &lt;/font&gt;&lt;a href="http://docs.nuget.org/docs/Reference/Versioning#Prerelease_Versions"&gt;&lt;font size="2"&gt;http://docs.nuget.org/docs/Reference/Versioning#Prerelease_Versions&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt; and &lt;/font&gt;&lt;a href="http://docs.nuget.org/docs/release-notes/nuget-1.7#Show_prerelease_packages_in_the_Manage_NuGet_packages_dialog"&gt;&lt;font size="2"&gt;http://docs.nuget.org/docs/release-notes/nuget-1.7#Show_prerelease_packages_in_the_Manage_NuGet_packages_dialog&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h1&gt;What’s in this release?&lt;/h1&gt;  &lt;p&gt;&lt;font size="2"&gt;Following is the list of features and major issues that were fixed in 2.0.0-Beta1.&lt;/font&gt;&lt;/p&gt;  &lt;h2&gt;Two-Factor Authentication&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;ASP.NET Identity now support two-factor authentication. Two-factor authentication provides an extra layer of security to your user accounts in the case where your password gets compromised. Most of the websites protect their data by having a user create an account on their website with a username and password. Passwords are not very secure and sometimes users choose weak passwords which can lead to user accounts being compromised.&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;To add an extra layer of security, it is important to add a second factor of authentication after a user enters username/ password. Since a password is something a user knows, two-factor authentication allows youto authenticate the user with something only a user possesses such as a phone or email account. Two-factor authentication involves sending the user a code to something only a user has access to such as sending a SMS to user’s phone or emailing the code. The user can enter the code when they get it on their phone or email.&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;In ASP.NET Identity, the SMS and Email two-factor providers are built in so you can easily configure them to send a text message or email. You can extend and write your own providers such as QR code generators and use Authenticator apps on phones to validate them.&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;A user can also manage the two-factor authentication options and can enable/ disable two-factor authentication for their user account. This is demonstrated in the ASP.NET Identity Samples NuGet package. A user can also choose to remember the two-factor authentication option if the device they are accessing the website is a personal device so that when they login, they are not asked to verify the two-factor authentication each time. This is a more common usage that we see today in most of the websites.&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;To try out this feature, you can install ASP.NET Identity Samples NuGet package (&lt;i&gt;in an Empty ASP.NET app&lt;/i&gt;) and follow the steps to configure and run the project.&lt;/font&gt;&lt;b&gt; &lt;/b&gt;&lt;/p&gt;  &lt;h2&gt;Indexing on Username&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;In ASP.NET Identity Entity Framework implementation, we have added a unique index on the Username using the new IndexAttribute in EF 6.1.0-Beta1. We did this to ensure that Usernames are always unique and there was no race condition in which you could end up with duplicate usernames.&lt;b&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;  &lt;h2&gt;Enhanced Password Validator&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;The password validator that was shipped in ASP.NET Identity 1.0 was a fairly basic password validator which was only validating the minimum length. There is a new password validator which gives you more control over the complexity of the password. Please note that even if you turn on all the settings in this password, we do encourage you to enable two-factor authentication for the user accounts.&lt;/font&gt;&lt;/p&gt;  &lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:ca626a03-fbd3-4fa2-9407-e4966861808b" class="wlWriterEditableSmartContent" style="margin: 0px; padding: 0px; float: none; display: inline;"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px"&gt;Code Snippet&lt;/div&gt; &lt;div style="background: #ddd; max-height: 300px; overflow: auto"&gt; &lt;ol start="1" style="background: #ffffff; margin: 0 0 0 2em; padding: 0 0 0 5px;"&gt; &lt;li&gt;&lt;span style="background:#ffffff;color:#000000"&gt;manager.PasswordValidator = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;new&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; PasswordValidator&lt;/span&gt;&lt;/li&gt; &lt;li style="background: #f3f3f3"&gt;            &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt; &lt;li&gt;                &lt;span style="background:#ffffff;color:#000000"&gt;RequiredLength = 6, &lt;/span&gt;&lt;/li&gt; &lt;li style="background: #f3f3f3"&gt;                &lt;span style="background:#ffffff;color:#000000"&gt;RequireNonLetterOrDigit = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;false&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;,&lt;/span&gt;&lt;/li&gt; &lt;li&gt;                &lt;span style="background:#ffffff;color:#000000"&gt;RequireDigit = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;false&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;,&lt;/span&gt;&lt;/li&gt; &lt;li style="background: #f3f3f3"&gt;                &lt;span style="background:#ffffff;color:#000000"&gt;RequireLowercase = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;false&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;,&lt;/span&gt;&lt;/li&gt; &lt;li&gt;                &lt;span style="background:#ffffff;color:#000000"&gt;RequireUppercase = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;false&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;,&lt;/span&gt;&lt;/li&gt; &lt;li style="background: #f3f3f3"&gt;            &lt;span style="background:#ffffff;color:#000000"&gt;};&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;  &lt;h2&gt;ASP.NET Identity Samples NuGet package&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;We are releasing a &lt;strong&gt;Samples&lt;/strong&gt; NuGet package to make it easier to install and run samples for ASP.NET Identity and follow the best practices. This is a sample ASP.NET MVC application. Please modify the code to suit your application before you deploy this in production.&lt;em&gt;&lt;strong&gt; The sample should be installed in an Empty ASP.NET application&lt;/strong&gt;&lt;/em&gt;. &lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;Following are the features in this samples package&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;ul&gt;   &lt;li&gt;&lt;font size="2"&gt;Initialize ASP.NET Identity to create an Admin user and Admin role.&lt;b&gt;&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;&lt;font size="2"&gt;Since ASP.NET Identity is Entity Framework based in this sample, you can use the existing methods of initializing the database as you would have done in EF. &lt;/font&gt;&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;font size="2"&gt;Configure user and password validation.&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Register a user and login using username and password&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Login using a social account such as Facebook, Twitter, Google, Microsoft account etc.&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Basic User management&lt;/font&gt;&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;&lt;font size="2"&gt;Do Create, Update, List and Delete Users. Assign a Role to a new user.&lt;/font&gt;&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;font size="2"&gt;Basic Role management&lt;/font&gt;&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;&lt;font size="2"&gt;Do Create, Update, List and Delete Roles.&lt;/font&gt;&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;font size="2"&gt;Account Confirmation&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Password Reset&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Two-Factor authentication&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Security Token providers&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Configure the Db context and UserManager to use a single instance per request.&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;The AccountController has been split into Account and Manage controller. This was done to simplify the account management code.&lt;/font&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Following is the list of features and major issues that were fixed in 2.0.0-Alpha1.&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;For the full list of the features please read the following blog &lt;/font&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/12/20/announcing-preview-of-microsoft-aspnet-identity-2-0-0-alpha1.aspx"&gt;&lt;font size="2"&gt;post&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt; for more details.&lt;b&gt; &lt;/b&gt;&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;ul&gt;   &lt;li&gt;&lt;font size="2"&gt;Account Confirmation&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Password Reset&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Security Token Provider&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Make the type of Primary Key be extensible for Users and Roles&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Support IQueryable on Users and Roles&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Support Delete operation through the UserManager&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;UserManagerFactory Middleware&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;DbContextFactory Middleware&lt;/font&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;h2&gt;Entity Framework 6.1.0-Beta1&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;ASP.NET Identity 2.0.0-beta1 depends upon Entity Framework 6.1.0-beta1 which was also released today. For more details please read the following announcement &lt;/font&gt;&lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/02/11/ef-6-1-0-beta-1-available.aspx"&gt;&lt;font size="2"&gt;post&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt; for more details.&lt;/font&gt;&lt;/p&gt;  &lt;h2&gt;List of bugs fixed&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;You can look at all the bugs that were fixed in this release by clicking this &lt;/font&gt;&lt;a href="https://aspnetidentity.codeplex.com/workitem/list/advanced?keyword=&amp;status=Closed&amp;type=All&amp;priority=All&amp;release=2.0.0|2.0.0-Beta1&amp;assignedTo=All&amp;component=All&amp;sortField=LastUpdatedDate&amp;sortDirection=Descending&amp;page=0&amp;reasonClosed=All"&gt;&lt;font size="2"&gt;link&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt;.&lt;/font&gt; &lt;/p&gt;  &lt;h2&gt;Samples&lt;/h2&gt;  &lt;ul&gt;   &lt;li&gt;&lt;font size="2"&gt;We have a sample project which shows these new features at &lt;/font&gt;&lt;a href="https://aspnet.codeplex.com/"&gt;&lt;font size="2"&gt;https://aspnet.codeplex.com&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt;. Please look for the Identity folder in the source. https://aspnet.codeplex.com/SourceControl/latest&lt;/font&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;    &lt;li&gt;&lt;font size="2"&gt;For documentation on ASP.NET Identity please visit &lt;/font&gt;&lt;a href="http://www.asp.net/identity"&gt;&lt;font size="2"&gt;http://www.asp.net/identity&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt;. We are working on adding more documentation on this site.&lt;/font&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;&lt;b&gt;Known Issues/ Change list&lt;/b&gt;&lt;/h2&gt;  &lt;h3&gt;Migrating from ASP.NET Identity 2.0.0-alpha1 to 2.0.0-beta1&lt;/h3&gt;  &lt;p&gt;Following are the changes you will have to make to your application if you are upgrading from 2.0.0-alpha1 to 2.0.0-Beta1 of Identity.&lt;/p&gt;  &lt;p&gt;&lt;font size="2"&gt;· GetUserManager() extension method moved under Microsoft.AspNet.Identity.Owin namespace&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· GetConfirmationToken property on UserManager changed to GetEmailConfirmationToken&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· ConfirmUser() method changed to ConfirmEmail()&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· IsConfirmed() method changed to IsEmailConfirmed()&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· UserManagerFactory() changed to CreatePerOwinContext&lt;T&gt;()&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· ApplicationCreate static method on UserManager method now has an additional method which takes in a parameter for IOwinContext&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· PasswordResetTokens and UserConfirmationTokens properties on UserManager are now replaced with a single UserTokenProvider property on UserManager&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· DataProtectorTokenProvider class now strongly typed with generics DataProtectorTokenProvider&lt;TUser&gt;&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· IsConfirmed column in the AspnetUsers Table has been renamed to EmailConfirmed.&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;ul&gt;&lt;font size="2"&gt;&lt;/font&gt;    &lt;ul&gt;&lt;font size="2"&gt;&lt;/font&gt;      &lt;li&gt;&lt;font size="2"&gt;If you are using Entity Framework Code First Migrations to migrate the database from 2.0.0-alpha1 to 2.0.0-Beta1 then you need to edit the migrations script that were generated by the EF migrations.&lt;/font&gt; &lt;/li&gt;   &lt;/ul&gt; &lt;/ul&gt;  &lt;p&gt;&lt;b&gt;                       Following is what is generated&lt;/b&gt;&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;            AddColumn("dbo.AspNetUsers", "EmailConfirmed", c =&gt; c.Boolean(nullable: false));&lt;/p&gt;    &lt;p&gt;            DropColumn("dbo.AspNetUsers", "IsConfirmed");&lt;/p&gt;    &lt;p&gt;            &lt;b&gt;You need to change it to&lt;/b&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;                        RenameColumn("dbo.AspNetUsers", "IsConfirmed","EmailConfirmed");&lt;/p&gt;  &lt;p&gt;&lt;b&gt;Known issues in Entity Framework&lt;/b&gt; while migrating from Entity Framework 6.1.0-alpha1 to 6.1.0-beta&lt;/p&gt;  &lt;p&gt;&lt;font size="2"&gt;Entity Framework changed the way indexes were being recognized which causes the indexes between tables to be generated even though they exist. This is a known behavior and occurs only when migrating from EF 6.1.0-alpha to 6.1.0-beta1. For ASP.NET Identity the generated migration script will have the following incorrect entries&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;            CreateIndex("dbo.AspNetUserRoles", "UserId");&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;            CreateIndex("dbo.AspNetUserRoles", "RoleId");&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;            CreateIndex("dbo.AspNetUsers", "VehicleId");&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;            CreateIndex("dbo.AspNetUserClaims", "UserId");&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;            CreateIndex("dbo.AspNetUserLogins", "UserId");&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;Any custom index declaration by user defined classes will also be present here. Running this as is will cause it to fail since the indexes are already present. The solution is to delete these ''CreateIndex' calls for existing indexes&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;h3&gt;Migrating from ASP.NET Identity 1.0 to 2.0.0-beta1&lt;/h3&gt;  &lt;p&gt;&lt;font size="2"&gt;If you are migrating from ASP.NET Identity 1.0 to 2.0.0-Beta1, then please refer to this article on how you can use Entity Framework Code First migrations to migrate your database &lt;/font&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/12/20/updating-asp-net-applications-from-asp-net-identity-1-0-to-2-0-0-alpha1.aspx"&gt;&lt;font size="2"&gt;http://blogs.msdn.com/b/webdev/archive/2013/12/20/updating-asp-net-applications-from-asp-net-identity-1-0-to-2-0-0-alpha1.aspx&lt;/font&gt;&lt;/a&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;This article is based on migrating to ASP.NET Identity 2.0.0-alhpa1 but the same steps apply to ASP.NET Identity 2.0.0-beta1&lt;/font&gt;&lt;/p&gt;  &lt;h3&gt;Give feedback and get support&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;&lt;font size="2"&gt;If you find any bugs please open them at our Codeplex Site where we track all our bugs &lt;/font&gt;&lt;a href="https://aspnetidentity.codeplex.com/"&gt;&lt;font size="2"&gt;https://aspnetidentity.codeplex.com/&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;    &lt;li&gt;&lt;font size="2"&gt;If you want to discuss these features, please discuss them on Stack Overflow and use the following tag “asp.net-identity”&lt;/font&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;&lt;/ul&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;Thank You for trying out the preview and your feedback for ASP.NET Identity.&lt;/font&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498620" width="1" height="1"&gt;</description>
<pubDate>Tue, 11 Feb 2014 21:45:57 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10498620</guid>
<link>http://blogs.msdn.com/b/webdev/archive/2014/02/11/announcing-preview-of-microsoft-aspnet-identity-2-0-0-beta1.aspx</link>
<author>pranav rastogi</author>
<comments>http://blogs.msdn.com/b/webdev/archive/2014/02/11/announcing-preview-of-microsoft-aspnet-identity-2-0-0-beta1.aspx#comments</comments>
<category>ASP.NET MVC</category>
<category>Security</category>
<category>Owin</category>
<category>ASP.NET Identity</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>PlatformDevelopment</sxp:FeedId>
<sxp:PublishId>6077645</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10498620</sxp:AssetId>
<sxp:Author>pranav rastogi</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/webdev/archive/2014/02/11/announcing-preview-of-microsoft-aspnet-identity-2-0-0-beta1.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Tue, 11 Feb 2014 22:37:16 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/webdev/archive/2014/02/11/announcing-preview-of-microsoft-aspnet-identity-2-0-0-beta1.aspx</sxp:Link>
<sxp:PublishDate>Tue, 11 Feb 2014 21:45:57 GMT</sxp:PublishDate>
<sxp:RelativeTime>9 hours ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35412234</sxp:SourceItemId>
<sxp:SourceFeedId>2421</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>Announcing preview of Microsoft.AspNet.Identity 2.0.0-beta1</sxp:Title>
<sxp:Content>&lt;p&gt;&lt;font size="2"&gt;Today, we are releasing a preview of ASP.NET Identity. The main focus in this release was to add support for two-factor authentication and fix bugs. We released 2.0.0-alpha1 in December 2013 where we added lots of features. Please read about 2.0.0-alpha1 release &lt;/font&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/12/20/announcing-preview-of-microsoft-aspnet-identity-2-0-0-alpha1.aspx"&gt;&lt;font size="2"&gt;here&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt;.&lt;/font&gt;&lt;/p&gt;  &lt;h1&gt;Download this release&lt;/h1&gt;  &lt;p&gt;&lt;font size="2"&gt;You can download ASP.NET Identity from the NuGet gallery. You can install or update to these pre-release packages through NuGet using the NuGet Package Manager Console, like this:&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;ul&gt;&lt;font size="2"&gt;&lt;/font&gt;    &lt;li&gt;&lt;font size="2"&gt;Install-Package Microsoft.AspNet.Identity.EntityFramework –Version 2.0.0-beta1 –Pre&lt;/font&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;    &lt;li&gt;&lt;font size="2"&gt;Install-Package Microsoft.AspNet.Identity.Core -Version 2.0.0-beta1 –Pre&lt;/font&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;    &lt;li&gt;&lt;font size="2"&gt;Install-Package Microsoft.AspNet.Identity.OWIN -Version 2.0.0-beta1 –Pre&lt;/font&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;    &lt;li&gt;&lt;font size="2"&gt;Install-Package Microsoft.AspNet.Identity.Samples -Version 2.0.0-beta1 –Pre&lt;/font&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;&lt;/ul&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;Please remember to select the “Include Prerelease” option when searching for packages using the NuGet Package Manager or the Package Manager Console. For more information on how to install pre-release packages please read &lt;/font&gt;&lt;a href="http://docs.nuget.org/docs/Reference/Versioning#Prerelease_Versions"&gt;&lt;font size="2"&gt;http://docs.nuget.org/docs/Reference/Versioning#Prerelease_Versions&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt; and &lt;/font&gt;&lt;a href="http://docs.nuget.org/docs/release-notes/nuget-1.7#Show_prerelease_packages_in_the_Manage_NuGet_packages_dialog"&gt;&lt;font size="2"&gt;http://docs.nuget.org/docs/release-notes/nuget-1.7#Show_prerelease_packages_in_the_Manage_NuGet_packages_dialog&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h1&gt;What’s in this release?&lt;/h1&gt;  &lt;p&gt;&lt;font size="2"&gt;Following is the list of features and major issues that were fixed in 2.0.0-Beta1.&lt;/font&gt;&lt;/p&gt;  &lt;h2&gt;Two-Factor Authentication&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;ASP.NET Identity now support two-factor authentication. Two-factor authentication provides an extra layer of security to your user accounts in the case where your password gets compromised. Most of the websites protect their data by having a user create an account on their website with a username and password. Passwords are not very secure and sometimes users choose weak passwords which can lead to user accounts being compromised.&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;To add an extra layer of security, it is important to add a second factor of authentication after a user enters username/ password. Since a password is something a user knows, two-factor authentication allows youto authenticate the user with something only a user possesses such as a phone or email account. Two-factor authentication involves sending the user a code to something only a user has access to such as sending a SMS to user’s phone or emailing the code. The user can enter the code when they get it on their phone or email.&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;In ASP.NET Identity, the SMS and Email two-factor providers are built in so you can easily configure them to send a text message or email. You can extend and write your own providers such as QR code generators and use Authenticator apps on phones to validate them.&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;A user can also manage the two-factor authentication options and can enable/ disable two-factor authentication for their user account. This is demonstrated in the ASP.NET Identity Samples NuGet package. A user can also choose to remember the two-factor authentication option if the device they are accessing the website is a personal device so that when they login, they are not asked to verify the two-factor authentication each time. This is a more common usage that we see today in most of the websites.&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;To try out this feature, you can install ASP.NET Identity Samples NuGet package (&lt;i&gt;in an Empty ASP.NET app&lt;/i&gt;) and follow the steps to configure and run the project.&lt;/font&gt;&lt;b&gt; &lt;/b&gt;&lt;/p&gt;  &lt;h2&gt;Indexing on Username&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;In ASP.NET Identity Entity Framework implementation, we have added a unique index on the Username using the new IndexAttribute in EF 6.1.0-Beta1. We did this to ensure that Usernames are always unique and there was no race condition in which you could end up with duplicate usernames.&lt;b&gt;&lt;/b&gt;&lt;/font&gt;&lt;/p&gt;  &lt;h2&gt;Enhanced Password Validator&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;The password validator that was shipped in ASP.NET Identity 1.0 was a fairly basic password validator which was only validating the minimum length. There is a new password validator which gives you more control over the complexity of the password. Please note that even if you turn on all the settings in this password, we do encourage you to enable two-factor authentication for the user accounts.&lt;/font&gt;&lt;/p&gt;  &lt;div id="scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:ca626a03-fbd3-4fa2-9407-e4966861808b" class="wlWriterEditableSmartContent" style="margin: 0px; padding: 0px; float: none; display: inline;"&gt; &lt;div style="border: #000080 1px solid; color: #000; font-family: 'Courier New', Courier, Monospace; font-size: 10pt"&gt; &lt;div style="background: #000080; color: #fff; font-family: Verdana, Tahoma, Arial, sans-serif; font-weight: bold; padding: 2px 5px"&gt;Code Snippet&lt;/div&gt; &lt;div style="background: #ddd; max-height: 300px; overflow: auto"&gt; &lt;ol start="1" style="background: #ffffff; margin: 0 0 0 2em; padding: 0 0 0 5px;"&gt; &lt;li&gt;&lt;span style="background:#ffffff;color:#000000"&gt;manager.PasswordValidator = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;new&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt; PasswordValidator&lt;/span&gt;&lt;/li&gt; &lt;li style="background: #f3f3f3"&gt;            &lt;span style="background:#ffffff;color:#000000"&gt;{&lt;/span&gt;&lt;/li&gt; &lt;li&gt;                &lt;span style="background:#ffffff;color:#000000"&gt;RequiredLength = 6, &lt;/span&gt;&lt;/li&gt; &lt;li style="background: #f3f3f3"&gt;                &lt;span style="background:#ffffff;color:#000000"&gt;RequireNonLetterOrDigit = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;false&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;,&lt;/span&gt;&lt;/li&gt; &lt;li&gt;                &lt;span style="background:#ffffff;color:#000000"&gt;RequireDigit = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;false&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;,&lt;/span&gt;&lt;/li&gt; &lt;li style="background: #f3f3f3"&gt;                &lt;span style="background:#ffffff;color:#000000"&gt;RequireLowercase = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;false&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;,&lt;/span&gt;&lt;/li&gt; &lt;li&gt;                &lt;span style="background:#ffffff;color:#000000"&gt;RequireUppercase = &lt;/span&gt;&lt;span style="background:#ffffff;color:#0000ff"&gt;false&lt;/span&gt;&lt;span style="background:#ffffff;color:#000000"&gt;,&lt;/span&gt;&lt;/li&gt; &lt;li style="background: #f3f3f3"&gt;            &lt;span style="background:#ffffff;color:#000000"&gt;};&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;  &lt;h2&gt;ASP.NET Identity Samples NuGet package&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;We are releasing a &lt;strong&gt;Samples&lt;/strong&gt; NuGet package to make it easier to install and run samples for ASP.NET Identity and follow the best practices. This is a sample ASP.NET MVC application. Please modify the code to suit your application before you deploy this in production.&lt;em&gt;&lt;strong&gt; The sample should be installed in an Empty ASP.NET application&lt;/strong&gt;&lt;/em&gt;. &lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;Following are the features in this samples package&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;ul&gt;   &lt;li&gt;&lt;font size="2"&gt;Initialize ASP.NET Identity to create an Admin user and Admin role.&lt;b&gt;&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;&lt;font size="2"&gt;Since ASP.NET Identity is Entity Framework based in this sample, you can use the existing methods of initializing the database as you would have done in EF. &lt;/font&gt;&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;font size="2"&gt;Configure user and password validation.&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Register a user and login using username and password&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Login using a social account such as Facebook, Twitter, Google, Microsoft account etc.&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Basic User management&lt;/font&gt;&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;&lt;font size="2"&gt;Do Create, Update, List and Delete Users. Assign a Role to a new user.&lt;/font&gt;&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;font size="2"&gt;Basic Role management&lt;/font&gt;&lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;&lt;font size="2"&gt;Do Create, Update, List and Delete Roles.&lt;/font&gt;&lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;font size="2"&gt;Account Confirmation&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Password Reset&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Two-Factor authentication&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Security Token providers&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Configure the Db context and UserManager to use a single instance per request.&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;The AccountController has been split into Account and Manage controller. This was done to simplify the account management code.&lt;/font&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Following is the list of features and major issues that were fixed in 2.0.0-Alpha1.&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;For the full list of the features please read the following blog &lt;/font&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/12/20/announcing-preview-of-microsoft-aspnet-identity-2-0-0-alpha1.aspx"&gt;&lt;font size="2"&gt;post&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt; for more details.&lt;b&gt; &lt;/b&gt;&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;ul&gt;   &lt;li&gt;&lt;font size="2"&gt;Account Confirmation&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Password Reset&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Security Token Provider&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Make the type of Primary Key be extensible for Users and Roles&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Support IQueryable on Users and Roles&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;Support Delete operation through the UserManager&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;UserManagerFactory Middleware&lt;/font&gt;&lt;/li&gt;    &lt;li&gt;&lt;font size="2"&gt;DbContextFactory Middleware&lt;/font&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;h2&gt;Entity Framework 6.1.0-Beta1&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;ASP.NET Identity 2.0.0-beta1 depends upon Entity Framework 6.1.0-beta1 which was also released today. For more details please read the following announcement &lt;/font&gt;&lt;a href="http://blogs.msdn.com/b/adonet/archive/2014/02/11/ef-6-1-0-beta-1-available.aspx"&gt;&lt;font size="2"&gt;post&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt; for more details.&lt;/font&gt;&lt;/p&gt;  &lt;h2&gt;List of bugs fixed&lt;/h2&gt;  &lt;p&gt;&lt;font size="2"&gt;You can look at all the bugs that were fixed in this release by clicking this &lt;/font&gt;&lt;a href="https://aspnetidentity.codeplex.com/workitem/list/advanced?keyword=&amp;status=Closed&amp;type=All&amp;priority=All&amp;release=2.0.0|2.0.0-Beta1&amp;assignedTo=All&amp;component=All&amp;sortField=LastUpdatedDate&amp;sortDirection=Descending&amp;page=0&amp;reasonClosed=All"&gt;&lt;font size="2"&gt;link&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt;.&lt;/font&gt; &lt;/p&gt;  &lt;h2&gt;Samples&lt;/h2&gt;  &lt;ul&gt;   &lt;li&gt;&lt;font size="2"&gt;We have a sample project which shows these new features at &lt;/font&gt;&lt;a href="https://aspnet.codeplex.com/"&gt;&lt;font size="2"&gt;https://aspnet.codeplex.com&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt;. Please look for the Identity folder in the source. https://aspnet.codeplex.com/SourceControl/latest&lt;/font&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;    &lt;li&gt;&lt;font size="2"&gt;For documentation on ASP.NET Identity please visit &lt;/font&gt;&lt;a href="http://www.asp.net/identity"&gt;&lt;font size="2"&gt;http://www.asp.net/identity&lt;/font&gt;&lt;/a&gt;&lt;font size="2"&gt;. We are working on adding more documentation on this site.&lt;/font&gt;&lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;&lt;b&gt;Known Issues/ Change list&lt;/b&gt;&lt;/h2&gt;  &lt;h3&gt;Migrating from ASP.NET Identity 2.0.0-alpha1 to 2.0.0-beta1&lt;/h3&gt;  &lt;p&gt;Following are the changes you will have to make to your application if you are upgrading from 2.0.0-alpha1 to 2.0.0-Beta1 of Identity.&lt;/p&gt;  &lt;p&gt;&lt;font size="2"&gt;· GetUserManager() extension method moved under Microsoft.AspNet.Identity.Owin namespace&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· GetConfirmationToken property on UserManager changed to GetEmailConfirmationToken&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· ConfirmUser() method changed to ConfirmEmail()&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· IsConfirmed() method changed to IsEmailConfirmed()&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· UserManagerFactory() changed to CreatePerOwinContext&lt;T&gt;()&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· ApplicationCreate static method on UserManager method now has an additional method which takes in a parameter for IOwinContext&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· PasswordResetTokens and UserConfirmationTokens properties on UserManager are now replaced with a single UserTokenProvider property on UserManager&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· DataProtectorTokenProvider class now strongly typed with generics DataProtectorTokenProvider&lt;TUser&gt;&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;· IsConfirmed column in the AspnetUsers Table has been renamed to EmailConfirmed.&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;ul&gt;&lt;font size="2"&gt;&lt;/font&gt;    &lt;ul&gt;&lt;font size="2"&gt;&lt;/font&gt;      &lt;li&gt;&lt;font size="2"&gt;If you are using Entity Framework Code First Migrations to migrate the database from 2.0.0-alpha1 to 2.0.0-Beta1 then you need to edit the migrations script that were generated by the EF migrations.&lt;/font&gt; &lt;/li&gt;   &lt;/ul&gt; &lt;/ul&gt;  &lt;p&gt;&lt;b&gt;                       Following is what is generated&lt;/b&gt;&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;            AddColumn("dbo.AspNetUsers", "EmailConfirmed", c =&gt; c.Boolean(nullable: false));&lt;/p&gt;    &lt;p&gt;            DropColumn("dbo.AspNetUsers", "IsConfirmed");&lt;/p&gt;    &lt;p&gt;            &lt;b&gt;You need to change it to&lt;/b&gt;&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;                        RenameColumn("dbo.AspNetUsers", "IsConfirmed","EmailConfirmed");&lt;/p&gt;  &lt;p&gt;&lt;b&gt;Known issues in Entity Framework&lt;/b&gt; while migrating from Entity Framework 6.1.0-alpha1 to 6.1.0-beta&lt;/p&gt;  &lt;p&gt;&lt;font size="2"&gt;Entity Framework changed the way indexes were being recognized which causes the indexes between tables to be generated even though they exist. This is a known behavior and occurs only when migrating from EF 6.1.0-alpha to 6.1.0-beta1. For ASP.NET Identity the generated migration script will have the following incorrect entries&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;            CreateIndex("dbo.AspNetUserRoles", "UserId");&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;            CreateIndex("dbo.AspNetUserRoles", "RoleId");&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;            CreateIndex("dbo.AspNetUsers", "VehicleId");&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;            CreateIndex("dbo.AspNetUserClaims", "UserId");&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;            CreateIndex("dbo.AspNetUserLogins", "UserId");&lt;/font&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;Any custom index declaration by user defined classes will also be present here. Running this as is will cause it to fail since the indexes are already present. The solution is to delete these ''CreateIndex' calls for existing indexes&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;&lt;b&gt;&lt;/b&gt;&lt;/p&gt;  &lt;h3&gt;Migrating from ASP.NET Identity 1.0 to 2.0.0-beta1&lt;/h3&gt;  &lt;p&gt;&lt;font size="2"&gt;If you are migrating from ASP.NET Identity 1.0 to 2.0.0-Beta1, then please refer to this article on how you can use Entity Framework Code First migrations to migrate your database &lt;/font&gt;&lt;a href="http://blogs.msdn.com/b/webdev/archive/2013/12/20/updating-asp-net-applications-from-asp-net-identity-1-0-to-2-0-0-alpha1.aspx"&gt;&lt;font size="2"&gt;http://blogs.msdn.com/b/webdev/archive/2013/12/20/updating-asp-net-applications-from-asp-net-identity-1-0-to-2-0-0-alpha1.aspx&lt;/font&gt;&lt;/a&gt;&lt;/p&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;This article is based on migrating to ASP.NET Identity 2.0.0-alhpa1 but the same steps apply to ASP.NET Identity 2.0.0-beta1&lt;/font&gt;&lt;/p&gt;  &lt;h3&gt;Give feedback and get support&lt;/h3&gt;  &lt;ul&gt;   &lt;li&gt;&lt;font size="2"&gt;If you find any bugs please open them at our Codeplex Site where we track all our bugs &lt;/font&gt;&lt;a href="https://aspnetidentity.codeplex.com/"&gt;&lt;font size="2"&gt;https://aspnetidentity.codeplex.com/&lt;/font&gt;&lt;/a&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;    &lt;li&gt;&lt;font size="2"&gt;If you want to discuss these features, please discuss them on Stack Overflow and use the following tag “asp.net-identity”&lt;/font&gt;&lt;/li&gt;   &lt;font size="2"&gt;&lt;/font&gt;&lt;/ul&gt; &lt;font size="2"&gt;&lt;/font&gt;  &lt;p&gt;&lt;font size="2"&gt;Thank You for trying out the preview and your feedback for ASP.NET Identity.&lt;/font&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498620" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>Announcing preview of Microsoft.AspNet.Identity 2.0.0-beta1</sxp:MobileTitle>
<sxp:MobileContent>Today, we are releasing a preview of ASP.NET Identity. The main focus in this release was to add support for two-factor authentication and fix bugs. We released 2.0.0-alpha1 in December 2013 where we added lots of features. Please read about 2.0.0-alpha1 release here.Download this release
You can download ASP.NET Identity from the NuGet gallery. You can install or update to these pre-release packages through NuGet using the NuGet Package Manager Console, like this:Install-Package Microsoft.AspNet.Identity.EntityFramework –Version 2.0.0-beta1 –PreInstall-Package Microsoft.AspNet.Identity.Core -Version 2.0.0-beta1 –PreInstall-Package Microsoft.AspNet.Identity.OWIN -Version 2.0.0-beta1 –PreInstall-Package Microsoft.AspNet.Identity.Samples -Version 2.0.0-beta1 –Pre
Please remember to select the “Include Prerelease” option when searching for packages using the NuGet Package Manager or the Package Manager Console. For more information on how to install pre-release packages please read http://docs.nuget.org/docs/Reference/Versioning#Prerelease_Versions and http://docs.nuget.org/docs/release-notes/nuget-1.7#Show_prerelease_packages_in_the_Manage_NuGet_packages_dialogWhat’s in this release?
Following is the list of features and major issues that were fixed in 2.0.0-Beta1.Two-Factor Authentication
ASP.NET Identity now support two-factor authentication. Two-factor authentication provides an extra layer of security to your user accounts in the case where your password gets compromised. Most of the websites protect their data by having a user create an account on their website with a username and password. Passwords are not very secure and sometimes users choose weak passwords which can lead to user accounts being compromised.
To add an extra layer of security, it is important to add a second factor of authentication after a user enters username/ password. Since a password is something a user knows, two-factor authentication allows youto authenticate the user with something only a user possesses such as a phone or email account. Two-factor authentication involves sending the user a code to something only a user has access to such as sending a SMS to user’s phone or emailing the code. The user can enter the code when they get it on their phone or email.
In ASP.NET Identity, the SMS and Email two-factor providers are built in so you can easily configure them to send a text message or email. You can extend and write your own providers such as QR code generators and use Authenticator apps on phones to validate them.
A user can also manage the two-factor authentication options and can enable/ disable two-factor authentication for their user account. This is demonstrated in the ASP.NET Identity Samples NuGet package. A user can also choose to remember the two-factor authentication option if the device they are accessing the website is a personal device so that when they login, they are not asked to verify the two-factor authentication each time. This is a more common usage that we see today in most of the websites.
To try out this feature, you can install ASP.NET Identity Samples NuGet package (in an Empty ASP.NET app) and follow the steps to configure and run the project.Indexing on Username
In ASP.NET Identity Entity Framework implementation, we have added a unique index on the Username using the new IndexAttribute in EF 6.1.0-Beta1. We did this to ensure that Usernames are always unique and there was no race condition in which you could end up with duplicate usernames.Enhanced Password Validator
The password validator that was shipped in ASP.NET Identity 1.0 was a fairly basic password validator which was only validating the minimum length. There is a new password validator which gives you more control over the complexity of the password. Please note that even if you turn on all the settings in this password, we do encourage you to enable two-factor authentication for the user accounts.Code Snippetmanager.PasswordValidator = new PasswordValidator{RequiredLength = 6, RequireNonLetterOrDigit = false,RequireDigit = false,RequireLowercase = false,RequireUppercase = false,};
ASP.NET Identity Samples NuGet package
We are releasing a Samples NuGet package to make it easier to install and run samples for ASP.NET Identity and follow the best practices. This is a sample ASP.NET MVC application. Please modify the code to suit your application before you deploy this in production. The sample should be installed in an Empty ASP.NET application.
Following are the features in this samples packageInitialize ASP.NET Identity to create an Admin user and Admin role.Since ASP.NET Identity is Entity Framework based in this sample, you can use the existing methods of initializing the database as you would have done in EF. Configure user and password validation.Register a user and login using username and passwordLogin using a social account such as Facebook, Twitter, Google, Microsoft account etc.Basic User managementDo Create, Update, List and Delete Users. Assign a Role to a new user.Basic Role managementDo Create, Update, List and Delete Roles.Account ConfirmationPassword ResetTwo-Factor authenticationSecurity Token providersConfigure the Db context and UserManager to use a single instance per request.The AccountController has been split into Account and Manage controller. This was done to simplify the account management code.Following is the list of features and major issues that were fixed in 2.0.0-Alpha1.
For the full list of the features please read the following blog post for more details.Account ConfirmationPassword ResetSecurity Token ProviderMake the type of Primary Key be extensible for Users and RolesSupport IQueryable on Users and RolesSupport Delete operation through the UserManagerUserManagerFactory MiddlewareDbContextFactory Middleware
Entity Framework 6.1.0-Beta1
ASP.NET Identity 2.0.0-beta1 depends upon Entity Framework 6.1.0-beta1 which was also released today. For more details please read the following announcement post for more details.List of bugs fixed
You can look at all the bugs that were fixed in this release by clicking this link.SamplesWe have a sample project which shows these new features at https://aspnet.codeplex.com. Please look for the Identity folder in the source. https://aspnet.codeplex.com/SourceControl/latestFor documentation on ASP.NET Identity please visit http://www.asp.net/identity. We are working on adding more documentation on this site.Known Issues/ Change listMigrating from ASP.NET Identity 2.0.0-alpha1 to 2.0.0-beta1
Following are the changes you will have to make to your application if you are upgrading from 2.0.0-alpha1 to 2.0.0-Beta1 of Identity.
· GetUserManager() extension method moved under Microsoft.AspNet.Identity.Owin namespace
· GetConfirmationToken property on UserManager changed to GetEmailConfirmationToken
· ConfirmUser() method changed to ConfirmEmail()
· IsConfirmed() method changed to IsEmailConfirmed()
· UserManagerFactory() changed to CreatePerOwinContext()
· ApplicationCreate static method on UserManager method now has an additional method which takes in a parameter for IOwinContext
· PasswordResetTokens and UserConfirmationTokens properties on UserManager are now replaced with a single UserTokenProvider property on UserManager
· DataProtectorTokenProvider class now strongly typed with generics DataProtectorTokenProvider
· IsConfirmed column in the AspnetUsers Table has been renamed to EmailConfirmed.If you are using Entity Framework Code First Migrations to migrate the database from 2.0.0-alpha1 to 2.0.0-Beta1 then you need to edit the migrations script that were generated by the EF migrations.
                       Following is what is generated
            AddColumn("dbo.AspNetUsers", "EmailConfirmed", c =&gt; c.Boolean(nullable: false));
            DropColumn("dbo.AspNetUsers", "IsConfirmed");
You need to change it to
                        RenameColumn("dbo.AspNetUsers", "IsConfirmed","EmailConfirmed");
Known issues in Entity Framework while migrating from Entity Framework 6.1.0-alpha1 to 6.1.0-beta
Entity Framework changed the way indexes were being recognized which causes the indexes between tables to be generated even though they exist. This is a known behavior and occurs only when migrating from EF 6.1.0-alpha to 6.1.0-beta1. For ASP.NET Identity the generated migration script will have the following incorrect entries
            CreateIndex("dbo.AspNetUserRoles", "UserId");
            CreateIndex("dbo.AspNetUserRoles", "RoleId");
            CreateIndex("dbo.AspNetUsers", "VehicleId");
            CreateIndex("dbo.AspNetUserClaims", "UserId");
            CreateIndex("dbo.AspNetUserLogins", "UserId");
Any custom index declaration by user defined classes will also be present here. Running this as is will cause it to fail since the indexes are already present. The solution is to delete these ''CreateIndex' calls for existing indexes
Migrating from ASP.NET Identity 1.0 to 2.0.0-beta1
If you are migrating from ASP.NET Identity 1.0 to 2.0.0-Beta1, then please refer to this article on how you can use Entity Framework Code First migrations to migrate your database http://blogs.msdn.com/b/webdev/archive/2013/12/20/updating-asp-net-applications-from-asp-net-identity-1-0-to-2-0-0-alpha1.aspx
This article is based on migrating to ASP.NET Identity 2.0.0-alhpa1 but the same steps apply to ASP.NET Identity 2.0.0-beta1Give feedback and get supportIf you find any bugs please open them at our Codeplex Site where we track all our bugs https://aspnetidentity.codeplex.com/If you want to discuss these features, please discuss them on Stack Overflow and use the following tag “asp.net-identity”
Thank You for trying out the preview and your feedback for ASP.NET Identity.</sxp:MobileContent>
<sxp:Tag>ASP.NET MVC</sxp:Tag>
<sxp:Tag>Security</sxp:Tag>
<sxp:Tag>Owin</sxp:Tag>
<sxp:Tag>ASP.NET Identity</sxp:Tag>
</item>
<item>
<title>Ghost of VCBlog Posts Past</title>
<description>You don't need to call Ghostbusters. Spend some time (re)reading some great posts from the Visual C++ team blog past. There really are some hidden gems in there!

C++ Debugger Tips by Sergey Grankin (8/2006) describes the "special expression and...(&lt;a href="http://blogs.msdn.com/b/vcblog/archive/2014/02/11/ghost-of-vcblog-posts-past.aspx"&gt;read more&lt;/a&gt;)&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498583" width="1" height="1"&gt;</description>
<pubDate>Tue, 11 Feb 2014 20:20:00 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10498583</guid>
<link>http://blogs.msdn.com/b/vcblog/archive/2014/02/11/ghost-of-vcblog-posts-past.aspx</link>
<author>Eric Battalio</author>
<comments>http://blogs.msdn.com/b/vcblog/archive/2014/02/11/ghost-of-vcblog-posts-past.aspx#comments</comments>
<category>link-a-thon</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>Languages</sxp:FeedId>
<sxp:PublishId>6077411</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10498583</sxp:AssetId>
<sxp:Author>Eric Battalio</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/vcblog/archive/2014/02/11/ghost-of-vcblog-posts-past.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Tue, 11 Feb 2014 21:56:27 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/vcblog/archive/2014/02/11/ghost-of-vcblog-posts-past.aspx</sxp:Link>
<sxp:PublishDate>Tue, 11 Feb 2014 20:20:00 GMT</sxp:PublishDate>
<sxp:RelativeTime>10 hours ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35411876</sxp:SourceItemId>
<sxp:SourceFeedId>2408</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>Ghost of VCBlog Posts Past</sxp:Title>
<sxp:Content>You don't need to call Ghostbusters. Spend some time (re)reading some great posts from the Visual C++ team blog past. There really are some hidden gems in there!

C++ Debugger Tips by Sergey Grankin (8/2006) describes the "special expression and...(&lt;a href="http://blogs.msdn.com/b/vcblog/archive/2014/02/11/ghost-of-vcblog-posts-past.aspx"&gt;read more&lt;/a&gt;)&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498583" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>Ghost of VCBlog Posts Past</sxp:MobileTitle>
<sxp:MobileContent>You don't need to call Ghostbusters. Spend some time (re)reading some great posts from the Visual C++ team blog past. There really are some hidden gems in there!

C++ Debugger Tips by Sergey Grankin (8/2006) describes the "special expression and...(read more)</sxp:MobileContent>
<sxp:Tag>link-a-thon</sxp:Tag>
</item>
<item>
<title>February 2014 Internet Explorer Updates</title>
<description>&lt;p&gt;&lt;b&gt;Microsoft Security Bulletin MS14-010 - Critical&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;This security update resolves twenty-three privately reported and one publicly disclosed vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted Web page using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.&lt;/p&gt;
&lt;p&gt;This security update is rated Critical for Internet Explorer 6, Internet Explorer 7, Internet Explorer 8, Internet Explorer 9, Internet Explorer 10 and Internet Explorer 11 on Windows clients, Moderate for Internet Explorer 6, Internet Explorer 7 on Windows servers, and Important for Internet Explorer 8, Internet Explorer 9, Internet Explorer 10, and Internet Explorer 11 on Windows servers.  For more information, see the &lt;a href="http://technet.microsoft.com/en-us/security/bulletin/MS14-010"&gt;full bulletin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Recommendation.&lt;/b&gt; Most customers have automatic updating enabled and will not need to take any action because this security update will be downloaded and installed automatically. Customers who have not enabled automatic updating need to check for updates and install this update manually. For information about specific configuration options in automatic updating, see &lt;a href="http://support.microsoft.com/kb/294871"&gt;Microsoft Knowledge Base Article 294871&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For administrators and enterprise installations, or end users who want to install this security update manually, Microsoft recommends that customers apply the update immediately using update management software, or by checking for updates using the &lt;a href="http://go.microsoft.com/fwlink/?LinkID=40747"&gt;Microsoft Update&lt;/a&gt; service.&lt;/p&gt;
&lt;p&gt;— Wilson Guo, Program Manager, Internet Explorer&lt;/p&gt;
&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498577" width="1" height="1"&gt;</description>
<pubDate>Tue, 11 Feb 2014 20:05:23 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10498577</guid>
<link>http://blogs.msdn.com/b/ie/archive/2014/02/11/february-2014-internet-explorer-updates.aspx</link>
<author>ieblog</author>
<comments>http://blogs.msdn.com/b/ie/archive/2014/02/11/february-2014-internet-explorer-updates.aspx#comments</comments>
<category>Security</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>PlatformDevelopment</sxp:FeedId>
<sxp:PublishId>6077405</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10498577</sxp:AssetId>
<sxp:Author>ieblog</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/ie/archive/2014/02/11/february-2014-internet-explorer-updates.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Tue, 11 Feb 2014 21:56:23 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/ie/archive/2014/02/11/february-2014-internet-explorer-updates.aspx</sxp:Link>
<sxp:PublishDate>Tue, 11 Feb 2014 20:05:23 GMT</sxp:PublishDate>
<sxp:RelativeTime>10 hours ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35411872</sxp:SourceItemId>
<sxp:SourceFeedId>2418</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>February 2014 Internet Explorer Updates</sxp:Title>
<sxp:Content>&lt;p&gt;&lt;b&gt;Microsoft Security Bulletin MS14-010 - Critical&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;This security update resolves twenty-three privately reported and one publicly disclosed vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted Web page using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.&lt;/p&gt;
&lt;p&gt;This security update is rated Critical for Internet Explorer 6, Internet Explorer 7, Internet Explorer 8, Internet Explorer 9, Internet Explorer 10 and Internet Explorer 11 on Windows clients, Moderate for Internet Explorer 6, Internet Explorer 7 on Windows servers, and Important for Internet Explorer 8, Internet Explorer 9, Internet Explorer 10, and Internet Explorer 11 on Windows servers.  For more information, see the &lt;a href="http://technet.microsoft.com/en-us/security/bulletin/MS14-010"&gt;full bulletin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Recommendation.&lt;/b&gt; Most customers have automatic updating enabled and will not need to take any action because this security update will be downloaded and installed automatically. Customers who have not enabled automatic updating need to check for updates and install this update manually. For information about specific configuration options in automatic updating, see &lt;a href="http://support.microsoft.com/kb/294871"&gt;Microsoft Knowledge Base Article 294871&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For administrators and enterprise installations, or end users who want to install this security update manually, Microsoft recommends that customers apply the update immediately using update management software, or by checking for updates using the &lt;a href="http://go.microsoft.com/fwlink/?LinkID=40747"&gt;Microsoft Update&lt;/a&gt; service.&lt;/p&gt;
&lt;p&gt;— Wilson Guo, Program Manager, Internet Explorer&lt;/p&gt;
&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498577" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>February 2014 Internet Explorer Updates</sxp:MobileTitle>
<sxp:MobileContent>Microsoft Security Bulletin MS14-010 - Critical
This security update resolves twenty-three privately reported and one publicly disclosed vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted Web page using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
This security update is rated Critical for Internet Explorer 6, Internet Explorer 7, Internet Explorer 8, Internet Explorer 9, Internet Explorer 10 and Internet Explorer 11 on Windows clients, Moderate for Internet Explorer 6, Internet Explorer 7 on Windows servers, and Important for Internet Explorer 8, Internet Explorer 9, Internet Explorer 10, and Internet Explorer 11 on Windows servers.  For more information, see the full bulletin.
Recommendation. Most customers have automatic updating enabled and will not need to take any action because this security update will be downloaded and installed automatically. Customers who have not enabled automatic updating need to check for updates and install this update manually. For information about specific configuration options in automatic updating, see Microsoft Knowledge Base Article 294871.
For administrators and enterprise installations, or end users who want to install this security update manually, Microsoft recommends that customers apply the update immediately using update management software, or by checking for updates using the Microsoft Update service.
— Wilson Guo, Program Manager, Internet Explorer</sxp:MobileContent>
<sxp:Tag>Security</sxp:Tag>
</item>
<item>
<title>EF 6.1.0 Beta 1 Available</title>
<description>&lt;p&gt;Since the release of EF6 our team has started working on the EF6.1 release. This is our next release that will include new features.&lt;/p&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;What’s in Beta 1?&lt;/h2&gt;  &lt;p&gt;Entity Framework 6.1 is a minor update to Entity Framework 6 and includes a number of bug fixes and new features. The new features in this release include:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/wikipage?title=Tooling%20Consolidation"&gt;&lt;strong&gt;Tooling consolidation&lt;/strong&gt;&lt;/a&gt; provides a consistent way to create a new EF model. This feature extends the ADO.NET Entity Data Model wizard to support creating Code First models, including reverse engineering from an existing database. These features were previously available in Beta quality in the EF Power Tools. &lt;/li&gt;    &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/wikipage?title=Handling%20of%20Transaction%20Commit%20Failures%20"&gt;&lt;strong&gt;Handling of transaction commit failures&lt;/strong&gt;&lt;/a&gt; provides the new System.Data.Entity.Infrastructure.CommitFailureHandler which makes use of the newly introduced ability to intercept transaction operations. The CommitFailureHandler allows automatic recovery from connection failures whilst committing a transaction. &lt;/li&gt;    &lt;li&gt;&lt;b&gt;IndexAttribute&lt;/b&gt; allows indexes to be specified by placing an &lt;strong&gt;[Index]&lt;/strong&gt; attribute on a property (or properties) in your Code First model. Code First will then create a corresponding index in the database. &lt;/li&gt;    &lt;li&gt;&lt;b&gt;The public mapping API&lt;/b&gt; provides access to the information EF has on how properties and types are mapped to columns and tables in the database. In past releases this API was internal. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;&lt;a href="http://blog.oneunicorn.com/2014/02/09/ef-6-1-turning-on-logging-without-recompiling/"&gt;Ability to configure interceptors via the App/Web.config file&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;(allowing interceptors to be added without recompiling the application). &lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;&lt;strong&gt;System.Data.Entity.Infrastructure.Interception.DatabaseLogger&lt;/strong&gt; is a new interceptor that makes it easy to log all database operations to a file. In combination with the previous feature, this allows you to easily &lt;a href="http://blog.oneunicorn.com/2014/02/09/ef-6-1-turning-on-logging-without-recompiling/"&gt;switch on logging of database operations for a deployed application, without the need to recompile&lt;/a&gt;. &lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;b&gt;Migrations model change detection &lt;/b&gt;has been improved so that scaffolded migrations are more accurate; performance of the change detection process has also been greatly enhanced. &lt;/li&gt;    &lt;li&gt;&lt;b&gt;Performance improvements &lt;/b&gt;including reduced database operations during initialization, optimizations for null equality comparison in LINQ queries, faster view generation (model creation) in more scenarios, and more efficient materialization of tracked entities with multiple associations. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;Where do I get the beta?&lt;/h2&gt;  &lt;p&gt;&lt;strong&gt;The runtime&lt;/strong&gt; is &lt;a href="https://nuget.org/packages/EntityFramework/6.1.0-beta1"&gt;available on NuGet&lt;/a&gt;. Follow the &lt;a href="http://msdn.microsoft.com/en-us/data/ee712906#runtime"&gt;instructions on our Get It page&lt;/a&gt; for installing the latest pre-release version of Entity Framework runtime.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The tooling&lt;/strong&gt; for Visual Studio 2012 and 2013 is &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=41928"&gt;available on the Microsoft Download Center&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;Support&lt;/h2&gt;  &lt;p&gt;This is a preview of features that will be available in the final release of EF6.1 and is designed to allow you to try out the new features and report any issues you encounter. Microsoft does not guarantee any level of support on this release. &lt;/p&gt;  &lt;p&gt;If you need assistance using the new features, please &lt;a href="http://stackoverflow.com/questions/ask"&gt;post questions on Stack Overflow&lt;/a&gt; using the entity-framework tag.&lt;/p&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;Thank you to our contributors&lt;/h2&gt;  &lt;p&gt;We’d like to say thank you to folks from the community who contributed features, bug fixes, and other changes to the 6.1 release - &lt;a href="https://www.codeplex.com/site/users/view/RogerAlsing"&gt;RogerAlsing&lt;/a&gt;, &lt;a href="https://www.codeplex.com/site/users/view/ErikEJ"&gt;ErikEJ&lt;/a&gt;, and &lt;a href="https://www.codeplex.com/site/users/view/MikeCole"&gt;mikecole&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;In particular, we’d like to call out the following contributions:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Support for String.Concat and .ToString in LINQ queries (RogerAlsing) &lt;/li&gt;    &lt;li&gt;Support for enum HasFlags method in LINQ queries (RogerAlsing) &lt;/li&gt;    &lt;li&gt;Entity SQL canonical function support for SQL Server Compact (ErikEJ) &lt;/li&gt;    &lt;li&gt;Fix for &lt;a href="https://entityframework.codeplex.com/workitem/1632"&gt;a bug&lt;/a&gt; that was affecting EF running under Mono (ErikEJ) &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;What’s next?&lt;/h2&gt;  &lt;p&gt;All the features we plan to include in the final release of EF6.1 are included in this Beta. At this stage our team is tidying up a few things with the new features and fixing any high priority bugs that are reported.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498574" width="1" height="1"&gt;</description>
<pubDate>Tue, 11 Feb 2014 20:01:43 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10498574</guid>
<link>http://blogs.msdn.com/b/adonet/archive/2014/02/11/ef-6-1-0-beta-1-available.aspx</link>
<author>Rowan Miller</author>
<comments>http://blogs.msdn.com/b/adonet/archive/2014/02/11/ef-6-1-0-beta-1-available.aspx#comments</comments>
<category>Entity Framework</category>
<category>What's New</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>DotNETFramework</sxp:FeedId>
<sxp:PublishId>6077409</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10498574</sxp:AssetId>
<sxp:Author>Rowan Miller</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/adonet/archive/2014/02/11/ef-6-1-0-beta-1-available.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Tue, 11 Feb 2014 21:56:25 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/adonet/archive/2014/02/11/ef-6-1-0-beta-1-available.aspx</sxp:Link>
<sxp:PublishDate>Tue, 11 Feb 2014 20:01:43 GMT</sxp:PublishDate>
<sxp:RelativeTime>11 hours ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35411875</sxp:SourceItemId>
<sxp:SourceFeedId>2412</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>EF 6.1.0 Beta 1 Available</sxp:Title>
<sxp:Content>&lt;p&gt;Since the release of EF6 our team has started working on the EF6.1 release. This is our next release that will include new features.&lt;/p&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;What’s in Beta 1?&lt;/h2&gt;  &lt;p&gt;Entity Framework 6.1 is a minor update to Entity Framework 6 and includes a number of bug fixes and new features. The new features in this release include:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/wikipage?title=Tooling%20Consolidation"&gt;&lt;strong&gt;Tooling consolidation&lt;/strong&gt;&lt;/a&gt; provides a consistent way to create a new EF model. This feature extends the ADO.NET Entity Data Model wizard to support creating Code First models, including reverse engineering from an existing database. These features were previously available in Beta quality in the EF Power Tools. &lt;/li&gt;    &lt;li&gt;&lt;a href="https://entityframework.codeplex.com/wikipage?title=Handling%20of%20Transaction%20Commit%20Failures%20"&gt;&lt;strong&gt;Handling of transaction commit failures&lt;/strong&gt;&lt;/a&gt; provides the new System.Data.Entity.Infrastructure.CommitFailureHandler which makes use of the newly introduced ability to intercept transaction operations. The CommitFailureHandler allows automatic recovery from connection failures whilst committing a transaction. &lt;/li&gt;    &lt;li&gt;&lt;b&gt;IndexAttribute&lt;/b&gt; allows indexes to be specified by placing an &lt;strong&gt;[Index]&lt;/strong&gt; attribute on a property (or properties) in your Code First model. Code First will then create a corresponding index in the database. &lt;/li&gt;    &lt;li&gt;&lt;b&gt;The public mapping API&lt;/b&gt; provides access to the information EF has on how properties and types are mapped to columns and tables in the database. In past releases this API was internal. &lt;/li&gt;    &lt;li&gt;&lt;strong&gt;&lt;a href="http://blog.oneunicorn.com/2014/02/09/ef-6-1-turning-on-logging-without-recompiling/"&gt;Ability to configure interceptors via the App/Web.config file&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;(allowing interceptors to be added without recompiling the application). &lt;/li&gt;    &lt;ul&gt;     &lt;li&gt;&lt;strong&gt;System.Data.Entity.Infrastructure.Interception.DatabaseLogger&lt;/strong&gt; is a new interceptor that makes it easy to log all database operations to a file. In combination with the previous feature, this allows you to easily &lt;a href="http://blog.oneunicorn.com/2014/02/09/ef-6-1-turning-on-logging-without-recompiling/"&gt;switch on logging of database operations for a deployed application, without the need to recompile&lt;/a&gt;. &lt;/li&gt;   &lt;/ul&gt;    &lt;li&gt;&lt;b&gt;Migrations model change detection &lt;/b&gt;has been improved so that scaffolded migrations are more accurate; performance of the change detection process has also been greatly enhanced. &lt;/li&gt;    &lt;li&gt;&lt;b&gt;Performance improvements &lt;/b&gt;including reduced database operations during initialization, optimizations for null equality comparison in LINQ queries, faster view generation (model creation) in more scenarios, and more efficient materialization of tracked entities with multiple associations. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;Where do I get the beta?&lt;/h2&gt;  &lt;p&gt;&lt;strong&gt;The runtime&lt;/strong&gt; is &lt;a href="https://nuget.org/packages/EntityFramework/6.1.0-beta1"&gt;available on NuGet&lt;/a&gt;. Follow the &lt;a href="http://msdn.microsoft.com/en-us/data/ee712906#runtime"&gt;instructions on our Get It page&lt;/a&gt; for installing the latest pre-release version of Entity Framework runtime.&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;The tooling&lt;/strong&gt; for Visual Studio 2012 and 2013 is &lt;a href="http://www.microsoft.com/en-us/download/details.aspx?id=41928"&gt;available on the Microsoft Download Center&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;Support&lt;/h2&gt;  &lt;p&gt;This is a preview of features that will be available in the final release of EF6.1 and is designed to allow you to try out the new features and report any issues you encounter. Microsoft does not guarantee any level of support on this release. &lt;/p&gt;  &lt;p&gt;If you need assistance using the new features, please &lt;a href="http://stackoverflow.com/questions/ask"&gt;post questions on Stack Overflow&lt;/a&gt; using the entity-framework tag.&lt;/p&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;Thank you to our contributors&lt;/h2&gt;  &lt;p&gt;We’d like to say thank you to folks from the community who contributed features, bug fixes, and other changes to the 6.1 release - &lt;a href="https://www.codeplex.com/site/users/view/RogerAlsing"&gt;RogerAlsing&lt;/a&gt;, &lt;a href="https://www.codeplex.com/site/users/view/ErikEJ"&gt;ErikEJ&lt;/a&gt;, and &lt;a href="https://www.codeplex.com/site/users/view/MikeCole"&gt;mikecole&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;In particular, we’d like to call out the following contributions:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Support for String.Concat and .ToString in LINQ queries (RogerAlsing) &lt;/li&gt;    &lt;li&gt;Support for enum HasFlags method in LINQ queries (RogerAlsing) &lt;/li&gt;    &lt;li&gt;Entity SQL canonical function support for SQL Server Compact (ErikEJ) &lt;/li&gt;    &lt;li&gt;Fix for &lt;a href="https://entityframework.codeplex.com/workitem/1632"&gt;a bug&lt;/a&gt; that was affecting EF running under Mono (ErikEJ) &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt; &lt;/p&gt;  &lt;h2&gt;What’s next?&lt;/h2&gt;  &lt;p&gt;All the features we plan to include in the final release of EF6.1 are included in this Beta. At this stage our team is tidying up a few things with the new features and fixing any high priority bugs that are reported.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498574" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>EF 6.1.0 Beta 1 Available</sxp:MobileTitle>
<sxp:MobileContent>Since the release of EF6 our team has started working on the EF6.1 release. This is our next release that will include new features.
What’s in Beta 1?
Entity Framework 6.1 is a minor update to Entity Framework 6 and includes a number of bug fixes and new features. The new features in this release include:Tooling consolidation provides a consistent way to create a new EF model. This feature extends the ADO.NET Entity Data Model wizard to support creating Code First models, including reverse engineering from an existing database. These features were previously available in Beta quality in the EF Power Tools. Handling of transaction commit failures provides the new System.Data.Entity.Infrastructure.CommitFailureHandler which makes use of the newly introduced ability to intercept transaction operations. The CommitFailureHandler allows automatic recovery from connection failures whilst committing a transaction. IndexAttribute allows indexes to be specified by placing an [Index] attribute on a property (or properties) in your Code First model. Code First will then create a corresponding index in the database. The public mapping API provides access to the information EF has on how properties and types are mapped to columns and tables in the database. In past releases this API was internal. Ability to configure interceptors via the App/Web.config file(allowing interceptors to be added without recompiling the application). System.Data.Entity.Infrastructure.Interception.DatabaseLogger is a new interceptor that makes it easy to log all database operations to a file. In combination with the previous feature, this allows you to easily switch on logging of database operations for a deployed application, without the need to recompile. Migrations model change detection has been improved so that scaffolded migrations are more accurate; performance of the change detection process has also been greatly enhanced. Performance improvements including reduced database operations during initialization, optimizations for null equality comparison in LINQ queries, faster view generation (model creation) in more scenarios, and more efficient materialization of tracked entities with multiple associations.
Where do I get the beta?
The runtime is available on NuGet. Follow the instructions on our Get It page for installing the latest pre-release version of Entity Framework runtime.
The tooling for Visual Studio 2012 and 2013 is available on the Microsoft Download Center.
Support
This is a preview of features that will be available in the final release of EF6.1 and is designed to allow you to try out the new features and report any issues you encounter. Microsoft does not guarantee any level of support on this release.
If you need assistance using the new features, please post questions on Stack Overflow using the entity-framework tag.
Thank you to our contributors
We’d like to say thank you to folks from the community who contributed features, bug fixes, and other changes to the 6.1 release - RogerAlsing, ErikEJ, and mikecole.
In particular, we’d like to call out the following contributions:Support for String.Concat and .ToString in LINQ queries (RogerAlsing) Support for enum HasFlags method in LINQ queries (RogerAlsing) Entity SQL canonical function support for SQL Server Compact (ErikEJ) Fix for a bug that was affecting EF running under Mono (ErikEJ)
What’s next?
All the features we plan to include in the final release of EF6.1 are included in this Beta. At this stage our team is tidying up a few things with the new features and fixing any high priority bugs that are reported.</sxp:MobileContent>
<sxp:Tag>Entity Framework</sxp:Tag>
<sxp:Tag>What's New</sxp:Tag>
</item>
<item>
<title>Combining Tools in the Performance and Diagnostics Hub in Visual Studio 2013</title>
<description>&lt;p&gt;We have been hard at work on the Visual Studio Diagnostics team building on the &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/07/12/performance-and-diagnostics-hub-in-visual-studio-2013.aspx"&gt;Performance and Diagnostics hub&lt;/a&gt;. If you pick up the &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390521"&gt;Visual Studio 2013 Update 2 CTP 1&lt;/a&gt;, you can take a sneak peak at some of the features we are lighting up for Update 2.&lt;/p&gt;  &lt;p&gt;We have some great tools in the hub, and as many of you know, performance problems can often be caused by a combination of issues. That is why in this update we have enabled you to run performance tools together for faster and more effective performance analysis (which was always our plan). We have also added a new CPU Usage tool which can be run by itself or combined with other tools in the hub, and helps you to diagnose CPU-related performance issues.&lt;/p&gt;  &lt;p&gt;In this blog post we will first look at the overall experience, and then look at how using a combination of tools can help us quickly solve two common types of issues: UI responsiveness and power consumption.&lt;/p&gt;  &lt;h2&gt;Overall Experience&lt;/h2&gt;  &lt;p&gt;In this release we have enabled this capability for Windows Store apps, and plan to enable it for more types of apps in the future. The tools that can be combined are:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;The &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/07/16/html-ui-responsiveness-tool-in-visual-studio-2013.aspx"&gt;HTML UI Responsiveness tool&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;The &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/07/11/xaml-ui-responsiveness-tool-in-visual-studio-2013.aspx"&gt;XAML UI Responsiveness tool&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;The &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/07/10/energy-consumption-tool-in-visual-studio-2013.aspx"&gt;Energy Consumption tool&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;The new CPU Usage tool, which we will cover in depth in a future blog post&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Previously, when you went to the Performance and Diagnostics hub (Debug -&gt; Performance and Diagnostics) you could only select one tool at a time. Now, when you select one of the above tools, you can select other combinable tools to run at the same time and the ones that can’t be combined are grayed out:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/2553.clip_5F00_image002_5F00_7D8CA3AB.jpg"&gt;&lt;img title="clip_image002" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/7752.clip_5F00_image002_5F00_thumb_5F00_3D568A31.jpg" width="555" height="298" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p align="center"&gt;&lt;font size="1"&gt;The CPU Usage, XAML and HTML UI Responsiveness, and Energy Consumption tools can be run together in the Update 2 CTP 1&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;Once you click the &lt;i&gt;Start&lt;/i&gt; button, we will start or attach to your app and collect performance data for all three tools. You might be worried about the overhead of running multiple profilers at the same time, but we worked hard to share data and analysis between tools where possible and minimized the overhead of running multiple tools.&lt;/p&gt;  &lt;p&gt;After you click stop, we will analyze the data and show the graphs and details for selected tools in the same report. The graphs from all tools are shown at the top of the report along a common timeline, and the details for each tool are found in the tabs below the graphs . The contents of the tabs are filtered to selected range of time on the graphs, which allows you to correlate activity from one tool with another.&lt;/p&gt;  &lt;p align="center"&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/2450.clip_5F00_image004_5F00_0B980199.jpg"&gt;&lt;img title="clip_image004" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/5582.clip_5F00_image004_5F00_thumb_5F00_2E5BCA07.jpg" width="386" height="345" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p align="center"&gt;&lt;font size="1"&gt;Graphs from all three tools are shown on a common timeline, with details for each tool in tabs at the bottom&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;So why aren’t all tools combinable? Well, it takes a great deal of common infrastructure and sharing to get tools to run together, so we have started with a few of the tools that help you solve key problems when used together. The key problems we wanted to make easy for you to solve are:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;Diagnosing UI responsiveness or frame rate issues that are caused by heavy CPU usage.&lt;/strong&gt; Using the HTML or XAML UI Responsiveness tool with the CPU Usage tool will allow you understand what functions were using the CPU on the UI thread during animation frames, click handlers, and other user initiated actions.&lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Diagnosing energy consumption issues where much of the energy is caused by CPU activity. &lt;/strong&gt;Using the Energy Consumption tool with the CPU Usage tool will allow you understand what functions were using the CPU when energy consumption is high.&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Let’s take a look each of these cases in more detail. &lt;/p&gt;  &lt;h2&gt;UI responsiveness issues caused by CPU activity&lt;/h2&gt;  &lt;p&gt;In order for your application to be fast and fluid, you need to keep the UI thread available to do work. Many UI responsiveness issues are caused by too much CPU-bound work being done on the UI thread, which results in fewer frames being drawn and the UI becoming less responsive. &lt;/p&gt;  &lt;p&gt;For this reason, we recommend that you run the CPU Usage tool any time you run the HTML or XAML UI Responsiveness. In this section we are showing the HTML UI Responsiveness tool, but the same concepts apply to the XAML UI Responsiveness tool as well. &lt;/p&gt;  &lt;p&gt;After collection you will see graphs for the HTML UI Responsiveness tool and the CPU Usage tool on a common timeline. For a frame rate issue you will often find a drop in FPS and a corresponding rise in CPU activity. You can simply select this range of time, and then see what activity the UI is doing in the HTML UI Responsiveness tab. &lt;/p&gt;  &lt;p align="center"&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/5504.clip_5F00_image006_5F00_0E40BD4A.jpg"&gt;&lt;img title="clip_image006" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/0880.clip_5F00_image006_5F00_thumb_5F00_59342E19.jpg" width="562" height="357" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p align="center"&gt;&lt;font size="1"&gt;Selecting a range of time updates the details for each tool in the tabs at the bottom&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;Note that the top graph shows a breakdown of HTML and JavaScript related CPU work, while the bottom graph includes all CPU activity that is happening within the process. You will typically see callbacks and event handlers in the HTML UI Responsiveness tab that take longer than you expect. You can right click and filter to one of these events, which then updates the global time selection to include only that event. You can then switch to the CPU tab to see what functions were using the CPU during that period of time.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/3022.clip_5F00_image008_5F00_67067414.jpg"&gt;&lt;img title="clip_image008" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" border="0" alt="clip_image008" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/6574.clip_5F00_image008_5F00_thumb_5F00_46EB6757.jpg" width="546" height="270" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p align="center"&gt;&lt;font size="1"&gt;You can see CPU activity that occurred during the event that was selected in the HTML UI Responsiveness tab&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;If you want to filter out CPU activity on background threads, you can use the “Filter view” menu to filter the CPU Usage view so that it shows only activity that occurred on the UI thread.&lt;/p&gt;  &lt;h3&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/1616.clip_5F00_image010_5F00_26D05A9A.jpg"&gt;&lt;img title="clip_image010" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" border="0" alt="clip_image010" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/6406.clip_5F00_image010_5F00_thumb_5F00_1BA6D050.jpg" width="178" height="244" /&gt;&lt;/a&gt;&lt;/h3&gt;  &lt;p align="center"&gt;&lt;font size="1"&gt;The CPU Usage tool allows you to filter to CPU used by the UI thread&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;If you want to learn more about analyzing UI responsiveness issues with our tools, be sure to check out &lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/dn263059.aspx"&gt;Analyze UI responsiveness (XAML)&lt;/a&gt; and &lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/dn194502.aspx"&gt;Analyze UI responsiveness (JavaScript)&lt;/a&gt; on msdn.&lt;/p&gt;  &lt;h2&gt;Energy consumption caused by CPU activity&lt;/h2&gt;  &lt;p&gt;The &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/07/10/energy-consumption-tool-in-visual-studio-2013.aspx"&gt;Energy Consumption tool in the hub&lt;/a&gt; is great at estimating how much energy your app is using. If you have used this tool you would have noticed that a lot of energy can be used by the CPU. If you notice that the CPU is responsible for high power consumption in your app, running the CPU Usage tool in conjunction with the Energy Consumption tool will help you identify which functions are running when your power usage is high. &lt;/p&gt;  &lt;p&gt;For this reason, we recommend that you run the CPU Usage tool with the Energy Consumption tool. When you have done so, you can select a range of time on the energy consumption graph that shows energy consumption related to CPU usage. You can then switch to the CPU Usage tab to see a breakdown of the functions that were using the CPU during that time.&lt;/p&gt;  &lt;h3&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/7167.clip_5F00_image012_5F00_628FF34D.jpg"&gt;&lt;img title="clip_image012" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" border="0" alt="clip_image012" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/4024.clip_5F00_image012_5F00_thumb_5F00_4274E690.jpg" width="585" height="307" /&gt;&lt;/a&gt;&lt;/h3&gt;  &lt;p align="center"&gt;&lt;font size="1"&gt;You can see a breakdown of the CPU activity correlated to energy consumption for the selected range of time&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;Now you can focus your investigation on optimizing CPU activity during this range of time so that you can lower the energy consumption of your app. You can use the call tree in the CPU Usage view to see which functions are using the CPU the most, and look for opportunities to optimize those functions so that your app will use less energy. It can sometimes be more energy efficient to use more of the CPU for a shorter period of time by doing work in parallel, and allowing the CPU to remain idle afterward. In this case, you can use the CPU utilization graph to look for areas where you are not using all of the CPU and may be able to parallelize your code. After you make changes to your code you should re-run the Energy Consumption tool again to validate that you have made an improvement. &lt;/p&gt;  &lt;h2&gt;Let us know what you think!&lt;/h2&gt;  &lt;p&gt;We are excited to be making this powerful capability available to you, and we want to know what you think! Download the &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390521"&gt;Visual Studio 2013 Update 2 CTP 1&lt;/a&gt;, go to Debug –&gt; Performance and Diagnostics, select some tools, and click &lt;i&gt;Start&lt;/i&gt; to diagnose performance issues in your app. For more information on how to use each tool you can refer to the links found in this post, and we will be following up with an in-depth post on using the new CPU Usage tool soon.&lt;/p&gt;  &lt;p&gt;If there’s something that would better help you to diagnose your performance problems, whether it’s a new tool or improvements to existing ones, send us feedback on our &lt;a href="http://social.msdn.microsoft.com/Forums/vstudio/en-US/home?forum=vsdebug"&gt;MSDN Forum&lt;/a&gt; (if you run into issues using the tools), or using &lt;a href="http://msdn.microsoft.com/en-us/library/zzszcehe.aspx"&gt;Send-a-Smile&lt;/a&gt; (if you have feedback and/or suggestions) from within Visual Studio.&lt;/p&gt;  &lt;p&gt;Thanks for reading and happy performance hunting &lt;img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-bottom-style: none; border-right-style: none; border-left-style: none" alt="Smile" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/4530.wlEmoticon_2D00_smile_5F00_08F1D699.png" /&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498702" width="1" height="1"&gt;</description>
<pubDate>Tue, 11 Feb 2014 19:08:00 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10498702</guid>
<link>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/11/combining-tools-in-the-performance-and-diagnostics-hub-in-visual-studio-2013.aspx</link>
<author>Dan J Taylor</author>
<comments>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/11/combining-tools-in-the-performance-and-diagnostics-hub-in-visual-studio-2013.aspx#comments</comments>
<category>Diagnostics</category>
<category>Performance</category>
<category>Performance and Diagnostics Hub</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>ALM</sxp:FeedId>
<sxp:PublishId>6080114</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10498702</sxp:AssetId>
<sxp:Author>Dan J Taylor</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/11/combining-tools-in-the-performance-and-diagnostics-hub-in-visual-studio-2013.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Wed, 12 Feb 2014 06:55:51 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/11/combining-tools-in-the-performance-and-diagnostics-hub-in-visual-studio-2013.aspx</sxp:Link>
<sxp:PublishDate>Tue, 11 Feb 2014 19:08:00 GMT</sxp:PublishDate>
<sxp:RelativeTime>11 hours ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35414296</sxp:SourceItemId>
<sxp:SourceFeedId>2403</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>Combining Tools in the Performance and Diagnostics Hub in Visual Studio 2013</sxp:Title>
<sxp:Content>&lt;p&gt;We have been hard at work on the Visual Studio Diagnostics team building on the &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/07/12/performance-and-diagnostics-hub-in-visual-studio-2013.aspx"&gt;Performance and Diagnostics hub&lt;/a&gt;. If you pick up the &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390521"&gt;Visual Studio 2013 Update 2 CTP 1&lt;/a&gt;, you can take a sneak peak at some of the features we are lighting up for Update 2.&lt;/p&gt;  &lt;p&gt;We have some great tools in the hub, and as many of you know, performance problems can often be caused by a combination of issues. That is why in this update we have enabled you to run performance tools together for faster and more effective performance analysis (which was always our plan). We have also added a new CPU Usage tool which can be run by itself or combined with other tools in the hub, and helps you to diagnose CPU-related performance issues.&lt;/p&gt;  &lt;p&gt;In this blog post we will first look at the overall experience, and then look at how using a combination of tools can help us quickly solve two common types of issues: UI responsiveness and power consumption.&lt;/p&gt;  &lt;h2&gt;Overall Experience&lt;/h2&gt;  &lt;p&gt;In this release we have enabled this capability for Windows Store apps, and plan to enable it for more types of apps in the future. The tools that can be combined are:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;The &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/07/16/html-ui-responsiveness-tool-in-visual-studio-2013.aspx"&gt;HTML UI Responsiveness tool&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;The &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/07/11/xaml-ui-responsiveness-tool-in-visual-studio-2013.aspx"&gt;XAML UI Responsiveness tool&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;The &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/07/10/energy-consumption-tool-in-visual-studio-2013.aspx"&gt;Energy Consumption tool&lt;/a&gt;&lt;/li&gt;    &lt;li&gt;The new CPU Usage tool, which we will cover in depth in a future blog post&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Previously, when you went to the Performance and Diagnostics hub (Debug -&gt; Performance and Diagnostics) you could only select one tool at a time. Now, when you select one of the above tools, you can select other combinable tools to run at the same time and the ones that can’t be combined are grayed out:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/2553.clip_5F00_image002_5F00_7D8CA3AB.jpg"&gt;&lt;img title="clip_image002" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/7752.clip_5F00_image002_5F00_thumb_5F00_3D568A31.jpg" width="555" height="298" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p align="center"&gt;&lt;font size="1"&gt;The CPU Usage, XAML and HTML UI Responsiveness, and Energy Consumption tools can be run together in the Update 2 CTP 1&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;Once you click the &lt;i&gt;Start&lt;/i&gt; button, we will start or attach to your app and collect performance data for all three tools. You might be worried about the overhead of running multiple profilers at the same time, but we worked hard to share data and analysis between tools where possible and minimized the overhead of running multiple tools.&lt;/p&gt;  &lt;p&gt;After you click stop, we will analyze the data and show the graphs and details for selected tools in the same report. The graphs from all tools are shown at the top of the report along a common timeline, and the details for each tool are found in the tabs below the graphs . The contents of the tabs are filtered to selected range of time on the graphs, which allows you to correlate activity from one tool with another.&lt;/p&gt;  &lt;p align="center"&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/2450.clip_5F00_image004_5F00_0B980199.jpg"&gt;&lt;img title="clip_image004" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image004" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/5582.clip_5F00_image004_5F00_thumb_5F00_2E5BCA07.jpg" width="386" height="345" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p align="center"&gt;&lt;font size="1"&gt;Graphs from all three tools are shown on a common timeline, with details for each tool in tabs at the bottom&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;So why aren’t all tools combinable? Well, it takes a great deal of common infrastructure and sharing to get tools to run together, so we have started with a few of the tools that help you solve key problems when used together. The key problems we wanted to make easy for you to solve are:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;strong&gt;Diagnosing UI responsiveness or frame rate issues that are caused by heavy CPU usage.&lt;/strong&gt; Using the HTML or XAML UI Responsiveness tool with the CPU Usage tool will allow you understand what functions were using the CPU on the UI thread during animation frames, click handlers, and other user initiated actions.&lt;/li&gt;    &lt;li&gt;&lt;strong&gt;Diagnosing energy consumption issues where much of the energy is caused by CPU activity. &lt;/strong&gt;Using the Energy Consumption tool with the CPU Usage tool will allow you understand what functions were using the CPU when energy consumption is high.&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;Let’s take a look each of these cases in more detail. &lt;/p&gt;  &lt;h2&gt;UI responsiveness issues caused by CPU activity&lt;/h2&gt;  &lt;p&gt;In order for your application to be fast and fluid, you need to keep the UI thread available to do work. Many UI responsiveness issues are caused by too much CPU-bound work being done on the UI thread, which results in fewer frames being drawn and the UI becoming less responsive. &lt;/p&gt;  &lt;p&gt;For this reason, we recommend that you run the CPU Usage tool any time you run the HTML or XAML UI Responsiveness. In this section we are showing the HTML UI Responsiveness tool, but the same concepts apply to the XAML UI Responsiveness tool as well. &lt;/p&gt;  &lt;p&gt;After collection you will see graphs for the HTML UI Responsiveness tool and the CPU Usage tool on a common timeline. For a frame rate issue you will often find a drop in FPS and a corresponding rise in CPU activity. You can simply select this range of time, and then see what activity the UI is doing in the HTML UI Responsiveness tab. &lt;/p&gt;  &lt;p align="center"&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/5504.clip_5F00_image006_5F00_0E40BD4A.jpg"&gt;&lt;img title="clip_image006" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="clip_image006" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/0880.clip_5F00_image006_5F00_thumb_5F00_59342E19.jpg" width="562" height="357" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p align="center"&gt;&lt;font size="1"&gt;Selecting a range of time updates the details for each tool in the tabs at the bottom&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;Note that the top graph shows a breakdown of HTML and JavaScript related CPU work, while the bottom graph includes all CPU activity that is happening within the process. You will typically see callbacks and event handlers in the HTML UI Responsiveness tab that take longer than you expect. You can right click and filter to one of these events, which then updates the global time selection to include only that event. You can then switch to the CPU tab to see what functions were using the CPU during that period of time.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/3022.clip_5F00_image008_5F00_67067414.jpg"&gt;&lt;img title="clip_image008" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" border="0" alt="clip_image008" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/6574.clip_5F00_image008_5F00_thumb_5F00_46EB6757.jpg" width="546" height="270" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p align="center"&gt;&lt;font size="1"&gt;You can see CPU activity that occurred during the event that was selected in the HTML UI Responsiveness tab&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;If you want to filter out CPU activity on background threads, you can use the “Filter view” menu to filter the CPU Usage view so that it shows only activity that occurred on the UI thread.&lt;/p&gt;  &lt;h3&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/1616.clip_5F00_image010_5F00_26D05A9A.jpg"&gt;&lt;img title="clip_image010" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" border="0" alt="clip_image010" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/6406.clip_5F00_image010_5F00_thumb_5F00_1BA6D050.jpg" width="178" height="244" /&gt;&lt;/a&gt;&lt;/h3&gt;  &lt;p align="center"&gt;&lt;font size="1"&gt;The CPU Usage tool allows you to filter to CPU used by the UI thread&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;If you want to learn more about analyzing UI responsiveness issues with our tools, be sure to check out &lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/dn263059.aspx"&gt;Analyze UI responsiveness (XAML)&lt;/a&gt; and &lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/dn194502.aspx"&gt;Analyze UI responsiveness (JavaScript)&lt;/a&gt; on msdn.&lt;/p&gt;  &lt;h2&gt;Energy consumption caused by CPU activity&lt;/h2&gt;  &lt;p&gt;The &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/07/10/energy-consumption-tool-in-visual-studio-2013.aspx"&gt;Energy Consumption tool in the hub&lt;/a&gt; is great at estimating how much energy your app is using. If you have used this tool you would have noticed that a lot of energy can be used by the CPU. If you notice that the CPU is responsible for high power consumption in your app, running the CPU Usage tool in conjunction with the Energy Consumption tool will help you identify which functions are running when your power usage is high. &lt;/p&gt;  &lt;p&gt;For this reason, we recommend that you run the CPU Usage tool with the Energy Consumption tool. When you have done so, you can select a range of time on the energy consumption graph that shows energy consumption related to CPU usage. You can then switch to the CPU Usage tab to see a breakdown of the functions that were using the CPU during that time.&lt;/p&gt;  &lt;h3&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/7167.clip_5F00_image012_5F00_628FF34D.jpg"&gt;&lt;img title="clip_image012" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; float: none; padding-top: 0px; padding-left: 0px; margin-left: auto; border-left: 0px; display: block; padding-right: 0px; margin-right: auto" border="0" alt="clip_image012" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/4024.clip_5F00_image012_5F00_thumb_5F00_4274E690.jpg" width="585" height="307" /&gt;&lt;/a&gt;&lt;/h3&gt;  &lt;p align="center"&gt;&lt;font size="1"&gt;You can see a breakdown of the CPU activity correlated to energy consumption for the selected range of time&lt;/font&gt;&lt;/p&gt;  &lt;p&gt;Now you can focus your investigation on optimizing CPU activity during this range of time so that you can lower the energy consumption of your app. You can use the call tree in the CPU Usage view to see which functions are using the CPU the most, and look for opportunities to optimize those functions so that your app will use less energy. It can sometimes be more energy efficient to use more of the CPU for a shorter period of time by doing work in parallel, and allowing the CPU to remain idle afterward. In this case, you can use the CPU utilization graph to look for areas where you are not using all of the CPU and may be able to parallelize your code. After you make changes to your code you should re-run the Energy Consumption tool again to validate that you have made an improvement. &lt;/p&gt;  &lt;h2&gt;Let us know what you think!&lt;/h2&gt;  &lt;p&gt;We are excited to be making this powerful capability available to you, and we want to know what you think! Download the &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390521"&gt;Visual Studio 2013 Update 2 CTP 1&lt;/a&gt;, go to Debug –&gt; Performance and Diagnostics, select some tools, and click &lt;i&gt;Start&lt;/i&gt; to diagnose performance issues in your app. For more information on how to use each tool you can refer to the links found in this post, and we will be following up with an in-depth post on using the new CPU Usage tool soon.&lt;/p&gt;  &lt;p&gt;If there’s something that would better help you to diagnose your performance problems, whether it’s a new tool or improvements to existing ones, send us feedback on our &lt;a href="http://social.msdn.microsoft.com/Forums/vstudio/en-US/home?forum=vsdebug"&gt;MSDN Forum&lt;/a&gt; (if you run into issues using the tools), or using &lt;a href="http://msdn.microsoft.com/en-us/library/zzszcehe.aspx"&gt;Send-a-Smile&lt;/a&gt; (if you have feedback and/or suggestions) from within Visual Studio.&lt;/p&gt;  &lt;p&gt;Thanks for reading and happy performance hunting &lt;img class="wlEmoticon wlEmoticon-smile" style="border-top-style: none; border-bottom-style: none; border-right-style: none; border-left-style: none" alt="Smile" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/4530.wlEmoticon_2D00_smile_5F00_08F1D699.png" /&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498702" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>Combining Tools in the Performance and Diagnostics Hub in Visual Studio 2013</sxp:MobileTitle>
<sxp:MobileContent>We have been hard at work on the Visual Studio Diagnostics team building on the Performance and Diagnostics hub. If you pick up the Visual Studio 2013 Update 2 CTP 1, you can take a sneak peak at some of the features we are lighting up for Update 2.
We have some great tools in the hub, and as many of you know, performance problems can often be caused by a combination of issues. That is why in this update we have enabled you to run performance tools together for faster and more effective performance analysis (which was always our plan). We have also added a new CPU Usage tool which can be run by itself or combined with other tools in the hub, and helps you to diagnose CPU-related performance issues.
In this blog post we will first look at the overall experience, and then look at how using a combination of tools can help us quickly solve two common types of issues: UI responsiveness and power consumption.Overall Experience
In this release we have enabled this capability for Windows Store apps, and plan to enable it for more types of apps in the future. The tools that can be combined are:The HTML UI Responsiveness toolThe XAML UI Responsiveness toolThe Energy Consumption toolThe new CPU Usage tool, which we will cover in depth in a future blog post
Previously, when you went to the Performance and Diagnostics hub (Debug -&gt; Performance and Diagnostics) you could only select one tool at a time. Now, when you select one of the above tools, you can select other combinable tools to run at the same time and the ones that can’t be combined are grayed out:

The CPU Usage, XAML and HTML UI Responsiveness, and Energy Consumption tools can be run together in the Update 2 CTP 1
Once you click the Start button, we will start or attach to your app and collect performance data for all three tools. You might be worried about the overhead of running multiple profilers at the same time, but we worked hard to share data and analysis between tools where possible and minimized the overhead of running multiple tools.
After you click stop, we will analyze the data and show the graphs and details for selected tools in the same report. The graphs from all tools are shown at the top of the report along a common timeline, and the details for each tool are found in the tabs below the graphs . The contents of the tabs are filtered to selected range of time on the graphs, which allows you to correlate activity from one tool with another.

Graphs from all three tools are shown on a common timeline, with details for each tool in tabs at the bottom
So why aren’t all tools combinable? Well, it takes a great deal of common infrastructure and sharing to get tools to run together, so we have started with a few of the tools that help you solve key problems when used together. The key problems we wanted to make easy for you to solve are:Diagnosing UI responsiveness or frame rate issues that are caused by heavy CPU usage. Using the HTML or XAML UI Responsiveness tool with the CPU Usage tool will allow you understand what functions were using the CPU on the UI thread during animation frames, click handlers, and other user initiated actions.Diagnosing energy consumption issues where much of the energy is caused by CPU activity. Using the Energy Consumption tool with the CPU Usage tool will allow you understand what functions were using the CPU when energy consumption is high.
Let’s take a look each of these cases in more detail. UI responsiveness issues caused by CPU activity
In order for your application to be fast and fluid, you need to keep the UI thread available to do work. Many UI responsiveness issues are caused by too much CPU-bound work being done on the UI thread, which results in fewer frames being drawn and the UI becoming less responsive.
For this reason, we recommend that you run the CPU Usage tool any time you run the HTML or XAML UI Responsiveness. In this section we are showing the HTML UI Responsiveness tool, but the same concepts apply to the XAML UI Responsiveness tool as well.
After collection you will see graphs for the HTML UI Responsiveness tool and the CPU Usage tool on a common timeline. For a frame rate issue you will often find a drop in FPS and a corresponding rise in CPU activity. You can simply select this range of time, and then see what activity the UI is doing in the HTML UI Responsiveness tab.

Selecting a range of time updates the details for each tool in the tabs at the bottom
Note that the top graph shows a breakdown of HTML and JavaScript related CPU work, while the bottom graph includes all CPU activity that is happening within the process. You will typically see callbacks and event handlers in the HTML UI Responsiveness tab that take longer than you expect. You can right click and filter to one of these events, which then updates the global time selection to include only that event. You can then switch to the CPU tab to see what functions were using the CPU during that period of time.

You can see CPU activity that occurred during the event that was selected in the HTML UI Responsiveness tab
If you want to filter out CPU activity on background threads, you can use the “Filter view” menu to filter the CPU Usage view so that it shows only activity that occurred on the UI thread.
The CPU Usage tool allows you to filter to CPU used by the UI thread
If you want to learn more about analyzing UI responsiveness issues with our tools, be sure to check out Analyze UI responsiveness (XAML) and Analyze UI responsiveness (JavaScript) on msdn.Energy consumption caused by CPU activity
The Energy Consumption tool in the hub is great at estimating how much energy your app is using. If you have used this tool you would have noticed that a lot of energy can be used by the CPU. If you notice that the CPU is responsible for high power consumption in your app, running the CPU Usage tool in conjunction with the Energy Consumption tool will help you identify which functions are running when your power usage is high.
For this reason, we recommend that you run the CPU Usage tool with the Energy Consumption tool. When you have done so, you can select a range of time on the energy consumption graph that shows energy consumption related to CPU usage. You can then switch to the CPU Usage tab to see a breakdown of the functions that were using the CPU during that time.
You can see a breakdown of the CPU activity correlated to energy consumption for the selected range of time
Now you can focus your investigation on optimizing CPU activity during this range of time so that you can lower the energy consumption of your app. You can use the call tree in the CPU Usage view to see which functions are using the CPU the most, and look for opportunities to optimize those functions so that your app will use less energy. It can sometimes be more energy efficient to use more of the CPU for a shorter period of time by doing work in parallel, and allowing the CPU to remain idle afterward. In this case, you can use the CPU utilization graph to look for areas where you are not using all of the CPU and may be able to parallelize your code. After you make changes to your code you should re-run the Energy Consumption tool again to validate that you have made an improvement. Let us know what you think!
We are excited to be making this powerful capability available to you, and we want to know what you think! Download the Visual Studio 2013 Update 2 CTP 1, go to Debug –&gt; Performance and Diagnostics, select some tools, and click Start to diagnose performance issues in your app. For more information on how to use each tool you can refer to the links found in this post, and we will be following up with an in-depth post on using the new CPU Usage tool soon.
If there’s something that would better help you to diagnose your performance problems, whether it’s a new tool or improvements to existing ones, send us feedback on our MSDN Forum (if you run into issues using the tools), or using Send-a-Smile (if you have feedback and/or suggestions) from within Visual Studio.
Thanks for reading and happy performance hunting</sxp:MobileContent>
<sxp:Tag>Diagnostics</sxp:Tag>
<sxp:Tag>Performance</sxp:Tag>
<sxp:Tag>Performance and Diagnostics Hub</sxp:Tag>
</item>
<item>
<title>How to relocate the Package Cache</title>
<description>&lt;p&gt;Visual Studio can require a &lt;a href="http://bit.ly/y84B1u"&gt;lot of space on the system drive&lt;/a&gt;. Based on years of data collected from customers’ installations from the &lt;a href="http://go.microsoft.com/fwlink/?LinkID=105252"&gt;Customer Experience Improvement Program&lt;/a&gt;, we took advantage of this feature in Burn – the &lt;a href="http://wixtoolset.org"&gt;Windows Installer XML (WiX)&lt;/a&gt; chainer – to &lt;a href="http://bit.ly/LQL3LC"&gt;eliminate most errors during repair, servicing, and even uninstall&lt;/a&gt;. This was not a popular decision with some customers. For years even I pushed against caching Visual Studio deployment packages because of the impact to drive space as well, but as HDD space increased market studies showed little reason not to cache for the increased reliability of deployment.&lt;/p&gt;
&lt;p&gt;We understand, however, that many customers have smaller SSDs and while size will increase and cost decrease over time, some customers are blocked from installing Visual Studio or have little space left over after a successful installation.&lt;/p&gt;
&lt;p&gt;I have submitted a feature proposal to WiX to allow control over the Package Cache location, but until then there is a workaround that really highlights some of the virtualization features in Windows.&lt;/p&gt;
&lt;h3&gt;Disclaimer&lt;/h3&gt;
&lt;p&gt;This practice has received some testing and has been running under load for a reasonable amount of time. While it uses documented features of Windows, this is not an officially supported practice and may leave your machine in a corrupted state should you disconnected the secondary drive or fail to properly secure the folder mount point and its contents.&lt;/p&gt;
&lt;h3&gt;Workaround&lt;/h3&gt;
&lt;p&gt;You can move the contents of the Package Cache to a partition on another drive – copying the ACL and owner, which is very important for both security and because some programs may not trust any ACL or owner that is different than what is expected – and then mount that partition into an empty folder. But rather than dedicate an entire partition on a physical disk – which isn’t always as easy to reconfigure on the fly – we will create a virtual disk (VHD) on another drive.&lt;/p&gt;
&lt;p&gt;By creating an expandable virtual disk we can declare a maximum size that can be much larger than necessary – even larger than the host drive itself – but takes up only as much room as necessary and will grow as the content grows. This way, should you ever need to allocate more space you can simply dismount and move the VHD to another disk, then remount it. No need to recopy files.&lt;/p&gt;
&lt;p&gt;Mounting a VHD into an empty directory also maintains the mount across reboots – something not currently supported when mounting a VHD for drive access.&lt;/p&gt;
&lt;h4&gt;System requirements&lt;/h4&gt;
&lt;p&gt;Support for creating and mounting VHDs was built into Windows Vista with support for VHDs larger than 2TB added in Windows 8 using the newer VHDX format.&lt;/p&gt;
&lt;h4&gt;Manual walkthrough&lt;/h4&gt;
&lt;p&gt;To show more in depth how this works – and how you might adapt it for your own use – I will use a couple of built-in programs: &lt;em&gt;diskpart.exe&lt;/em&gt; and &lt;em&gt;mountvol.exe&lt;/em&gt;. We can also do all this in PowerShell with the right Windows Features enabled but I will cover that in the scripted section.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open an elevated command prompt.&lt;/li&gt;
&lt;li&gt;Run &lt;em&gt;diskpart.exe&lt;/em&gt; to start the disk partitioning utility: &lt;br /&gt;&lt;code&gt;diskpart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a large (ex: 1TB), expandable VHD on whatever secondary disk (ex: X:) you prefer with security matching the source directory’s security: &lt;br /&gt;&lt;code&gt;create vdisk file="X:\Cache.vhd" type=expandable maximum=1048576 sd="O:BAG:DUD:P(A;;FA;;;BA)(A;;FA;;;SY)(A;;FRFX;;;BU)(A;;FRFX;;;WD)" &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the VHD and create a partition using all available space: &lt;br /&gt;select vdisk file="X:\Cache.vhd" &lt;br /&gt;attach vdisk &lt;br /&gt;create partition primary&lt;/li&gt;
&lt;li&gt;Format the volume that was created automatically and temporarily assign a drive letter (ex: P:): &lt;br /&gt;&lt;code&gt;format fs=ntfs label="Package Cache" quick &lt;br /&gt;assign letter=P &lt;br /&gt;exit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;After exiting &lt;em&gt;diskpart.exe&lt;/em&gt;, move any existing per-machine payloads from the Package Cache with security: &lt;br /&gt;&lt;code&gt;robocopy "%ProgramData%\Package Cache" P:\ /e /copyall /move /zb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Recreate the Package Cache directory and set up the ACL and owner as before: &lt;br /&gt;&lt;code&gt;mkdir "%ProgramData%\Package Cache" &lt;br /&gt;echo y | cacls foo /s:"O:BAG:DUD:PAI(A;OICIID;FA;;;BA)(A;OICIID;FA;;;SY)(A;OICIID;FRFX;;;BU)(A;OICIID;FRFX;;;WD)"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;em&gt;mountvol.exe&lt;/em&gt; without any parameters first and look for the volume name that has the drive letter you assigned to the VHD, then use that with &lt;em&gt;mountvol.exe&lt;/em&gt; again to mount that volume into the empty Package Cache directory. &lt;br /&gt;&lt;code&gt;mountvol &lt;br /&gt;mountvol "%ProgramData%\Package Cache" \\?\Volume{a525b826-8a0c-11e3-be94-00249b0716f5}\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;em&gt;diskpart.exe&lt;/em&gt; again and remove the drive letter assignment from the volume (should be in partition 1 of the VHD): &lt;br /&gt;&lt;code&gt;select vdisk file="X:\Cache.vhd" &lt;br /&gt;select partition 1 &lt;br /&gt;remove letter=P &lt;br /&gt;exit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Non-boot VHDs are not automatically mounted, so before you reboot you need to make sure the VHD is mounted again whenever the machine is started. Write a simple script for &lt;em&gt;diskpart.exe&lt;/em&gt; to execute on startup. If you’re doing this on a laptop, you should edit the scheduled task afterward to allow it to run on batteries. &lt;br /&gt;&lt;code&gt;echo select vdisk file=X:\Cache.vhd &gt; X:\Cache.txt &lt;br /&gt;echo attach vdisk &gt;&gt; X:\Cache.txt &lt;br /&gt;schtasks /create /ru system /sc onstart /rl highest /tn "Attach Package Cache" /tr "%SystemRoot%\System32\diskpart.exe /s X:\Cache.txt"&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After exiting &lt;em&gt;diskpart.exe&lt;/em&gt; you now have mapped a VHD on another drive into the new Package Cache directory. The VHD will be remounted into the directory whenever the machine is rebooted. If you look at the mount point, you will also see its icon, description, and size are different.&lt;/p&gt;
&lt;p&gt;The size reported in Windows Explorer is merely the maximum and not how much space is consumed within the virtual disk. In fact, you probably would care less about that than how much space the VHD itself is consuming. Browse to the folder were you created the VHD (ex: X:\Cache.vhd) and you will see the actual file size.&lt;/p&gt;
&lt;p&gt;When bundles have been uninstalled and packages removed from the Package Cache, you can attempt to compact the VHD to reclaim space on the host disk.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open an elevated command prompt.&lt;/li&gt;
&lt;li&gt;Run &lt;em&gt;diskpart.exe&lt;/em&gt;: &lt;br /&gt;&lt;code&gt;diskpart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the VHD and attempt to compact it: &lt;br /&gt;&lt;code&gt;select vdisk file="X:\Cache.vhd &lt;br /&gt;compact vdisk &lt;br /&gt;exit&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Should you ever need to move the file, you can use &lt;em&gt;mountvol.exe&lt;/em&gt; to dismount the VHD, copy it to another attached drive, and remount the VHD.&lt;/p&gt;
&lt;h4&gt;Scripted solution&lt;/h4&gt;
&lt;p&gt;Once the Hyper-V Module for Windows PowerShell is installed on supported Windows platforms, you can easily script this and execute it on remote machines running an elevated WinRM endpoint. &lt;a href="http://bit.ly/1ekfCGt"&gt;PowerShell&lt;/a&gt; is a powerful object-oriented shell that provides for the same compositional techniques of any modern programming language.&lt;/p&gt;
&lt;p&gt;I have created an &lt;a href="http://bit.ly/mvcache"&gt;example PowerShell script&lt;/a&gt; you can use locally on any Windows 7 machine or newer, or run on remote machines using the &lt;code&gt;Invoke-Command&lt;/code&gt; cmdlet.&lt;/p&gt;
&lt;p&gt;When bundles have been uninstalled and packages removed from the Package Cache, you can attempt to compact the VHD to reclaim space on the host disk.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open an elevated PowerShell prompt.&lt;/li&gt;
&lt;li&gt;Run the following command to get and optimize (compact) the VHD you passed as a parameter to &lt;code&gt;Move-WixPackageCache.ps1&lt;/code&gt; (ex: X:\Cache.vhd): &lt;br /&gt;&lt;code&gt;get-vhd X:\Cache.vhd | dismount-vhd -passthru | optimize-vhd -passthru | mount-vhd&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;Mounting virtual disks hosted on other attached disks can be an effective workaround to reducing space on the system drive. We will continue to explore options for locating more data on the chosen installation drive but there will always be some components that need to be installed to the Windows or Program Files directories. There are some &lt;a href="http://support.microsoft.com/kb/929831"&gt;known issues&lt;/a&gt; when redirecting those and other directories to another drive other than where Windows is installed, so leaving plenty of space on your system drive is always recommended.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498538" width="1" height="1"&gt;</description>
<pubDate>Tue, 11 Feb 2014 18:21:00 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10498538</guid>
<link>http://blogs.msdn.com/b/heaths/archive/2014/02/11/how-to-relocate-the-package-cache.aspx</link>
<author>Heath Stewart</author>
<comments>http://blogs.msdn.com/b/heaths/archive/2014/02/11/how-to-relocate-the-package-cache.aspx#comments</comments>
<category>Installation</category>
<category>PowerShell</category>
<category>WiX</category>
<category>Visual Studio</category>
<category>Tip</category>
<category>VS2012</category>
<category>VSUpdate</category>
<category>VS2013</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>VisualStudio</sxp:FeedId>
<sxp:PublishId>6077413</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10498538</sxp:AssetId>
<sxp:Author>Heath Stewart</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/heaths/archive/2014/02/11/how-to-relocate-the-package-cache.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Tue, 11 Feb 2014 21:56:36 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/heaths/archive/2014/02/11/how-to-relocate-the-package-cache.aspx</sxp:Link>
<sxp:PublishDate>Tue, 11 Feb 2014 18:21:00 GMT</sxp:PublishDate>
<sxp:RelativeTime>12 hours ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35411877</sxp:SourceItemId>
<sxp:SourceFeedId>2402</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>How to relocate the Package Cache</sxp:Title>
<sxp:Content>&lt;p&gt;Visual Studio can require a &lt;a href="http://bit.ly/y84B1u"&gt;lot of space on the system drive&lt;/a&gt;. Based on years of data collected from customers’ installations from the &lt;a href="http://go.microsoft.com/fwlink/?LinkID=105252"&gt;Customer Experience Improvement Program&lt;/a&gt;, we took advantage of this feature in Burn – the &lt;a href="http://wixtoolset.org"&gt;Windows Installer XML (WiX)&lt;/a&gt; chainer – to &lt;a href="http://bit.ly/LQL3LC"&gt;eliminate most errors during repair, servicing, and even uninstall&lt;/a&gt;. This was not a popular decision with some customers. For years even I pushed against caching Visual Studio deployment packages because of the impact to drive space as well, but as HDD space increased market studies showed little reason not to cache for the increased reliability of deployment.&lt;/p&gt;
&lt;p&gt;We understand, however, that many customers have smaller SSDs and while size will increase and cost decrease over time, some customers are blocked from installing Visual Studio or have little space left over after a successful installation.&lt;/p&gt;
&lt;p&gt;I have submitted a feature proposal to WiX to allow control over the Package Cache location, but until then there is a workaround that really highlights some of the virtualization features in Windows.&lt;/p&gt;
&lt;h3&gt;Disclaimer&lt;/h3&gt;
&lt;p&gt;This practice has received some testing and has been running under load for a reasonable amount of time. While it uses documented features of Windows, this is not an officially supported practice and may leave your machine in a corrupted state should you disconnected the secondary drive or fail to properly secure the folder mount point and its contents.&lt;/p&gt;
&lt;h3&gt;Workaround&lt;/h3&gt;
&lt;p&gt;You can move the contents of the Package Cache to a partition on another drive – copying the ACL and owner, which is very important for both security and because some programs may not trust any ACL or owner that is different than what is expected – and then mount that partition into an empty folder. But rather than dedicate an entire partition on a physical disk – which isn’t always as easy to reconfigure on the fly – we will create a virtual disk (VHD) on another drive.&lt;/p&gt;
&lt;p&gt;By creating an expandable virtual disk we can declare a maximum size that can be much larger than necessary – even larger than the host drive itself – but takes up only as much room as necessary and will grow as the content grows. This way, should you ever need to allocate more space you can simply dismount and move the VHD to another disk, then remount it. No need to recopy files.&lt;/p&gt;
&lt;p&gt;Mounting a VHD into an empty directory also maintains the mount across reboots – something not currently supported when mounting a VHD for drive access.&lt;/p&gt;
&lt;h4&gt;System requirements&lt;/h4&gt;
&lt;p&gt;Support for creating and mounting VHDs was built into Windows Vista with support for VHDs larger than 2TB added in Windows 8 using the newer VHDX format.&lt;/p&gt;
&lt;h4&gt;Manual walkthrough&lt;/h4&gt;
&lt;p&gt;To show more in depth how this works – and how you might adapt it for your own use – I will use a couple of built-in programs: &lt;em&gt;diskpart.exe&lt;/em&gt; and &lt;em&gt;mountvol.exe&lt;/em&gt;. We can also do all this in PowerShell with the right Windows Features enabled but I will cover that in the scripted section.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open an elevated command prompt.&lt;/li&gt;
&lt;li&gt;Run &lt;em&gt;diskpart.exe&lt;/em&gt; to start the disk partitioning utility: &lt;br /&gt;&lt;code&gt;diskpart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a large (ex: 1TB), expandable VHD on whatever secondary disk (ex: X:) you prefer with security matching the source directory’s security: &lt;br /&gt;&lt;code&gt;create vdisk file="X:\Cache.vhd" type=expandable maximum=1048576 sd="O:BAG:DUD:P(A;;FA;;;BA)(A;;FA;;;SY)(A;;FRFX;;;BU)(A;;FRFX;;;WD)" &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the VHD and create a partition using all available space: &lt;br /&gt;select vdisk file="X:\Cache.vhd" &lt;br /&gt;attach vdisk &lt;br /&gt;create partition primary&lt;/li&gt;
&lt;li&gt;Format the volume that was created automatically and temporarily assign a drive letter (ex: P:): &lt;br /&gt;&lt;code&gt;format fs=ntfs label="Package Cache" quick &lt;br /&gt;assign letter=P &lt;br /&gt;exit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;After exiting &lt;em&gt;diskpart.exe&lt;/em&gt;, move any existing per-machine payloads from the Package Cache with security: &lt;br /&gt;&lt;code&gt;robocopy "%ProgramData%\Package Cache" P:\ /e /copyall /move /zb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Recreate the Package Cache directory and set up the ACL and owner as before: &lt;br /&gt;&lt;code&gt;mkdir "%ProgramData%\Package Cache" &lt;br /&gt;echo y | cacls foo /s:"O:BAG:DUD:PAI(A;OICIID;FA;;;BA)(A;OICIID;FA;;;SY)(A;OICIID;FRFX;;;BU)(A;OICIID;FRFX;;;WD)"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;em&gt;mountvol.exe&lt;/em&gt; without any parameters first and look for the volume name that has the drive letter you assigned to the VHD, then use that with &lt;em&gt;mountvol.exe&lt;/em&gt; again to mount that volume into the empty Package Cache directory. &lt;br /&gt;&lt;code&gt;mountvol &lt;br /&gt;mountvol "%ProgramData%\Package Cache" \\?\Volume{a525b826-8a0c-11e3-be94-00249b0716f5}\&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;em&gt;diskpart.exe&lt;/em&gt; again and remove the drive letter assignment from the volume (should be in partition 1 of the VHD): &lt;br /&gt;&lt;code&gt;select vdisk file="X:\Cache.vhd" &lt;br /&gt;select partition 1 &lt;br /&gt;remove letter=P &lt;br /&gt;exit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Non-boot VHDs are not automatically mounted, so before you reboot you need to make sure the VHD is mounted again whenever the machine is started. Write a simple script for &lt;em&gt;diskpart.exe&lt;/em&gt; to execute on startup. If you’re doing this on a laptop, you should edit the scheduled task afterward to allow it to run on batteries. &lt;br /&gt;&lt;code&gt;echo select vdisk file=X:\Cache.vhd &gt; X:\Cache.txt &lt;br /&gt;echo attach vdisk &gt;&gt; X:\Cache.txt &lt;br /&gt;schtasks /create /ru system /sc onstart /rl highest /tn "Attach Package Cache" /tr "%SystemRoot%\System32\diskpart.exe /s X:\Cache.txt"&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After exiting &lt;em&gt;diskpart.exe&lt;/em&gt; you now have mapped a VHD on another drive into the new Package Cache directory. The VHD will be remounted into the directory whenever the machine is rebooted. If you look at the mount point, you will also see its icon, description, and size are different.&lt;/p&gt;
&lt;p&gt;The size reported in Windows Explorer is merely the maximum and not how much space is consumed within the virtual disk. In fact, you probably would care less about that than how much space the VHD itself is consuming. Browse to the folder were you created the VHD (ex: X:\Cache.vhd) and you will see the actual file size.&lt;/p&gt;
&lt;p&gt;When bundles have been uninstalled and packages removed from the Package Cache, you can attempt to compact the VHD to reclaim space on the host disk.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open an elevated command prompt.&lt;/li&gt;
&lt;li&gt;Run &lt;em&gt;diskpart.exe&lt;/em&gt;: &lt;br /&gt;&lt;code&gt;diskpart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the VHD and attempt to compact it: &lt;br /&gt;&lt;code&gt;select vdisk file="X:\Cache.vhd &lt;br /&gt;compact vdisk &lt;br /&gt;exit&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Should you ever need to move the file, you can use &lt;em&gt;mountvol.exe&lt;/em&gt; to dismount the VHD, copy it to another attached drive, and remount the VHD.&lt;/p&gt;
&lt;h4&gt;Scripted solution&lt;/h4&gt;
&lt;p&gt;Once the Hyper-V Module for Windows PowerShell is installed on supported Windows platforms, you can easily script this and execute it on remote machines running an elevated WinRM endpoint. &lt;a href="http://bit.ly/1ekfCGt"&gt;PowerShell&lt;/a&gt; is a powerful object-oriented shell that provides for the same compositional techniques of any modern programming language.&lt;/p&gt;
&lt;p&gt;I have created an &lt;a href="http://bit.ly/mvcache"&gt;example PowerShell script&lt;/a&gt; you can use locally on any Windows 7 machine or newer, or run on remote machines using the &lt;code&gt;Invoke-Command&lt;/code&gt; cmdlet.&lt;/p&gt;
&lt;p&gt;When bundles have been uninstalled and packages removed from the Package Cache, you can attempt to compact the VHD to reclaim space on the host disk.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open an elevated PowerShell prompt.&lt;/li&gt;
&lt;li&gt;Run the following command to get and optimize (compact) the VHD you passed as a parameter to &lt;code&gt;Move-WixPackageCache.ps1&lt;/code&gt; (ex: X:\Cache.vhd): &lt;br /&gt;&lt;code&gt;get-vhd X:\Cache.vhd | dismount-vhd -passthru | optimize-vhd -passthru | mount-vhd&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;Mounting virtual disks hosted on other attached disks can be an effective workaround to reducing space on the system drive. We will continue to explore options for locating more data on the chosen installation drive but there will always be some components that need to be installed to the Windows or Program Files directories. There are some &lt;a href="http://support.microsoft.com/kb/929831"&gt;known issues&lt;/a&gt; when redirecting those and other directories to another drive other than where Windows is installed, so leaving plenty of space on your system drive is always recommended.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498538" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>How to relocate the Package Cache</sxp:MobileTitle>
<sxp:MobileContent>Visual Studio can require a lot of space on the system drive. Based on years of data collected from customers’ installations from the Customer Experience Improvement Program, we took advantage of this feature in Burn – the Windows Installer XML (WiX) chainer – to eliminate most errors during repair, servicing, and even uninstall. This was not a popular decision with some customers. For years even I pushed against caching Visual Studio deployment packages because of the impact to drive space as well, but as HDD space increased market studies showed little reason not to cache for the increased reliability of deployment.
We understand, however, that many customers have smaller SSDs and while size will increase and cost decrease over time, some customers are blocked from installing Visual Studio or have little space left over after a successful installation.
I have submitted a feature proposal to WiX to allow control over the Package Cache location, but until then there is a workaround that really highlights some of the virtualization features in Windows.Disclaimer
This practice has received some testing and has been running under load for a reasonable amount of time. While it uses documented features of Windows, this is not an officially supported practice and may leave your machine in a corrupted state should you disconnected the secondary drive or fail to properly secure the folder mount point and its contents.Workaround
You can move the contents of the Package Cache to a partition on another drive – copying the ACL and owner, which is very important for both security and because some programs may not trust any ACL or owner that is different than what is expected – and then mount that partition into an empty folder. But rather than dedicate an entire partition on a physical disk – which isn’t always as easy to reconfigure on the fly – we will create a virtual disk (VHD) on another drive.
By creating an expandable virtual disk we can declare a maximum size that can be much larger than necessary – even larger than the host drive itself – but takes up only as much room as necessary and will grow as the content grows. This way, should you ever need to allocate more space you can simply dismount and move the VHD to another disk, then remount it. No need to recopy files.
Mounting a VHD into an empty directory also maintains the mount across reboots – something not currently supported when mounting a VHD for drive access.System requirements
Support for creating and mounting VHDs was built into Windows Vista with support for VHDs larger than 2TB added in Windows 8 using the newer VHDX format.Manual walkthrough
To show more in depth how this works – and how you might adapt it for your own use – I will use a couple of built-in programs: diskpart.exe and mountvol.exe. We can also do all this in PowerShell with the right Windows Features enabled but I will cover that in the scripted section.Open an elevated command prompt.Run diskpart.exe to start the disk partitioning utility: diskpartCreate a large (ex: 1TB), expandable VHD on whatever secondary disk (ex: X:) you prefer with security matching the source directory’s security: create vdisk file="X:\Cache.vhd" type=expandable maximum=1048576 sd="O:BAG:DUD:P(A;;FA;;;BA)(A;;FA;;;SY)(A;;FRFX;;;BU)(A;;FRFX;;;WD)" Select the VHD and create a partition using all available space: select vdisk file="X:\Cache.vhd" attach vdisk create partition primaryFormat the volume that was created automatically and temporarily assign a drive letter (ex: P:): format fs=ntfs label="Package Cache" quick assign letter=P exitAfter exiting diskpart.exe, move any existing per-machine payloads from the Package Cache with security: robocopy "%ProgramData%\Package Cache" P:\ /e /copyall /move /zbRecreate the Package Cache directory and set up the ACL and owner as before: mkdir "%ProgramData%\Package Cache" echo y | cacls foo /s:"O:BAG:DUD:PAI(A;OICIID;FA;;;BA)(A;OICIID;FA;;;SY)(A;OICIID;FRFX;;;BU)(A;OICIID;FRFX;;;WD)"Run mountvol.exe without any parameters first and look for the volume name that has the drive letter you assigned to the VHD, then use that with mountvol.exe again to mount that volume into the empty Package Cache directory. mountvol mountvol "%ProgramData%\Package Cache" \\?\Volume{a525b826-8a0c-11e3-be94-00249b0716f5}\Run diskpart.exe again and remove the drive letter assignment from the volume (should be in partition 1 of the VHD): select vdisk file="X:\Cache.vhd" select partition 1 remove letter=P exitNon-boot VHDs are not automatically mounted, so before you reboot you need to make sure the VHD is mounted again whenever the machine is started. Write a simple script for diskpart.exe to execute on startup. If you’re doing this on a laptop, you should edit the scheduled task afterward to allow it to run on batteries. echo select vdisk file=X:\Cache.vhd &gt; X:\Cache.txt echo attach vdisk &gt;&gt; X:\Cache.txt schtasks /create /ru system /sc onstart /rl highest /tn "Attach Package Cache" /tr "%SystemRoot%\System32\diskpart.exe /s X:\Cache.txt"
After exiting diskpart.exe you now have mapped a VHD on another drive into the new Package Cache directory. The VHD will be remounted into the directory whenever the machine is rebooted. If you look at the mount point, you will also see its icon, description, and size are different.
The size reported in Windows Explorer is merely the maximum and not how much space is consumed within the virtual disk. In fact, you probably would care less about that than how much space the VHD itself is consuming. Browse to the folder were you created the VHD (ex: X:\Cache.vhd) and you will see the actual file size.
When bundles have been uninstalled and packages removed from the Package Cache, you can attempt to compact the VHD to reclaim space on the host disk.Open an elevated command prompt.Run diskpart.exe: diskpartSelect the VHD and attempt to compact it: select vdisk file="X:\Cache.vhd compact vdisk exit
Should you ever need to move the file, you can use mountvol.exe to dismount the VHD, copy it to another attached drive, and remount the VHD.Scripted solution
Once the Hyper-V Module for Windows PowerShell is installed on supported Windows platforms, you can easily script this and execute it on remote machines running an elevated WinRM endpoint. PowerShell is a powerful object-oriented shell that provides for the same compositional techniques of any modern programming language.
I have created an example PowerShell script you can use locally on any Windows 7 machine or newer, or run on remote machines using the Invoke-Command cmdlet.
When bundles have been uninstalled and packages removed from the Package Cache, you can attempt to compact the VHD to reclaim space on the host disk.Open an elevated PowerShell prompt.Run the following command to get and optimize (compact) the VHD you passed as a parameter to Move-WixPackageCache.ps1 (ex: X:\Cache.vhd): get-vhd X:\Cache.vhd | dismount-vhd -passthru | optimize-vhd -passthru | mount-vhdSummary
Mounting virtual disks hosted on other attached disks can be an effective workaround to reducing space on the system drive. We will continue to explore options for locating more data on the chosen installation drive but there will always be some components that need to be installed to the Windows or Program Files directories. There are some known issues when redirecting those and other directories to another drive other than where Windows is installed, so leaving plenty of space on your system drive is always recommended.</sxp:MobileContent>
<sxp:Tag>Installation</sxp:Tag>
<sxp:Tag>PowerShell</sxp:Tag>
<sxp:Tag>WiX</sxp:Tag>
<sxp:Tag>Visual Studio</sxp:Tag>
<sxp:Tag>Tip</sxp:Tag>
<sxp:Tag>VS2012</sxp:Tag>
<sxp:Tag>VSUpdate</sxp:Tag>
<sxp:Tag>VS2013</sxp:Tag>
</item>
<item>
<title>UI Enhancements for IntelliTrace with Visual Studio 2013 Update 2</title>
<description>&lt;p&gt;As announced previously on this blog, with Visual Studio 2013 RTM, we also released the &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/09/20/introducing-microsoft-monitoring-agent.aspx"&gt;Microsoft Monitoring Agent (MMA) which can produce .itrace files for issues with applications in production&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This includes exception information, but also &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/09/20/performance-details-in-intellitrace.aspx"&gt;performance event violations&lt;/a&gt;. In Visual Studio 2013 Update 2, we continue to improve this experience by providing better visualization and analysis for this MMA scenario. This blog post focuses on two of these: performance event grouping (for when the data is sourced from MMA Standalone), and performance details hot path (for MMA data from Standalone, System Center, or AppInsights).&lt;/p&gt;
&lt;h2&gt;IntelliTrace Performance Event Grouping&lt;/h2&gt;
&lt;p&gt;While exception information is already grouped, performance data is not with Visual Studio 2013 RTM, as per the following screenshot.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/6523.rtmungrouped2_5F00_2E634BDA.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="rtmungrouped2" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/1817.rtmungrouped2_5F00_thumb_5F00_3C3591D5.png" alt="rtmungrouped2" width="921" height="310" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The quantity of performance events can get extremely large, especially when collecting over a long period of time. However, they can also be very redundant, most likely because they point to the same root cause. In &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390521"&gt;Visual Studio 2013 Update 2&lt;/a&gt;, we introduce grouping to address this issue, as per the following screenshot. Notice we don’t even have a scrollbar to scroll through.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/6116.update2grouping2_5F00_4A07D7D0.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="update2grouping2" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/6138.update2grouping2_5F00_thumb_5F00_42E89B58.png" alt="update2grouping2" width="838" height="238" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Performance events with the same description are now combined together. Additional data, such as average and max durations per event description are also displayed. Getting details for each event will automatically pick the newest event, but can be changed to select the slowest one instead. Grouping makes it easy to find recurring performance violations and reduces the noise when analyzing failures. You can also uncheck the ‘Group by Description’ checkbox to see the complete list of events, and hence revert to the Visual Studio 2013 RTM experience.&lt;/p&gt;
&lt;h2&gt;IntelliTrace Performance Details Hot Path&lt;/h2&gt;
&lt;p&gt;Once you’ve picked the event you are interested in, you can double click it to go to the &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/09/20/performance-details-in-intellitrace.aspx"&gt;performance details page&lt;/a&gt;. We’ve made several improvements here, one of which is to visualize the hot path for the slowest calls. A slow call is a method which took considerably long to run relative to the total time.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/1638.hotpath2_5F00_14A11BC6.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="hotpath2" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/8585.hotpath2_5F00_thumb_5F00_0D81DF4E.png" alt="hotpath2" width="707" height="502" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The hot path indicates the methods that led up to a slow call. The methods are indicated by small flames, and the slow call is indicated by the large flame. Visualizing the hot path makes it easier to figure out the flow of the code that led to the performance violation, especially in a complex tree. Switching between different hot paths will automatically expand and collapse the right nodes in the tree. In the example above the slowest call is an Entity Framework generated SQL query. We’ve added some additional analysis over slow SQL calls, and we describe that in our other blog post on &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/10/jump-to-sql-with-intellitrace.aspx"&gt;Jump to SQL with IntelliTrace&lt;/a&gt;.&lt;ins cite="mailto:Daniel%20Moth" datetime="2014-02-05T19:56"&gt;&lt;/ins&gt;&lt;/p&gt;
&lt;h2&gt;In Closing&lt;/h2&gt;
&lt;p&gt;We hope you find these two UI improvements in the Visual Studio IntelliTrace experience for MMA-sourced IntelliTrace files useful. For feedback on this, or any IntelliTrace feature, please ask us at our &lt;a href="http://social.msdn.microsoft.com/Forums/vstudio/en-US/home?forum=vsdebug"&gt;diagnostics MSDN forum&lt;/a&gt;.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498531" width="1" height="1"&gt;</description>
<pubDate>Tue, 11 Feb 2014 17:57:00 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10498531</guid>
<link>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/11/ui-enhancements-for-intellitrace-with-visual-studio-2013-update-2.aspx</link>
<author>WiktorK</author>
<comments>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/11/ui-enhancements-for-intellitrace-with-visual-studio-2013-update-2.aspx#comments</comments>
<category>IntelliTrace</category>
<category>Diagnostics</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>ALM</sxp:FeedId>
<sxp:PublishId>6074634</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10498531</sxp:AssetId>
<sxp:Author>WiktorK</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/11/ui-enhancements-for-intellitrace-with-visual-studio-2013-update-2.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Tue, 11 Feb 2014 18:55:44 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/11/ui-enhancements-for-intellitrace-with-visual-studio-2013-update-2.aspx</sxp:Link>
<sxp:PublishDate>Tue, 11 Feb 2014 17:57:00 GMT</sxp:PublishDate>
<sxp:RelativeTime>13 hours ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35409621</sxp:SourceItemId>
<sxp:SourceFeedId>2403</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>UI Enhancements for IntelliTrace with Visual Studio 2013 Update 2</sxp:Title>
<sxp:Content>&lt;p&gt;As announced previously on this blog, with Visual Studio 2013 RTM, we also released the &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/09/20/introducing-microsoft-monitoring-agent.aspx"&gt;Microsoft Monitoring Agent (MMA) which can produce .itrace files for issues with applications in production&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This includes exception information, but also &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/09/20/performance-details-in-intellitrace.aspx"&gt;performance event violations&lt;/a&gt;. In Visual Studio 2013 Update 2, we continue to improve this experience by providing better visualization and analysis for this MMA scenario. This blog post focuses on two of these: performance event grouping (for when the data is sourced from MMA Standalone), and performance details hot path (for MMA data from Standalone, System Center, or AppInsights).&lt;/p&gt;
&lt;h2&gt;IntelliTrace Performance Event Grouping&lt;/h2&gt;
&lt;p&gt;While exception information is already grouped, performance data is not with Visual Studio 2013 RTM, as per the following screenshot.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/6523.rtmungrouped2_5F00_2E634BDA.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="rtmungrouped2" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/1817.rtmungrouped2_5F00_thumb_5F00_3C3591D5.png" alt="rtmungrouped2" width="921" height="310" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The quantity of performance events can get extremely large, especially when collecting over a long period of time. However, they can also be very redundant, most likely because they point to the same root cause. In &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390521"&gt;Visual Studio 2013 Update 2&lt;/a&gt;, we introduce grouping to address this issue, as per the following screenshot. Notice we don’t even have a scrollbar to scroll through.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/6116.update2grouping2_5F00_4A07D7D0.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;" title="update2grouping2" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/6138.update2grouping2_5F00_thumb_5F00_42E89B58.png" alt="update2grouping2" width="838" height="238" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Performance events with the same description are now combined together. Additional data, such as average and max durations per event description are also displayed. Getting details for each event will automatically pick the newest event, but can be changed to select the slowest one instead. Grouping makes it easy to find recurring performance violations and reduces the noise when analyzing failures. You can also uncheck the ‘Group by Description’ checkbox to see the complete list of events, and hence revert to the Visual Studio 2013 RTM experience.&lt;/p&gt;
&lt;h2&gt;IntelliTrace Performance Details Hot Path&lt;/h2&gt;
&lt;p&gt;Once you’ve picked the event you are interested in, you can double click it to go to the &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/09/20/performance-details-in-intellitrace.aspx"&gt;performance details page&lt;/a&gt;. We’ve made several improvements here, one of which is to visualize the hot path for the slowest calls. A slow call is a method which took considerably long to run relative to the total time.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/1638.hotpath2_5F00_14A11BC6.png"&gt;&lt;img style="background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;" title="hotpath2" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92-metablogapi/8585.hotpath2_5F00_thumb_5F00_0D81DF4E.png" alt="hotpath2" width="707" height="502" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The hot path indicates the methods that led up to a slow call. The methods are indicated by small flames, and the slow call is indicated by the large flame. Visualizing the hot path makes it easier to figure out the flow of the code that led to the performance violation, especially in a complex tree. Switching between different hot paths will automatically expand and collapse the right nodes in the tree. In the example above the slowest call is an Entity Framework generated SQL query. We’ve added some additional analysis over slow SQL calls, and we describe that in our other blog post on &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/10/jump-to-sql-with-intellitrace.aspx"&gt;Jump to SQL with IntelliTrace&lt;/a&gt;.&lt;ins cite="mailto:Daniel%20Moth" datetime="2014-02-05T19:56"&gt;&lt;/ins&gt;&lt;/p&gt;
&lt;h2&gt;In Closing&lt;/h2&gt;
&lt;p&gt;We hope you find these two UI improvements in the Visual Studio IntelliTrace experience for MMA-sourced IntelliTrace files useful. For feedback on this, or any IntelliTrace feature, please ask us at our &lt;a href="http://social.msdn.microsoft.com/Forums/vstudio/en-US/home?forum=vsdebug"&gt;diagnostics MSDN forum&lt;/a&gt;.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498531" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>UI Enhancements for IntelliTrace with Visual Studio 2013 Update 2</sxp:MobileTitle>
<sxp:MobileContent>As announced previously on this blog, with Visual Studio 2013 RTM, we also released the Microsoft Monitoring Agent (MMA) which can produce .itrace files for issues with applications in production.
This includes exception information, but also performance event violations. In Visual Studio 2013 Update 2, we continue to improve this experience by providing better visualization and analysis for this MMA scenario. This blog post focuses on two of these: performance event grouping (for when the data is sourced from MMA Standalone), and performance details hot path (for MMA data from Standalone, System Center, or AppInsights).IntelliTrace Performance Event Grouping
While exception information is already grouped, performance data is not with Visual Studio 2013 RTM, as per the following screenshot.

The quantity of performance events can get extremely large, especially when collecting over a long period of time. However, they can also be very redundant, most likely because they point to the same root cause. In Visual Studio 2013 Update 2, we introduce grouping to address this issue, as per the following screenshot. Notice we don’t even have a scrollbar to scroll through.

Performance events with the same description are now combined together. Additional data, such as average and max durations per event description are also displayed. Getting details for each event will automatically pick the newest event, but can be changed to select the slowest one instead. Grouping makes it easy to find recurring performance violations and reduces the noise when analyzing failures. You can also uncheck the ‘Group by Description’ checkbox to see the complete list of events, and hence revert to the Visual Studio 2013 RTM experience.IntelliTrace Performance Details Hot Path
Once you’ve picked the event you are interested in, you can double click it to go to the performance details page. We’ve made several improvements here, one of which is to visualize the hot path for the slowest calls. A slow call is a method which took considerably long to run relative to the total time.

The hot path indicates the methods that led up to a slow call. The methods are indicated by small flames, and the slow call is indicated by the large flame. Visualizing the hot path makes it easier to figure out the flow of the code that led to the performance violation, especially in a complex tree. Switching between different hot paths will automatically expand and collapse the right nodes in the tree. In the example above the slowest call is an Entity Framework generated SQL query. We’ve added some additional analysis over slow SQL calls, and we describe that in our other blog post on Jump to SQL with IntelliTrace.In Closing
We hope you find these two UI improvements in the Visual Studio IntelliTrace experience for MMA-sourced IntelliTrace files useful. For feedback on this, or any IntelliTrace feature, please ask us at our diagnostics MSDN forum.</sxp:MobileContent>
<sxp:Tag>IntelliTrace</sxp:Tag>
<sxp:Tag>Diagnostics</sxp:Tag>
</item>
<item>
<title>A Tour of the LightSwitch HTML Client APIs (Elizabeth Maher)</title>
<description>&lt;p&gt;LightSwitch generates a custom API set based on project assets that developers can use when writing custom code in the HTML client. Each data source, table, query and screen causes various items to be created in the API. Even actions on each of the LightSwitch designers can have affect. This article will enumerate what actions in a LightSwitch project will affect the generated JavaScript &lt;a href="http://en.wikipedia.org/wiki/Single-page_application"&gt;Single Page Application&lt;/a&gt; programming model for the HTML Client, which is based on &lt;a href="http://jquerymobile.com/"&gt;jQuery Mobile&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;If you are not familiar with the overall architecture of the HTML Client, please see &lt;a href="http://blogs.msdn.com/b/lightswitch/archive/2012/06/21/the-lightswitch-html-client-an-architectural-overview.aspx"&gt;&lt;i&gt;The LightSwitch HTML Client: An Architectural Overview&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt;  &lt;h3&gt;Entities&lt;/h3&gt;  &lt;h3&gt; &lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/5383.clip_5F00_image002_5F00_6E1BAEE8.jpg"&gt;&lt;img title="clip_image002" style="display: inline; background-image: none;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/4810.clip_5F00_image002_5F00_thumb_5F00_37AD8D97.jpg" width="626" height="375" /&gt;&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;For each entity, there are several generated methods available via the active &lt;a href="http://msdn.microsoft.com/en-us/library/gg445195.aspx"&gt;data workspace&lt;/a&gt;, which you can access from the global object "myapp". In the above picture, we have a Table1Items table, which is part of the ApplicationData datasource. The generated objects in this case would be as follows.&lt;/p&gt; &lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;  &lt;table cellspacing="0" cellpadding="0" border="1"&gt;&lt;tbody&gt;     &lt;tr&gt;       &lt;td valign="top" width="211"&gt;         &lt;p&gt;&lt;strong&gt;Method Signature&lt;/strong&gt;&lt;/p&gt;         &lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;        &lt;td valign="top" width="337"&gt;&lt;strong&gt;&lt;/strong&gt;          &lt;p&gt;&lt;strong&gt;Return type&lt;/strong&gt;&lt;/p&gt;         &lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;        &lt;td valign="top" width="232"&gt;&lt;strong&gt;&lt;/strong&gt;          &lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;       &lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign="top" width="211"&gt;         &lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.activeDataWorkspace
.ApplicationData.Table1Items&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="337"&gt; &lt;/td&gt;

&lt;td valign="top" width="232"&gt;
&lt;p&gt;This member gets the Table1Item entity set. Results can be further manipulated by calling available functions like orderBy, skip, etc. The addNew function can also be called to create another Table1Item entity instance.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="211"&gt;
&lt;pre class="code"&gt;&lt;span style="color: black;"&gt;myapp.activeDataWorkspace
.ApplicationData.getTable1Items()&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="337"&gt;
&lt;p&gt;WinJs.Promise&lt;/p&gt;
&lt;/td&gt;

&lt;td valign="top" width="232"&gt;
&lt;p&gt;Asynchronously gets the value of all Table1Items. &lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="211"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.activeDataWorkspace
.ApplicationData
.Table1Items_SingleOrDefault(id)&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="337"&gt; &lt;/td&gt;

&lt;td valign="top" width="232"&gt;
&lt;p&gt;Method represents a query to get a specific record from Table1Items based on the Id.  The ‘_SingleOrDefault(id)’ is available for all intrinisic or internal tables.  &lt;/p&gt;

&lt;p&gt;Call .execute() to get the results of the query asynchronously.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h4&gt;Entry Point&lt;/h4&gt;

&lt;p&gt;For each entity that is created, there is a custom entry point for the created event of that entity. For an entity called Table1Items, the method signature would be as follows.&lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.Table1Items.created = &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(entity) {};
&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;To access this entry point, open the designer for the entity, select the HTML client perspective, choose the Write Code dropdown and click created. This method is called every time a new instance of a Table1Item entity is created. The created method is an excellent place for any custom logic needed to set appropriate defaults for new entities.&lt;/p&gt;

&lt;h3&gt;Queries&lt;/h3&gt;

&lt;p&gt;Every query seen in Solution Explorer can also be accessed in code via a method off the active data workspace object. For example, a query named Query1 that belongs to the ApplicationData data source would have a signature as follows.&lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.activeDataWorkspace.ApplicationData.Query1()&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/5808.clip_5F00_image0021_5F00_5E7BA3D7.jpg"&gt;&lt;img title="clip_image002[1]" style="display: inline; background-image: none;" border="0" alt="clip_image002[1]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/6560.clip_5F00_image0021_5F00_thumb_5F00_705837A4.jpg" width="606" height="363" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If the query has any parameters, the generated method is changed to take the appropriate number and type of arguments. In the screen shot above, we see that Query1 takes a string parameter called Parameter1. In this case the method signature would be the following.&lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.activeDataWorkspace.ApplicationData.Query1(Parameter1)&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;To asynchronously execute the query, call the execute method. A WinJS.Promise is returned by the execute method.&lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.activeDataWorkspace.ApplicationData.Query1(&lt;/span&gt;&lt;span style="background: white; color: rgb(163, 21, 21);"&gt;"parameter value"&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;)
.execute().then(
&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(results) {
    &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(results.results.length &gt;= 0) {
        msls.showMessageBox(&lt;/span&gt;&lt;span style="background: white; color: rgb(163, 21, 21);"&gt;"Found some records!"&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;);
    }
},
&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(error) {
    alert(error);
}
);
&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;For more information about using Promises see: &lt;a href="http://blogs.msdn.com/b/lightswitch/archive/2014/02/04/promises-in-lightswitch-justin-anderson.aspx"&gt;&lt;i&gt;Promises in LightSwitch &lt;/i&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Screens&lt;/h3&gt;

&lt;p&gt;The API for customizing screens is affected by everything that is contained in the screen member’s list and screen content item tree. The screen members list is the list of available data on the left hand side of the screen. A screen content item is a node in the tree view in the middle of the screen designer.&lt;/p&gt;

&lt;p&gt;The result of the generated code depends on the type of screen member, which may be an entity collection, single entity instance, screen property or screen method. Below is a picture of a project with a screen containing all the types of screen members.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/7558.clip_5F00_image0023_5F00_7E2A7D9F.jpg"&gt;&lt;img title="clip_image002[3]" style="display: inline; background-image: none;" border="0" alt="clip_image002[3]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/4010.clip_5F00_image0023_5F00_thumb_5F00_3DF46425.jpg" width="624" height="373" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Screen Members&lt;/h4&gt;

&lt;p&gt;For every screen member, a property accessor is created. For this screen the following screen members were created.&lt;/p&gt;

&lt;table cellspacing="0" cellpadding="2" width="399" border="1"&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="top" width="101"&gt;
&lt;p&gt;&lt;strong&gt;Member Name&lt;/strong&gt;&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;strong&gt;&lt;/strong&gt;

&lt;td valign="top" width="151"&gt;&lt;strong&gt;&lt;/strong&gt;

&lt;p&gt;&lt;strong&gt;Data Type&lt;/strong&gt;&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;strong&gt;&lt;/strong&gt;

&lt;td valign="top" width="48"&gt;&lt;strong&gt;&lt;/strong&gt;

&lt;p&gt;&lt;strong&gt;Generated API&lt;/strong&gt;&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;strong&gt;&lt;/strong&gt;

&lt;td valign="top" width="97"&gt;&lt;strong&gt;&lt;/strong&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="101"&gt;Table1Items&lt;/td&gt;

&lt;td valign="top" width="151"&gt;Query returning a set of records&lt;/td&gt;

&lt;td valign="top" width="48"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;screen.Table1Items&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="98"&gt;Returns msls.VisualCollection.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="101"&gt; &lt;/td&gt;

&lt;td valign="top" width="151"&gt; &lt;/td&gt;

&lt;td valign="top" width="48"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;screen.getTable1Items()&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="98"&gt;Returns a WinJSPromise after getting the data for Table1Items asynchronously.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="101"&gt;LocalProperty1&lt;/td&gt;

&lt;td valign="top" width="151"&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/7wkd9z69(v=vs.94).aspx"&gt;Primitive type&lt;/a&gt; or single entity type&lt;/td&gt;

&lt;td valign="top" width="48"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;screen.LocalProperty1&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="98"&gt;
&lt;p&gt;Get/set value of screen property. Type is same as specified by the ‘Property Type’ in the Properties windows.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="101"&gt;Table1Item&lt;/td&gt;

&lt;td valign="top" width="151"&gt;Query returning a single record&lt;/td&gt;

&lt;td valign="top" width="48"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;screen.Table1Item&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="98"&gt;Returns msls.application.Table1Item&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="101"&gt; &lt;/td&gt;

&lt;td valign="top" width="151"&gt; &lt;/td&gt;

&lt;td valign="top" width="48"&gt;
&lt;pre class="code"&gt;screen&lt;span style="background: white; color: black;"&gt;.getTable1Item()&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="98"&gt;
&lt;p&gt;Returns a WinJSPromise after getting the data for Table1Item asynchronously.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="101"&gt;MyMethod&lt;/td&gt;

&lt;td valign="top" width="151"&gt;Screen method&lt;/td&gt;

&lt;td valign="top" width="48"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;screen.MyMethod();  &lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="98"&gt;This will execute MyMethod.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h4&gt;Method Entry Points&lt;/h4&gt;

&lt;p&gt;Each screen method listed in the screen members list will have two methods available.&lt;/p&gt;

&lt;table cellspacing="0" cellpadding="0" border="1"&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="top" width="390"&gt;
&lt;p&gt;&lt;strong&gt;Method Signature&lt;/strong&gt;&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;strong&gt;&lt;/strong&gt;

&lt;td valign="top" width="390"&gt;&lt;strong&gt;&lt;/strong&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="390"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.BrowseTable1Items.MyMethod_execute = &lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(screen) { };&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="390"&gt;
&lt;p&gt;This is the function executed when the MyMethod button is clicked or screen.MyMethod() is called.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="390"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.BrowseTable1Items.MyMethod_canExecute = &lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(screen) { };&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="390"&gt;
&lt;p&gt;If this function returns false, the MyMethod button will be disabled. If true is returned then MyMethod button will be enabled.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h4&gt;Content Item Methods&lt;/h4&gt;

&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/0537.clip_5F00_image0014_5F00_7DBE4AAA.png"&gt;&lt;img title="clip_image001[4]" style="display: inline; background-image: none;" border="0" alt="clip_image001[4]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/8055.clip_5F00_image0014_5F00_thumb_5F00_20821319.png" width="686" height="265" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The state of screen content item affects which functions are used for manipulating the UI of that screen. Using the BrowseTable1Items as an example again, a custom control with the name of ContentItem1 method with the signature of&lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.BrowseTable1Items.ContentItem1_render = &lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(element, contentItem) {};&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;The element is simply the root HTML element for the control. The contentItem parameter is a customized object allowing access to ContentItem1’s value, data bindings and validation results.&lt;/p&gt;

&lt;p&gt;Most content items, that are not custom controls, may be modified by adding code to their post render function. For example, if the ContentItem2 content item is displayed as textbox, then the post render function signature would look like the following.&lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.BrowseTable1Items.ContentItem2_postRender = &lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(element, contentItem) {};
&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;You will notice that the method arguments are the same. The main difference is the timing when these methods are called. As the name suggests, the postRender function is called after the HTML elements used to display the content item are created.&lt;/p&gt;

&lt;p&gt;Here's a rule of thumb on when to use these events:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- If you need to insert new elements into the DOM, use the render event.&lt;/em&gt; The render event allows you to programmatically create and insert an arbitrary set of DOM elements. For example, if you want to use a control from &lt;a href="http://jqueryui.com/"&gt;jQuery UI&lt;/a&gt;, use the &lt;b&gt;&lt;i&gt;render&lt;/i&gt;&lt;/b&gt; event to instantiate the control and insert it into the DOM.&lt;/p&gt;

&lt;p&gt;- &lt;i&gt;If you need to augment or otherwise modify DOM elements created by LightSwitch, use the postRender event.&lt;/i&gt; The &lt;b&gt;&lt;i&gt;postRender&lt;/i&gt;&lt;/b&gt; event is commonly used to add a CSS class or DOM attribute to existing DOM elements: for example, you may want to add a &lt;a href="http://jquerymobile.com/"&gt;jQuery Mobile&lt;/a&gt; class to a DOM element created by LightSwitch. &lt;/p&gt;

&lt;p&gt;For examples see &lt;a href="http://blogs.msdn.com/b/lightswitch/archive/2012/12/06/custom-controls-and-data-binding-in-the-lightswitch-html-client-joe-binder.aspx"&gt;&lt;i&gt;Custom Controls and Data Binding in the LightSwitch HTML&lt;/i&gt;&lt;/a&gt;&lt;i&gt; &lt;/i&gt;&lt;/p&gt;

&lt;h4&gt;Screen Entry Points&lt;/h4&gt;

&lt;p&gt;It should also be noted that each screen has customized entry points. For the screen shown above, the entry points would be as follows.&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;

&lt;table cellspacing="0" cellpadding="0" border="1"&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="top" width="390"&gt;
&lt;p&gt;&lt;strong&gt;Entry Point&lt;/strong&gt;&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;

&lt;td valign="top" width="390"&gt;&lt;strong&gt;&lt;/strong&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="390"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;span style="background: white; color: black;"&gt;myapp.BrowseTable1Items.created
= &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(screen) {}&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="390"&gt;
&lt;p&gt;This method is called each time BrowseTable1Items screen is created. This is an excellent place to put &lt;a href="http://msdn.microsoft.com/en-us/library/jj733572.aspx#setdefault"&gt;defaulting logic for the screen&lt;/a&gt;.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="390"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.BrowseTable1Items.beforeApplyChanges
= &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(screen) {};&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="390"&gt;
&lt;p&gt;This method is called each time before a save operation is executed for BrowseTable1Items. If true is returned, save proceeds. If false is returned, the operation is canceled. If a WinJs.Promise is returned, the operation waits for the promise to complete (or fail) before continuing.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/jj733572.aspx#validate"&gt;Screen-level validation logic&lt;/a&gt; should be put here.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h4&gt;Global Screen Methods&lt;/h4&gt;

&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/6320.clip_5F00_image0025_5F00_4B5A772B.jpg"&gt;&lt;img title="clip_image002[5]" style="display: inline; background-image: none;" border="0" alt="clip_image002[5]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/1614.clip_5F00_image0025_5F00_thumb_5F00_72288D6B.jpg" width="658" height="391" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For each screen, a method is generated to asynchronously navigate to that&lt;a&gt; &lt;/a&gt;screen. For each local property marked as a parameter, a method argument will be generated. In the example above, if LocalProperty1 is marked as a screen parameter, then the generated method would be &lt;/p&gt;

&lt;pre class="code"&gt;m&lt;span style="background: white; color: black;"&gt;yapp.showBrowseTableItems(localProperty1, options)
&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;If LocalProperty1 is not marked as a screen parameter, then &lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.showBrowseTable1Items(options)
&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;would be available.&lt;/p&gt;

&lt;p&gt;Two options can be specified when navigating to another screen.&lt;/p&gt;

&lt;table cellspacing="0" cellpadding="0" width="709" border="1"&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="top" width="343"&gt;
&lt;p&gt;&lt;strong&gt;Option Signature&lt;/strong&gt;&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;strong&gt;&lt;/strong&gt;

&lt;td valign="top" width="364"&gt;&lt;strong&gt;&lt;/strong&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="343"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;beforeShown (screen) {}&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="364"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: green;"&gt;//This would set the default value for
//Property1 text box to 'default value'
//when navigating to a the
//BrowseTable1Items screen
&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;myapp.showBrowseTable1Items({
    beforeShown: &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(newScreen){
        newScreen.Property1 =
        &lt;/span&gt;&lt;span style="background: white; color: rgb(163, 21, 21);"&gt;"default value"&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;;
    }
});&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="343"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;afterClosed (screen,
action: msls.NavigateBackAction)
{}&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="364"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.showAddEditTable1Item(&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;null&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;, {
    afterClose: &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(addEditScreen,
    navigationAction) {
        &lt;/span&gt;&lt;span style="background: white; color: green;"&gt;//If the user commits change,
        //show the view detail.
        &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(navigationAction ===
        msls.NavigateBackAction.commit) {
            &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;var &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;newTable1Item =
            addEditScreen.Table1Item;
            myapp.showViewTable1Item(
            newTable1Item);
        }
    }
});&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;The article has given an overview of the generated portions of the JavaScript API for LightSwitch HTML clients. Many actions in the designers affect the API you see when writing code to customize entity behavior or customize your screen UI.&lt;/p&gt;

&lt;p&gt;For examples on how to use the API in a variety of ways, see &lt;a href="http://msdn.microsoft.com/en-us/library/jj733572.aspx"&gt;&lt;i&gt;How to: Modify an HTML Screen by Using Code&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;-Elizabeth Maher, Software Tester, LightSwitch Team&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498372" width="1" height="1"&gt;</description>
<pubDate>Tue, 11 Feb 2014 16:00:00 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10498372</guid>
<link>http://blogs.msdn.com/b/lightswitch/archive/2014/02/11/a-tour-of-the-lightswitch-html-client-apis-elizabeth-maher.aspx</link>
<author>LightSwitch Team</author>
<comments>http://blogs.msdn.com/b/lightswitch/archive/2014/02/11/a-tour-of-the-lightswitch-html-client-apis-elizabeth-maher.aspx#comments</comments>
<category>Elizabeth Maher</category>
<category>HTML Client</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>VisualStudio</sxp:FeedId>
<sxp:PublishId>6077415</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10498372</sxp:AssetId>
<sxp:Author>LightSwitch Team</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/lightswitch/archive/2014/02/11/a-tour-of-the-lightswitch-html-client-apis-elizabeth-maher.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Tue, 11 Feb 2014 21:56:50 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/lightswitch/archive/2014/02/11/a-tour-of-the-lightswitch-html-client-apis-elizabeth-maher.aspx</sxp:Link>
<sxp:PublishDate>Tue, 11 Feb 2014 16:00:00 GMT</sxp:PublishDate>
<sxp:RelativeTime>15 hours ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35411899</sxp:SourceItemId>
<sxp:SourceFeedId>2400</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>A Tour of the LightSwitch HTML Client APIs (Elizabeth Maher)</sxp:Title>
<sxp:Content>&lt;p&gt;LightSwitch generates a custom API set based on project assets that developers can use when writing custom code in the HTML client. Each data source, table, query and screen causes various items to be created in the API. Even actions on each of the LightSwitch designers can have affect. This article will enumerate what actions in a LightSwitch project will affect the generated JavaScript &lt;a href="http://en.wikipedia.org/wiki/Single-page_application"&gt;Single Page Application&lt;/a&gt; programming model for the HTML Client, which is based on &lt;a href="http://jquerymobile.com/"&gt;jQuery Mobile&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;If you are not familiar with the overall architecture of the HTML Client, please see &lt;a href="http://blogs.msdn.com/b/lightswitch/archive/2012/06/21/the-lightswitch-html-client-an-architectural-overview.aspx"&gt;&lt;i&gt;The LightSwitch HTML Client: An Architectural Overview&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt;  &lt;h3&gt;Entities&lt;/h3&gt;  &lt;h3&gt; &lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/5383.clip_5F00_image002_5F00_6E1BAEE8.jpg"&gt;&lt;img title="clip_image002" style="display: inline; background-image: none;" border="0" alt="clip_image002" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/4810.clip_5F00_image002_5F00_thumb_5F00_37AD8D97.jpg" width="626" height="375" /&gt;&lt;/a&gt;&lt;/h3&gt;  &lt;p&gt;For each entity, there are several generated methods available via the active &lt;a href="http://msdn.microsoft.com/en-us/library/gg445195.aspx"&gt;data workspace&lt;/a&gt;, which you can access from the global object "myapp". In the above picture, we have a Table1Items table, which is part of the ApplicationData datasource. The generated objects in this case would be as follows.&lt;/p&gt; &lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;  &lt;table cellspacing="0" cellpadding="0" border="1"&gt;&lt;tbody&gt;     &lt;tr&gt;       &lt;td valign="top" width="211"&gt;         &lt;p&gt;&lt;strong&gt;Method Signature&lt;/strong&gt;&lt;/p&gt;         &lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;        &lt;td valign="top" width="337"&gt;&lt;strong&gt;&lt;/strong&gt;          &lt;p&gt;&lt;strong&gt;Return type&lt;/strong&gt;&lt;/p&gt;         &lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;        &lt;td valign="top" width="232"&gt;&lt;strong&gt;&lt;/strong&gt;          &lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;       &lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign="top" width="211"&gt;         &lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.activeDataWorkspace
.ApplicationData.Table1Items&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="337"&gt; &lt;/td&gt;

&lt;td valign="top" width="232"&gt;
&lt;p&gt;This member gets the Table1Item entity set. Results can be further manipulated by calling available functions like orderBy, skip, etc. The addNew function can also be called to create another Table1Item entity instance.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="211"&gt;
&lt;pre class="code"&gt;&lt;span style="color: black;"&gt;myapp.activeDataWorkspace
.ApplicationData.getTable1Items()&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="337"&gt;
&lt;p&gt;WinJs.Promise&lt;/p&gt;
&lt;/td&gt;

&lt;td valign="top" width="232"&gt;
&lt;p&gt;Asynchronously gets the value of all Table1Items. &lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="211"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.activeDataWorkspace
.ApplicationData
.Table1Items_SingleOrDefault(id)&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="337"&gt; &lt;/td&gt;

&lt;td valign="top" width="232"&gt;
&lt;p&gt;Method represents a query to get a specific record from Table1Items based on the Id.  The ‘_SingleOrDefault(id)’ is available for all intrinisic or internal tables.  &lt;/p&gt;

&lt;p&gt;Call .execute() to get the results of the query asynchronously.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h4&gt;Entry Point&lt;/h4&gt;

&lt;p&gt;For each entity that is created, there is a custom entry point for the created event of that entity. For an entity called Table1Items, the method signature would be as follows.&lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.Table1Items.created = &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(entity) {};
&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;To access this entry point, open the designer for the entity, select the HTML client perspective, choose the Write Code dropdown and click created. This method is called every time a new instance of a Table1Item entity is created. The created method is an excellent place for any custom logic needed to set appropriate defaults for new entities.&lt;/p&gt;

&lt;h3&gt;Queries&lt;/h3&gt;

&lt;p&gt;Every query seen in Solution Explorer can also be accessed in code via a method off the active data workspace object. For example, a query named Query1 that belongs to the ApplicationData data source would have a signature as follows.&lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.activeDataWorkspace.ApplicationData.Query1()&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/5808.clip_5F00_image0021_5F00_5E7BA3D7.jpg"&gt;&lt;img title="clip_image002[1]" style="display: inline; background-image: none;" border="0" alt="clip_image002[1]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/6560.clip_5F00_image0021_5F00_thumb_5F00_705837A4.jpg" width="606" height="363" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If the query has any parameters, the generated method is changed to take the appropriate number and type of arguments. In the screen shot above, we see that Query1 takes a string parameter called Parameter1. In this case the method signature would be the following.&lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.activeDataWorkspace.ApplicationData.Query1(Parameter1)&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;To asynchronously execute the query, call the execute method. A WinJS.Promise is returned by the execute method.&lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.activeDataWorkspace.ApplicationData.Query1(&lt;/span&gt;&lt;span style="background: white; color: rgb(163, 21, 21);"&gt;"parameter value"&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;)
.execute().then(
&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(results) {
    &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(results.results.length &gt;= 0) {
        msls.showMessageBox(&lt;/span&gt;&lt;span style="background: white; color: rgb(163, 21, 21);"&gt;"Found some records!"&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;);
    }
},
&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(error) {
    alert(error);
}
);
&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;For more information about using Promises see: &lt;a href="http://blogs.msdn.com/b/lightswitch/archive/2014/02/04/promises-in-lightswitch-justin-anderson.aspx"&gt;&lt;i&gt;Promises in LightSwitch &lt;/i&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Screens&lt;/h3&gt;

&lt;p&gt;The API for customizing screens is affected by everything that is contained in the screen member’s list and screen content item tree. The screen members list is the list of available data on the left hand side of the screen. A screen content item is a node in the tree view in the middle of the screen designer.&lt;/p&gt;

&lt;p&gt;The result of the generated code depends on the type of screen member, which may be an entity collection, single entity instance, screen property or screen method. Below is a picture of a project with a screen containing all the types of screen members.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/7558.clip_5F00_image0023_5F00_7E2A7D9F.jpg"&gt;&lt;img title="clip_image002[3]" style="display: inline; background-image: none;" border="0" alt="clip_image002[3]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/4010.clip_5F00_image0023_5F00_thumb_5F00_3DF46425.jpg" width="624" height="373" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Screen Members&lt;/h4&gt;

&lt;p&gt;For every screen member, a property accessor is created. For this screen the following screen members were created.&lt;/p&gt;

&lt;table cellspacing="0" cellpadding="2" width="399" border="1"&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="top" width="101"&gt;
&lt;p&gt;&lt;strong&gt;Member Name&lt;/strong&gt;&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;strong&gt;&lt;/strong&gt;

&lt;td valign="top" width="151"&gt;&lt;strong&gt;&lt;/strong&gt;

&lt;p&gt;&lt;strong&gt;Data Type&lt;/strong&gt;&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;strong&gt;&lt;/strong&gt;

&lt;td valign="top" width="48"&gt;&lt;strong&gt;&lt;/strong&gt;

&lt;p&gt;&lt;strong&gt;Generated API&lt;/strong&gt;&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;strong&gt;&lt;/strong&gt;

&lt;td valign="top" width="97"&gt;&lt;strong&gt;&lt;/strong&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="101"&gt;Table1Items&lt;/td&gt;

&lt;td valign="top" width="151"&gt;Query returning a set of records&lt;/td&gt;

&lt;td valign="top" width="48"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;screen.Table1Items&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="98"&gt;Returns msls.VisualCollection.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="101"&gt; &lt;/td&gt;

&lt;td valign="top" width="151"&gt; &lt;/td&gt;

&lt;td valign="top" width="48"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;screen.getTable1Items()&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="98"&gt;Returns a WinJSPromise after getting the data for Table1Items asynchronously.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="101"&gt;LocalProperty1&lt;/td&gt;

&lt;td valign="top" width="151"&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/7wkd9z69(v=vs.94).aspx"&gt;Primitive type&lt;/a&gt; or single entity type&lt;/td&gt;

&lt;td valign="top" width="48"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;screen.LocalProperty1&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="98"&gt;
&lt;p&gt;Get/set value of screen property. Type is same as specified by the ‘Property Type’ in the Properties windows.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="101"&gt;Table1Item&lt;/td&gt;

&lt;td valign="top" width="151"&gt;Query returning a single record&lt;/td&gt;

&lt;td valign="top" width="48"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;screen.Table1Item&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="98"&gt;Returns msls.application.Table1Item&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="101"&gt; &lt;/td&gt;

&lt;td valign="top" width="151"&gt; &lt;/td&gt;

&lt;td valign="top" width="48"&gt;
&lt;pre class="code"&gt;screen&lt;span style="background: white; color: black;"&gt;.getTable1Item()&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="98"&gt;
&lt;p&gt;Returns a WinJSPromise after getting the data for Table1Item asynchronously.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="101"&gt;MyMethod&lt;/td&gt;

&lt;td valign="top" width="151"&gt;Screen method&lt;/td&gt;

&lt;td valign="top" width="48"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;screen.MyMethod();  &lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="98"&gt;This will execute MyMethod.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h4&gt;Method Entry Points&lt;/h4&gt;

&lt;p&gt;Each screen method listed in the screen members list will have two methods available.&lt;/p&gt;

&lt;table cellspacing="0" cellpadding="0" border="1"&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="top" width="390"&gt;
&lt;p&gt;&lt;strong&gt;Method Signature&lt;/strong&gt;&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;strong&gt;&lt;/strong&gt;

&lt;td valign="top" width="390"&gt;&lt;strong&gt;&lt;/strong&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="390"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.BrowseTable1Items.MyMethod_execute = &lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(screen) { };&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="390"&gt;
&lt;p&gt;This is the function executed when the MyMethod button is clicked or screen.MyMethod() is called.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="390"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.BrowseTable1Items.MyMethod_canExecute = &lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(screen) { };&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="390"&gt;
&lt;p&gt;If this function returns false, the MyMethod button will be disabled. If true is returned then MyMethod button will be enabled.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h4&gt;Content Item Methods&lt;/h4&gt;

&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/0537.clip_5F00_image0014_5F00_7DBE4AAA.png"&gt;&lt;img title="clip_image001[4]" style="display: inline; background-image: none;" border="0" alt="clip_image001[4]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/8055.clip_5F00_image0014_5F00_thumb_5F00_20821319.png" width="686" height="265" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The state of screen content item affects which functions are used for manipulating the UI of that screen. Using the BrowseTable1Items as an example again, a custom control with the name of ContentItem1 method with the signature of&lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.BrowseTable1Items.ContentItem1_render = &lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(element, contentItem) {};&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;The element is simply the root HTML element for the control. The contentItem parameter is a customized object allowing access to ContentItem1’s value, data bindings and validation results.&lt;/p&gt;

&lt;p&gt;Most content items, that are not custom controls, may be modified by adding code to their post render function. For example, if the ContentItem2 content item is displayed as textbox, then the post render function signature would look like the following.&lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.BrowseTable1Items.ContentItem2_postRender = &lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(element, contentItem) {};
&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;You will notice that the method arguments are the same. The main difference is the timing when these methods are called. As the name suggests, the postRender function is called after the HTML elements used to display the content item are created.&lt;/p&gt;

&lt;p&gt;Here's a rule of thumb on when to use these events:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- If you need to insert new elements into the DOM, use the render event.&lt;/em&gt; The render event allows you to programmatically create and insert an arbitrary set of DOM elements. For example, if you want to use a control from &lt;a href="http://jqueryui.com/"&gt;jQuery UI&lt;/a&gt;, use the &lt;b&gt;&lt;i&gt;render&lt;/i&gt;&lt;/b&gt; event to instantiate the control and insert it into the DOM.&lt;/p&gt;

&lt;p&gt;- &lt;i&gt;If you need to augment or otherwise modify DOM elements created by LightSwitch, use the postRender event.&lt;/i&gt; The &lt;b&gt;&lt;i&gt;postRender&lt;/i&gt;&lt;/b&gt; event is commonly used to add a CSS class or DOM attribute to existing DOM elements: for example, you may want to add a &lt;a href="http://jquerymobile.com/"&gt;jQuery Mobile&lt;/a&gt; class to a DOM element created by LightSwitch. &lt;/p&gt;

&lt;p&gt;For examples see &lt;a href="http://blogs.msdn.com/b/lightswitch/archive/2012/12/06/custom-controls-and-data-binding-in-the-lightswitch-html-client-joe-binder.aspx"&gt;&lt;i&gt;Custom Controls and Data Binding in the LightSwitch HTML&lt;/i&gt;&lt;/a&gt;&lt;i&gt; &lt;/i&gt;&lt;/p&gt;

&lt;h4&gt;Screen Entry Points&lt;/h4&gt;

&lt;p&gt;It should also be noted that each screen has customized entry points. For the screen shown above, the entry points would be as follows.&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;

&lt;table cellspacing="0" cellpadding="0" border="1"&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="top" width="390"&gt;
&lt;p&gt;&lt;strong&gt;Entry Point&lt;/strong&gt;&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;

&lt;td valign="top" width="390"&gt;&lt;strong&gt;&lt;/strong&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="390"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;span style="background: white; color: black;"&gt;myapp.BrowseTable1Items.created
= &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(screen) {}&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="390"&gt;
&lt;p&gt;This method is called each time BrowseTable1Items screen is created. This is an excellent place to put &lt;a href="http://msdn.microsoft.com/en-us/library/jj733572.aspx#setdefault"&gt;defaulting logic for the screen&lt;/a&gt;.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="390"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.BrowseTable1Items.beforeApplyChanges
= &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(screen) {};&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="390"&gt;
&lt;p&gt;This method is called each time before a save operation is executed for BrowseTable1Items. If true is returned, save proceeds. If false is returned, the operation is canceled. If a WinJs.Promise is returned, the operation waits for the promise to complete (or fail) before continuing.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/jj733572.aspx#validate"&gt;Screen-level validation logic&lt;/a&gt; should be put here.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h4&gt;Global Screen Methods&lt;/h4&gt;

&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/6320.clip_5F00_image0025_5F00_4B5A772B.jpg"&gt;&lt;img title="clip_image002[5]" style="display: inline; background-image: none;" border="0" alt="clip_image002[5]" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-39-73-metablogapi/1614.clip_5F00_image0025_5F00_thumb_5F00_72288D6B.jpg" width="658" height="391" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For each screen, a method is generated to asynchronously navigate to that&lt;a&gt; &lt;/a&gt;screen. For each local property marked as a parameter, a method argument will be generated. In the example above, if LocalProperty1 is marked as a screen parameter, then the generated method would be &lt;/p&gt;

&lt;pre class="code"&gt;m&lt;span style="background: white; color: black;"&gt;yapp.showBrowseTableItems(localProperty1, options)
&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;If LocalProperty1 is not marked as a screen parameter, then &lt;/p&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.showBrowseTable1Items(options)
&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;would be available.&lt;/p&gt;

&lt;p&gt;Two options can be specified when navigating to another screen.&lt;/p&gt;

&lt;table cellspacing="0" cellpadding="0" width="709" border="1"&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign="top" width="343"&gt;
&lt;p&gt;&lt;strong&gt;Option Signature&lt;/strong&gt;&lt;/p&gt;
&lt;strong&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;strong&gt;&lt;/strong&gt;

&lt;td valign="top" width="364"&gt;&lt;strong&gt;&lt;/strong&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="343"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;beforeShown (screen) {}&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="364"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: green;"&gt;//This would set the default value for
//Property1 text box to 'default value'
//when navigating to a the
//BrowseTable1Items screen
&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;myapp.showBrowseTable1Items({
    beforeShown: &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(newScreen){
        newScreen.Property1 =
        &lt;/span&gt;&lt;span style="background: white; color: rgb(163, 21, 21);"&gt;"default value"&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;;
    }
});&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td valign="top" width="343"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;afterClosed (screen,
action: msls.NavigateBackAction)
{}&lt;/span&gt;&lt;/pre&gt;

&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;

&lt;td valign="top" width="364"&gt;
&lt;pre class="code"&gt;&lt;span style="background: white; color: black;"&gt;myapp.showAddEditTable1Item(&lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;null&lt;/span&gt;&lt;span style="background: white; color: black;"&gt;, {
    afterClose: &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;function &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(addEditScreen,
    navigationAction) {
        &lt;/span&gt;&lt;span style="background: white; color: green;"&gt;//If the user commits change,
        //show the view detail.
        &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;if &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;(navigationAction ===
        msls.NavigateBackAction.commit) {
            &lt;/span&gt;&lt;span style="background: white; color: blue;"&gt;var &lt;/span&gt;&lt;span style="background: white; color: black;"&gt;newTable1Item =
            addEditScreen.Table1Item;
            myapp.showViewTable1Item(
            newTable1Item);
        }
    }
});&lt;/span&gt;&lt;/pre&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;The article has given an overview of the generated portions of the JavaScript API for LightSwitch HTML clients. Many actions in the designers affect the API you see when writing code to customize entity behavior or customize your screen UI.&lt;/p&gt;

&lt;p&gt;For examples on how to use the API in a variety of ways, see &lt;a href="http://msdn.microsoft.com/en-us/library/jj733572.aspx"&gt;&lt;i&gt;How to: Modify an HTML Screen by Using Code&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;-Elizabeth Maher, Software Tester, LightSwitch Team&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498372" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>A Tour of the LightSwitch HTML Client APIs (Elizabeth Maher)</sxp:MobileTitle>
<sxp:MobileContent>LightSwitch generates a custom API set based on project assets that developers can use when writing custom code in the HTML client. Each data source, table, query and screen causes various items to be created in the API. Even actions on each of the LightSwitch designers can have affect. This article will enumerate what actions in a LightSwitch project will affect the generated JavaScript Single Page Application programming model for the HTML Client, which is based on jQuery Mobile.
If you are not familiar with the overall architecture of the HTML Client, please see The LightSwitch HTML Client: An Architectural Overview.Entities
For each entity, there are several generated methods available via the active data workspace, which you can access from the global object "myapp". In the above picture, we have a Table1Items table, which is part of the ApplicationData datasource. The generated objects in this case would be as follows.
Method Signature
Return type
Notesmyapp.activeDataWorkspace
.ApplicationData.Table1Items
This member gets the Table1Item entity set. Results can be further manipulated by calling available functions like orderBy, skip, etc. The addNew function can also be called to create another Table1Item entity instance.myapp.activeDataWorkspace
.ApplicationData.getTable1Items()
WinJs.Promise
Asynchronously gets the value of all Table1Items. myapp.activeDataWorkspace
.ApplicationData
.Table1Items_SingleOrDefault(id)
Method represents a query to get a specific record from Table1Items based on the Id.  The ‘_SingleOrDefault(id)’ is available for all intrinisic or internal tables.
Call .execute() to get the results of the query asynchronously.Entry Point
For each entity that is created, there is a custom entry point for the created event of that entity. For an entity called Table1Items, the method signature would be as follows.myapp.Table1Items.created = function (entity) {};

To access this entry point, open the designer for the entity, select the HTML client perspective, choose the Write Code dropdown and click created. This method is called every time a new instance of a Table1Item entity is created. The created method is an excellent place for any custom logic needed to set appropriate defaults for new entities.Queries
Every query seen in Solution Explorer can also be accessed in code via a method off the active data workspace object. For example, a query named Query1 that belongs to the ApplicationData data source would have a signature as follows.myapp.activeDataWorkspace.ApplicationData.Query1()

If the query has any parameters, the generated method is changed to take the appropriate number and type of arguments. In the screen shot above, we see that Query1 takes a string parameter called Parameter1. In this case the method signature would be the following.myapp.activeDataWorkspace.ApplicationData.Query1(Parameter1)
To asynchronously execute the query, call the execute method. A WinJS.Promise is returned by the execute method.myapp.activeDataWorkspace.ApplicationData.Query1("parameter value")
.execute().then(
function (results) {
    if (results.results.length &gt;= 0) {
        msls.showMessageBox("Found some records!");
    }
},
function (error) {
    alert(error);
}
);

For more information about using Promises see: Promises in LightSwitch Screens
The API for customizing screens is affected by everything that is contained in the screen member’s list and screen content item tree. The screen members list is the list of available data on the left hand side of the screen. A screen content item is a node in the tree view in the middle of the screen designer.
The result of the generated code depends on the type of screen member, which may be an entity collection, single entity instance, screen property or screen method. Below is a picture of a project with a screen containing all the types of screen members.
Screen Members
For every screen member, a property accessor is created. For this screen the following screen members were created.
Member Name
Data Type
Generated API
NotesTable1ItemsQuery returning a set of recordsscreen.Table1ItemsReturns msls.VisualCollection.screen.getTable1Items()Returns a WinJSPromise after getting the data for Table1Items asynchronously.LocalProperty1Primitive type or single entity typescreen.LocalProperty1
Get/set value of screen property. Type is same as specified by the ‘Property Type’ in the Properties windows.Table1ItemQuery returning a single recordscreen.Table1ItemReturns msls.application.Table1Itemscreen.getTable1Item()
Returns a WinJSPromise after getting the data for Table1Item asynchronously.MyMethodScreen methodscreen.MyMethod();  This will execute MyMethod.Method Entry Points
Each screen method listed in the screen members list will have two methods available.
Method Signature
Notesmyapp.BrowseTable1Items.MyMethod_execute = function (screen) { };
This is the function executed when the MyMethod button is clicked or screen.MyMethod() is called.myapp.BrowseTable1Items.MyMethod_canExecute = function (screen) { };
If this function returns false, the MyMethod button will be disabled. If true is returned then MyMethod button will be enabled.Content Item Methods

The state of screen content item affects which functions are used for manipulating the UI of that screen. Using the BrowseTable1Items as an example again, a custom control with the name of ContentItem1 method with the signature ofmyapp.BrowseTable1Items.ContentItem1_render = function (element, contentItem) {};
The element is simply the root HTML element for the control. The contentItem parameter is a customized object allowing access to ContentItem1’s value, data bindings and validation results.
Most content items, that are not custom controls, may be modified by adding code to their post render function. For example, if the ContentItem2 content item is displayed as textbox, then the post render function signature would look like the following.myapp.BrowseTable1Items.ContentItem2_postRender = function (element, contentItem) {};

You will notice that the method arguments are the same. The main difference is the timing when these methods are called. As the name suggests, the postRender function is called after the HTML elements used to display the content item are created.
Here's a rule of thumb on when to use these events:
- If you need to insert new elements into the DOM, use the render event. The render event allows you to programmatically create and insert an arbitrary set of DOM elements. For example, if you want to use a control from jQuery UI, use the render event to instantiate the control and insert it into the DOM.
- If you need to augment or otherwise modify DOM elements created by LightSwitch, use the postRender event. The postRender event is commonly used to add a CSS class or DOM attribute to existing DOM elements: for example, you may want to add a jQuery Mobile class to a DOM element created by LightSwitch.
For examples see Custom Controls and Data Binding in the LightSwitch HTMLScreen Entry Points
It should also be noted that each screen has customized entry points. For the screen shown above, the entry points would be as follows.
Entry Point
Notesmyapp.BrowseTable1Items.created
= function (screen) {}
This method is called each time BrowseTable1Items screen is created. This is an excellent place to put defaulting logic for the screen.myapp.BrowseTable1Items.beforeApplyChanges
= function (screen) {};
This method is called each time before a save operation is executed for BrowseTable1Items. If true is returned, save proceeds. If false is returned, the operation is canceled. If a WinJs.Promise is returned, the operation waits for the promise to complete (or fail) before continuing.
Screen-level validation logic should be put here.Global Screen Methods

For each screen, a method is generated to asynchronously navigate to thatscreen. For each local property marked as a parameter, a method argument will be generated. In the example above, if LocalProperty1 is marked as a screen parameter, then the generated method would be myapp.showBrowseTableItems(localProperty1, options)

If LocalProperty1 is not marked as a screen parameter, then myapp.showBrowseTable1Items(options)

would be available.
Two options can be specified when navigating to another screen.
Option Signature
ExamplebeforeShown (screen) {}//This would set the default value for
//Property1 text box to 'default value'
//when navigating to a the
//BrowseTable1Items screen
myapp.showBrowseTable1Items({
    beforeShown: function (newScreen){
        newScreen.Property1 =
        "default value";
    }
});afterClosed (screen,
action: msls.NavigateBackAction)
{}myapp.showAddEditTable1Item(null, {
    afterClose: function (addEditScreen,
    navigationAction) {
        //If the user commits change,
        //show the view detail.
        if (navigationAction ===
        msls.NavigateBackAction.commit) {
            var newTable1Item =
            addEditScreen.Table1Item;
            myapp.showViewTable1Item(
            newTable1Item);
        }
    }
});Conclusion
The article has given an overview of the generated portions of the JavaScript API for LightSwitch HTML clients. Many actions in the designers affect the API you see when writing code to customize entity behavior or customize your screen UI.
For examples on how to use the API in a variety of ways, see How to: Modify an HTML Screen by Using Code
-Elizabeth Maher, Software Tester, LightSwitch Team</sxp:MobileContent>
<sxp:Tag>Elizabeth Maher</sxp:Tag>
<sxp:Tag>HTML Client</sxp:Tag>
</item>
<item>
<title>Jump to SQL with IntelliTrace</title>
<description>&lt;p&gt;In Visual Studio 2013, you can use IntelliTrace to view &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/09/20/introducing-microsoft-monitoring-agent.aspx"&gt;Microsoft Monitoring Agent&lt;/a&gt; data collected from a web application. This includes &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/09/20/performance-details-in-intellitrace.aspx"&gt;performance details in IntelliTrace&lt;/a&gt; which provides a great way to get back to your code to investigate performance issues that occurred on a production server. But what if the performance issue has something to do with the SQL database rather than the application code? The SQL database can be a common source of performance issues. To make these investigations easier in &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390522"&gt;Visual Studio 2013 Update 2&lt;/a&gt; we’ve added the ability to use the SQL tools built into Visual Studio to help diagnose SQL performance issues. Specifically, for ADO.NET events that execute a SQL command you can jump to the SQL editor inside of Visual Studio to examine the query and investigate the performance issue further. If there are parameters associated with the SQL query we will use the parameter information collected with the event and fill them in to the SQL that is generated.&lt;/p&gt;
&lt;p&gt;In this blog post we’ll walk through a simple scenario to show what this new feature is all about.&lt;/p&gt;
&lt;h1&gt;Opening the IntelliTrace file – Summary page&lt;/h1&gt;
&lt;p&gt;We have an IntelliTrace file that was collected with &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/09/20/introducing-microsoft-monitoring-agent.aspx"&gt;Microsoft Monitoring Agent&lt;/a&gt; against our Fabrikam Fiber application running in production. The user had reported that sorting the list of support tickets was slow. When we open the IntelliTrace file we see the summary view as per the following screenshot:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/4645.1_2D00_SummaryPage.jpg"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/4645.1_2D00_SummaryPage.jpg" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="line-height: 107%; font-family: 'Calibri','sans-serif'; font-size: 11pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;We can see that the performance violation event that pops to the top when sorted by the Count column is for ServiceTickets. Sort at a SQL command (green arrow in the screenshot). This fits with what the user was reporting so let’s take a closer look. We’ll click on the ‘View  Details’ button to dig into this specific performance issue.&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;Digging in - Performance Details Page&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/8154.2_2D00_PerfDetails.jpg"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/8154.2_2D00_PerfDetails.jpg" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On the performance event details page the event we are interested in is displayed and the execution tree is expanded to the SQL call (which is the slow part of this execution) and its parameters expanded. Here comes the new part with &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390522"&gt;Visual Studio 2013 Update 2&lt;/a&gt;: now the value for the @cmdText parameter is a link (green arrow in the screenshot). When we click on this link IntelliTrace will generate a temporary SQL file that represents this SQL query and open it in the built in Visual Studio SQL editor! Let’s look at that next.&lt;/p&gt;
&lt;h1&gt;Diving into the SQL&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/6404.3_2D00_SQLEditor.jpg"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/6404.3_2D00_SQLEditor.jpg" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The first thing we need to do in the Visual Studio SQL editor is to select which database instance we want to connect to. This allows us to pick the database to use to continue our investigation in case we don’t have permission to the actual production database or we want to connect to a pre-production or test database to avoid affecting production data.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/8787.4_2D00_QueryPlan.jpg"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/8787.4_2D00_QueryPlan.jpg" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now that we have the SQL command and are connected to a database we can use all of the SQL tools that Visual Studio has to offer. In this case we can take a look at the execution plan to see where the command is spending time. The sort operation (green arrow in the screenshot) is taking all of the time which after further investigation into the data turns out to be because the table we’re querying is much larger than we expected.&lt;/p&gt;
&lt;p&gt;The issue here is that the sort is happening on the EscalationLevel column. The column isn't indexed so now that this table contains a large number of rows the sort on this column in becoming problematic. Now that we know where the problem is we can look at resolving this issue by adding an index to the EscalationLevel column.&lt;span style="line-height: 107%; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;In Closing&lt;/h1&gt;
&lt;p&gt;With this new feature in &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390522"&gt;Visual Studio 2013 Update 2&lt;/a&gt; we can see how that even for performance issues coming from SQL commands we can quickly and easily get to the SQL command to investigate! No longer do you need to open up another tool and track down the SQL command on your own, Visual Studio will do all the heavy lifting for you! If you have any feedback on this, or any IntelliTrace feature, please let us know at our &lt;a href="http://social.msdn.microsoft.com/Forums/vstudio/en-US/home?forum=vsdebug"&gt;diagnostics MSDN forum&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span style="line-height: 107%; font-family: 'Calibri','sans-serif'; font-size: 11pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="line-height: 107%; font-family: 'Calibri','sans-serif'; font-size: 11pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498192" width="1" height="1"&gt;</description>
<pubDate>Mon, 10 Feb 2014 18:01:33 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10498192</guid>
<link>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/10/jump-to-sql-with-intellitrace.aspx</link>
<author>Tim Varcak</author>
<comments>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/10/jump-to-sql-with-intellitrace.aspx#comments</comments>
<category>IntelliTrace</category>
<category>Diagnostics</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>ALM</sxp:FeedId>
<sxp:PublishId>6066556</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10498192</sxp:AssetId>
<sxp:Author>Tim Varcak</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/10/jump-to-sql-with-intellitrace.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Mon, 10 Feb 2014 20:55:48 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/10/jump-to-sql-with-intellitrace.aspx</sxp:Link>
<sxp:PublishDate>Mon, 10 Feb 2014 18:01:33 GMT</sxp:PublishDate>
<sxp:RelativeTime>1 days ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35402511</sxp:SourceItemId>
<sxp:SourceFeedId>2403</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>Jump to SQL with IntelliTrace</sxp:Title>
<sxp:Content>&lt;p&gt;In Visual Studio 2013, you can use IntelliTrace to view &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/09/20/introducing-microsoft-monitoring-agent.aspx"&gt;Microsoft Monitoring Agent&lt;/a&gt; data collected from a web application. This includes &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/09/20/performance-details-in-intellitrace.aspx"&gt;performance details in IntelliTrace&lt;/a&gt; which provides a great way to get back to your code to investigate performance issues that occurred on a production server. But what if the performance issue has something to do with the SQL database rather than the application code? The SQL database can be a common source of performance issues. To make these investigations easier in &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390522"&gt;Visual Studio 2013 Update 2&lt;/a&gt; we’ve added the ability to use the SQL tools built into Visual Studio to help diagnose SQL performance issues. Specifically, for ADO.NET events that execute a SQL command you can jump to the SQL editor inside of Visual Studio to examine the query and investigate the performance issue further. If there are parameters associated with the SQL query we will use the parameter information collected with the event and fill them in to the SQL that is generated.&lt;/p&gt;
&lt;p&gt;In this blog post we’ll walk through a simple scenario to show what this new feature is all about.&lt;/p&gt;
&lt;h1&gt;Opening the IntelliTrace file – Summary page&lt;/h1&gt;
&lt;p&gt;We have an IntelliTrace file that was collected with &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/09/20/introducing-microsoft-monitoring-agent.aspx"&gt;Microsoft Monitoring Agent&lt;/a&gt; against our Fabrikam Fiber application running in production. The user had reported that sorting the list of support tickets was slow. When we open the IntelliTrace file we see the summary view as per the following screenshot:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/4645.1_2D00_SummaryPage.jpg"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/4645.1_2D00_SummaryPage.jpg" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="line-height: 107%; font-family: 'Calibri','sans-serif'; font-size: 11pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;We can see that the performance violation event that pops to the top when sorted by the Count column is for ServiceTickets. Sort at a SQL command (green arrow in the screenshot). This fits with what the user was reporting so let’s take a closer look. We’ll click on the ‘View  Details’ button to dig into this specific performance issue.&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;Digging in - Performance Details Page&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/8154.2_2D00_PerfDetails.jpg"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/8154.2_2D00_PerfDetails.jpg" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On the performance event details page the event we are interested in is displayed and the execution tree is expanded to the SQL call (which is the slow part of this execution) and its parameters expanded. Here comes the new part with &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390522"&gt;Visual Studio 2013 Update 2&lt;/a&gt;: now the value for the @cmdText parameter is a link (green arrow in the screenshot). When we click on this link IntelliTrace will generate a temporary SQL file that represents this SQL query and open it in the built in Visual Studio SQL editor! Let’s look at that next.&lt;/p&gt;
&lt;h1&gt;Diving into the SQL&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/6404.3_2D00_SQLEditor.jpg"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/6404.3_2D00_SQLEditor.jpg" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The first thing we need to do in the Visual Studio SQL editor is to select which database instance we want to connect to. This allows us to pick the database to use to continue our investigation in case we don’t have permission to the actual production database or we want to connect to a pre-production or test database to avoid affecting production data.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/8787.4_2D00_QueryPlan.jpg"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/8787.4_2D00_QueryPlan.jpg" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now that we have the SQL command and are connected to a database we can use all of the SQL tools that Visual Studio has to offer. In this case we can take a look at the execution plan to see where the command is spending time. The sort operation (green arrow in the screenshot) is taking all of the time which after further investigation into the data turns out to be because the table we’re querying is much larger than we expected.&lt;/p&gt;
&lt;p&gt;The issue here is that the sort is happening on the EscalationLevel column. The column isn't indexed so now that this table contains a large number of rows the sort on this column in becoming problematic. Now that we know where the problem is we can look at resolving this issue by adding an index to the EscalationLevel column.&lt;span style="line-height: 107%; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;In Closing&lt;/h1&gt;
&lt;p&gt;With this new feature in &lt;a href="http://go.microsoft.com/fwlink/?LinkId=390522"&gt;Visual Studio 2013 Update 2&lt;/a&gt; we can see how that even for performance issues coming from SQL commands we can quickly and easily get to the SQL command to investigate! No longer do you need to open up another tool and track down the SQL command on your own, Visual Studio will do all the heavy lifting for you! If you have any feedback on this, or any IntelliTrace feature, please let us know at our &lt;a href="http://social.msdn.microsoft.com/Forums/vstudio/en-US/home?forum=vsdebug"&gt;diagnostics MSDN forum&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span style="line-height: 107%; font-family: 'Calibri','sans-serif'; font-size: 11pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="line-height: 107%; font-family: 'Calibri','sans-serif'; font-size: 11pt; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498192" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>Jump to SQL with IntelliTrace</sxp:MobileTitle>
<sxp:MobileContent>In Visual Studio 2013, you can use IntelliTrace to view Microsoft Monitoring Agent data collected from a web application. This includes performance details in IntelliTrace which provides a great way to get back to your code to investigate performance issues that occurred on a production server. But what if the performance issue has something to do with the SQL database rather than the application code? The SQL database can be a common source of performance issues. To make these investigations easier in Visual Studio 2013 Update 2 we’ve added the ability to use the SQL tools built into Visual Studio to help diagnose SQL performance issues. Specifically, for ADO.NET events that execute a SQL command you can jump to the SQL editor inside of Visual Studio to examine the query and investigate the performance issue further. If there are parameters associated with the SQL query we will use the parameter information collected with the event and fill them in to the SQL that is generated.
In this blog post we’ll walk through a simple scenario to show what this new feature is all about.Opening the IntelliTrace file – Summary page
We have an IntelliTrace file that was collected with Microsoft Monitoring Agent against our Fabrikam Fiber application running in production. The user had reported that sorting the list of support tickets was slow. When we open the IntelliTrace file we see the summary view as per the following screenshot:

We can see that the performance violation event that pops to the top when sorted by the Count column is for ServiceTickets. Sort at a SQL command (green arrow in the screenshot). This fits with what the user was reporting so let’s take a closer look. We’ll click on the ‘View  Details’ button to dig into this specific performance issue.Digging in - Performance Details Page

On the performance event details page the event we are interested in is displayed and the execution tree is expanded to the SQL call (which is the slow part of this execution) and its parameters expanded. Here comes the new part with Visual Studio 2013 Update 2: now the value for the @cmdText parameter is a link (green arrow in the screenshot). When we click on this link IntelliTrace will generate a temporary SQL file that represents this SQL query and open it in the built in Visual Studio SQL editor! Let’s look at that next.Diving into the SQL

The first thing we need to do in the Visual Studio SQL editor is to select which database instance we want to connect to. This allows us to pick the database to use to continue our investigation in case we don’t have permission to the actual production database or we want to connect to a pre-production or test database to avoid affecting production data.

Now that we have the SQL command and are connected to a database we can use all of the SQL tools that Visual Studio has to offer. In this case we can take a look at the execution plan to see where the command is spending time. The sort operation (green arrow in the screenshot) is taking all of the time which after further investigation into the data turns out to be because the table we’re querying is much larger than we expected.
The issue here is that the sort is happening on the EscalationLevel column. The column isn't indexed so now that this table contains a large number of rows the sort on this column in becoming problematic. Now that we know where the problem is we can look at resolving this issue by adding an index to the EscalationLevel column.In Closing
With this new feature in Visual Studio 2013 Update 2 we can see how that even for performance issues coming from SQL commands we can quickly and easily get to the SQL command to investigate! No longer do you need to open up another tool and track down the SQL command on your own, Visual Studio will do all the heavy lifting for you! If you have any feedback on this, or any IntelliTrace feature, please let us know at our diagnostics MSDN forum.</sxp:MobileContent>
<sxp:Tag>IntelliTrace</sxp:Tag>
<sxp:Tag>Diagnostics</sxp:Tag>
</item>
<item>
<title>Explore the Microsoft .NET Framework 4.5.1 in MSDN Magazine</title>
<description>&lt;p&gt;The &lt;a href="http://msdn.microsoft.com/magazine/dn574789.aspx"&gt;February 2014 edition of MSDN magazine&lt;/a&gt; includes a great &lt;a href="http://msdn.microsoft.com/magazine/dn574802.aspx"&gt;overview of the .NET Framework 4.5.1&lt;/a&gt;, written by Gaye Oncol Kok, a Program Manager on the .NET team. The article is a great way to learn about how Visual Studio 2013 and .NET Framework 4.5.1 make apps easier to write, and faster to run. Take a look at the &lt;a href="http://msdn.microsoft.com/magazine/dn574802.aspx"&gt;article&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://msdn.microsoft.com/magazine/dn574789.aspx"&gt;&lt;img title="clip_image001" style="border: 0px currentcolor; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" border="0" alt="clip_image001" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-12-34-metablogapi/1033.clip_5F00_image001_5F00_30F07B59.png" width="629" height="489" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498189" width="1" height="1"&gt;</description>
<pubDate>Mon, 10 Feb 2014 17:51:49 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10498189</guid>
<link>http://blogs.msdn.com/b/dotnet/archive/2014/02/10/explore-the-microsoft-net-framework-4-5-1-in-msdn-magazine.aspx</link>
<author>The .NET Team</author>
<comments>http://blogs.msdn.com/b/dotnet/archive/2014/02/10/explore-the-microsoft-net-framework-4-5-1-in-msdn-magazine.aspx#comments</comments>
<category>.net framework</category>
<category>press</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>DotNETFramework</sxp:FeedId>
<sxp:PublishId>6065642</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10498189</sxp:AssetId>
<sxp:Author>The .NET Team</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/dotnet/archive/2014/02/10/explore-the-microsoft-net-framework-4-5-1-in-msdn-magazine.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Mon, 10 Feb 2014 19:52:39 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/dotnet/archive/2014/02/10/explore-the-microsoft-net-framework-4-5-1-in-msdn-magazine.aspx</sxp:Link>
<sxp:PublishDate>Mon, 10 Feb 2014 17:51:49 GMT</sxp:PublishDate>
<sxp:RelativeTime>1 days ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35400929</sxp:SourceItemId>
<sxp:SourceFeedId>2410</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>Explore the Microsoft .NET Framework 4.5.1 in MSDN Magazine</sxp:Title>
<sxp:Content>&lt;p&gt;The &lt;a href="http://msdn.microsoft.com/magazine/dn574789.aspx"&gt;February 2014 edition of MSDN magazine&lt;/a&gt; includes a great &lt;a href="http://msdn.microsoft.com/magazine/dn574802.aspx"&gt;overview of the .NET Framework 4.5.1&lt;/a&gt;, written by Gaye Oncol Kok, a Program Manager on the .NET team. The article is a great way to learn about how Visual Studio 2013 and .NET Framework 4.5.1 make apps easier to write, and faster to run. Take a look at the &lt;a href="http://msdn.microsoft.com/magazine/dn574802.aspx"&gt;article&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://msdn.microsoft.com/magazine/dn574789.aspx"&gt;&lt;img title="clip_image001" style="border: 0px currentcolor; margin-right: auto; margin-left: auto; float: none; display: block; background-image: none;" border="0" alt="clip_image001" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-01-12-34-metablogapi/1033.clip_5F00_image001_5F00_30F07B59.png" width="629" height="489" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10498189" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>Explore the Microsoft .NET Framework 4.5.1 in MSDN Magazine</sxp:MobileTitle>
<sxp:MobileContent>The February 2014 edition of MSDN magazine includes a great overview of the .NET Framework 4.5.1, written by Gaye Oncol Kok, a Program Manager on the .NET team. The article is a great way to learn about how Visual Studio 2013 and .NET Framework 4.5.1 make apps easier to write, and faster to run. Take a look at the article.</sxp:MobileContent>
<sxp:Tag>.net framework</sxp:Tag>
<sxp:Tag>press</sxp:Tag>
</item>
<item>
<title>Visual Studio Online Update – Feb 10</title>
<description>&lt;p&gt;Yesterday, we completed our sprint 60 deployment.  With it comes two new features: Exporting test plans as HTML documents and a permission to control who can create new work item tags.  You can read more about the new features on the service release notes here: &lt;a title="http://www.visualstudio.com/news/2014-jan-22-vso" href="http://www.visualstudio.com/news/2014-feb-10-vso"&gt;http://www.visualstudio.com/news/2014-feb-10-vso&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;As you may know, since ~Oct, we’ve had a run of “bad” deployments that caused unacceptable down time.  Due to this we made a number of changes.  One was to move our deployments to weekends to reduce the number of people that any unexpected interruptions affect.  This was the second deployment to happen over a weekend and thankfully went very smoothly.  Sprint 59’s weekend deployment did not go well though and we had a good number of people working all day Saturday and Sunday to get the service back to health.  While the weekend deployment had the desired effect – it reduced the impact on customers, it confirmed for us the heavy toll it takes on the team.&lt;/p&gt;  &lt;p&gt;In fact, we moved sprint 60’s deployment to this weekend (it was supposed to be last weekend) because we didn’t want to risk having to ask the team to miss the Super Bowl (which, I might add, the Seattle Seahawks dominated).  Thankfully this one went smoothly and the number of people who had to work the weekend was comparatively small.  However, it’s clear weekend deployments aren’t really going to be sustainable – in the sense of keeping a talented group of people willing to work 7 days a week.  Next sprint we are going to try doing the deployment on a weekday evening.  I ‘m well aware that no time is a good time for an outage.  In fact, I even got some customer emails when 59’s weekend deployment experienced issues, but there are less bad times than others.  For context, here’s a graph of activity on our service, starting from Sun morning.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-36-52-metablogapi/0743.image_5F00_783F9DB7.png"&gt;&lt;img title="image" style="display: inline; background-image: none;" border="0" alt="image" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-36-52-metablogapi/4503.image_5F00_thumb_5F00_1A47F97E.png" width="644" height="178" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;In the end, the most important this is getting to the point where every deployment is a “non-event” (meaning no one even notices it happens because it is so seamless) – both for our customers and our employees.  Time shifting the deployment isn’t a fix, it’s a mitigation and while it’s a wise precaution to take, the effect on the team is profound enough that we have to be very careful how much we rely on it.  &lt;/p&gt;  &lt;p&gt;In that light, we have done a lot of technical work in the past few months to “get back on top” of deployments.  It became clear that the scale of the service had outgrown the engineering processes and resiliency we had built in and it was time to do more.  Among other things we…&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Doubled down on root cause analysis and post-deployment retrospectives&lt;/li&gt;    &lt;li&gt;Fed all engineering process learning (both from deployment retrospectives and elsewhere) into an engineering system backlog in order to concretely track progress and to help prioritize.  From there we farmed work out into feature team backlogs.&lt;/li&gt;    &lt;li&gt;Made significant changes to our pre-deployment testing and scale validation to make it “more like production”.  While it will never be fully like production, it is helping catch more issues than before.&lt;/li&gt;    &lt;li&gt;Accelerated work to enable multiple instances for VS Online.  In fact, you don’t know it, but we deployed the first “additional instance” a couple of weeks ago.  Ultimately, this will allow us to run fractions of our production load on independent clusters that can be upgraded separately.  This way we will not have to subject the entire customer base to the upgrade at the same time.  The instance we set up a couple of weeks ago, we have affectionately called “ring 0” or (Scale Unit 0 – SU0) and it will be where all production deployments happen first.  SU0 is in the Azure San Antonio data center and SU1 (the instance we’ve been using for a few years) is in the Azure Chicago data center.  Ring 0 will be an instance where we only put accounts who “volunteer” for the risk of additional volatility – mine will be there &lt;img class="wlEmoticon wlEmoticon-smile" style="style" alt="Smile" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-36-52-metablogapi/8228.wlEmoticon_2D00_smile_5F00_58CD4724.png" /&gt;.  Once deployments are validated on ring 0, they will incrementally roll out across other instances.  Eventually we will add the ability for you to choose which instance your account is on and this will give you the ability to locate your account in your region.&lt;/li&gt;    &lt;li&gt;Worked to further decouple services to enable more independent deployment of individual services (TFS, Build, Cloud load, analytics, etc).  There’s more work to do here but we are making progress.&lt;/li&gt;    &lt;li&gt;Implemented a new “lock manager” to better enforce some global service policies/best practices that we saw often being validated based on our root cause analysis.  I hope to write a whole post on this one at some point and maybe even share the code.&lt;/li&gt;    &lt;li&gt;And much more…&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;I’d like to think that the smooth deployment this weekend was a reflection of the work we’ve been doing but I’d like to see 3 or 4 smooth ones in a row before I’m willing to give too much credit.  We’ll continue to work hard on it.  I don’t expect to be at a new “plateau” of service stability and excellent for another few months but we’re definitely on the ascent.&lt;/p&gt;  &lt;p&gt;Thanks for your patience and understanding as we continue to work to produce the best developer services on the planet.  As always, if you see things we can do better, &lt;a href="http://www.visualstudio.com/support/support-overview-vs"&gt;please let us know&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;Brian&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10497909" width="1" height="1"&gt;</description>
<pubDate>Mon, 10 Feb 2014 17:00:00 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10497909</guid>
<link>http://blogs.msdn.com/b/bharry/archive/2014/02/10/visual-studio-online-update-feb-10.aspx</link>
<author>Brian Harry MS</author>
<comments>http://blogs.msdn.com/b/bharry/archive/2014/02/10/visual-studio-online-update-feb-10.aspx#comments</comments>
<category>VSOnline</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>Execs</sxp:FeedId>
<sxp:PublishId>6063973</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10497909</sxp:AssetId>
<sxp:Author>Brian Harry MS</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/bharry/archive/2014/02/10/visual-studio-online-update-feb-10.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Mon, 10 Feb 2014 17:08:02 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/bharry/archive/2014/02/10/visual-studio-online-update-feb-10.aspx</sxp:Link>
<sxp:PublishDate>Mon, 10 Feb 2014 17:00:00 GMT</sxp:PublishDate>
<sxp:RelativeTime>1 days ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35399863</sxp:SourceItemId>
<sxp:SourceFeedId>2397</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>Visual Studio Online Update – Feb 10</sxp:Title>
<sxp:Content>&lt;p&gt;Yesterday, we completed our sprint 60 deployment.  With it comes two new features: Exporting test plans as HTML documents and a permission to control who can create new work item tags.  You can read more about the new features on the service release notes here: &lt;a title="http://www.visualstudio.com/news/2014-jan-22-vso" href="http://www.visualstudio.com/news/2014-feb-10-vso"&gt;http://www.visualstudio.com/news/2014-feb-10-vso&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;As you may know, since ~Oct, we’ve had a run of “bad” deployments that caused unacceptable down time.  Due to this we made a number of changes.  One was to move our deployments to weekends to reduce the number of people that any unexpected interruptions affect.  This was the second deployment to happen over a weekend and thankfully went very smoothly.  Sprint 59’s weekend deployment did not go well though and we had a good number of people working all day Saturday and Sunday to get the service back to health.  While the weekend deployment had the desired effect – it reduced the impact on customers, it confirmed for us the heavy toll it takes on the team.&lt;/p&gt;  &lt;p&gt;In fact, we moved sprint 60’s deployment to this weekend (it was supposed to be last weekend) because we didn’t want to risk having to ask the team to miss the Super Bowl (which, I might add, the Seattle Seahawks dominated).  Thankfully this one went smoothly and the number of people who had to work the weekend was comparatively small.  However, it’s clear weekend deployments aren’t really going to be sustainable – in the sense of keeping a talented group of people willing to work 7 days a week.  Next sprint we are going to try doing the deployment on a weekday evening.  I ‘m well aware that no time is a good time for an outage.  In fact, I even got some customer emails when 59’s weekend deployment experienced issues, but there are less bad times than others.  For context, here’s a graph of activity on our service, starting from Sun morning.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-36-52-metablogapi/0743.image_5F00_783F9DB7.png"&gt;&lt;img title="image" style="display: inline; background-image: none;" border="0" alt="image" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-36-52-metablogapi/4503.image_5F00_thumb_5F00_1A47F97E.png" width="644" height="178" /&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;In the end, the most important this is getting to the point where every deployment is a “non-event” (meaning no one even notices it happens because it is so seamless) – both for our customers and our employees.  Time shifting the deployment isn’t a fix, it’s a mitigation and while it’s a wise precaution to take, the effect on the team is profound enough that we have to be very careful how much we rely on it.  &lt;/p&gt;  &lt;p&gt;In that light, we have done a lot of technical work in the past few months to “get back on top” of deployments.  It became clear that the scale of the service had outgrown the engineering processes and resiliency we had built in and it was time to do more.  Among other things we…&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Doubled down on root cause analysis and post-deployment retrospectives&lt;/li&gt;    &lt;li&gt;Fed all engineering process learning (both from deployment retrospectives and elsewhere) into an engineering system backlog in order to concretely track progress and to help prioritize.  From there we farmed work out into feature team backlogs.&lt;/li&gt;    &lt;li&gt;Made significant changes to our pre-deployment testing and scale validation to make it “more like production”.  While it will never be fully like production, it is helping catch more issues than before.&lt;/li&gt;    &lt;li&gt;Accelerated work to enable multiple instances for VS Online.  In fact, you don’t know it, but we deployed the first “additional instance” a couple of weeks ago.  Ultimately, this will allow us to run fractions of our production load on independent clusters that can be upgraded separately.  This way we will not have to subject the entire customer base to the upgrade at the same time.  The instance we set up a couple of weeks ago, we have affectionately called “ring 0” or (Scale Unit 0 – SU0) and it will be where all production deployments happen first.  SU0 is in the Azure San Antonio data center and SU1 (the instance we’ve been using for a few years) is in the Azure Chicago data center.  Ring 0 will be an instance where we only put accounts who “volunteer” for the risk of additional volatility – mine will be there &lt;img class="wlEmoticon wlEmoticon-smile" style="style" alt="Smile" src="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-36-52-metablogapi/8228.wlEmoticon_2D00_smile_5F00_58CD4724.png" /&gt;.  Once deployments are validated on ring 0, they will incrementally roll out across other instances.  Eventually we will add the ability for you to choose which instance your account is on and this will give you the ability to locate your account in your region.&lt;/li&gt;    &lt;li&gt;Worked to further decouple services to enable more independent deployment of individual services (TFS, Build, Cloud load, analytics, etc).  There’s more work to do here but we are making progress.&lt;/li&gt;    &lt;li&gt;Implemented a new “lock manager” to better enforce some global service policies/best practices that we saw often being validated based on our root cause analysis.  I hope to write a whole post on this one at some point and maybe even share the code.&lt;/li&gt;    &lt;li&gt;And much more…&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;I’d like to think that the smooth deployment this weekend was a reflection of the work we’ve been doing but I’d like to see 3 or 4 smooth ones in a row before I’m willing to give too much credit.  We’ll continue to work hard on it.  I don’t expect to be at a new “plateau” of service stability and excellent for another few months but we’re definitely on the ascent.&lt;/p&gt;  &lt;p&gt;Thanks for your patience and understanding as we continue to work to produce the best developer services on the planet.  As always, if you see things we can do better, &lt;a href="http://www.visualstudio.com/support/support-overview-vs"&gt;please let us know&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;Brian&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10497909" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>Visual Studio Online Update – Feb 10</sxp:MobileTitle>
<sxp:MobileContent>Yesterday, we completed our sprint 60 deployment.  With it comes two new features: Exporting test plans as HTML documents and a permission to control who can create new work item tags.  You can read more about the new features on the service release notes here: http://www.visualstudio.com/news/2014-feb-10-vso.
As you may know, since ~Oct, we’ve had a run of “bad” deployments that caused unacceptable down time.  Due to this we made a number of changes.  One was to move our deployments to weekends to reduce the number of people that any unexpected interruptions affect.  This was the second deployment to happen over a weekend and thankfully went very smoothly.  Sprint 59’s weekend deployment did not go well though and we had a good number of people working all day Saturday and Sunday to get the service back to health.  While the weekend deployment had the desired effect – it reduced the impact on customers, it confirmed for us the heavy toll it takes on the team.
In fact, we moved sprint 60’s deployment to this weekend (it was supposed to be last weekend) because we didn’t want to risk having to ask the team to miss the Super Bowl (which, I might add, the Seattle Seahawks dominated).  Thankfully this one went smoothly and the number of people who had to work the weekend was comparatively small.  However, it’s clear weekend deployments aren’t really going to be sustainable – in the sense of keeping a talented group of people willing to work 7 days a week.  Next sprint we are going to try doing the deployment on a weekday evening.  I ‘m well aware that no time is a good time for an outage.  In fact, I even got some customer emails when 59’s weekend deployment experienced issues, but there are less bad times than others.  For context, here’s a graph of activity on our service, starting from Sun morning.

In the end, the most important this is getting to the point where every deployment is a “non-event” (meaning no one even notices it happens because it is so seamless) – both for our customers and our employees.  Time shifting the deployment isn’t a fix, it’s a mitigation and while it’s a wise precaution to take, the effect on the team is profound enough that we have to be very careful how much we rely on it.
In that light, we have done a lot of technical work in the past few months to “get back on top” of deployments.  It became clear that the scale of the service had outgrown the engineering processes and resiliency we had built in and it was time to do more.  Among other things we…Doubled down on root cause analysis and post-deployment retrospectivesFed all engineering process learning (both from deployment retrospectives and elsewhere) into an engineering system backlog in order to concretely track progress and to help prioritize.  From there we farmed work out into feature team backlogs.Made significant changes to our pre-deployment testing and scale validation to make it “more like production”.  While it will never be fully like production, it is helping catch more issues than before.Accelerated work to enable multiple instances for VS Online.  In fact, you don’t know it, but we deployed the first “additional instance” a couple of weeks ago.  Ultimately, this will allow us to run fractions of our production load on independent clusters that can be upgraded separately.  This way we will not have to subject the entire customer base to the upgrade at the same time.  The instance we set up a couple of weeks ago, we have affectionately called “ring 0” or (Scale Unit 0 – SU0) and it will be where all production deployments happen first.  SU0 is in the Azure San Antonio data center and SU1 (the instance we’ve been using for a few years) is in the Azure Chicago data center.  Ring 0 will be an instance where we only put accounts who “volunteer” for the risk of additional volatility – mine will be there .  Once deployments are validated on ring 0, they will incrementally roll out across other instances.  Eventually we will add the ability for you to choose which instance your account is on and this will give you the ability to locate your account in your region.Worked to further decouple services to enable more independent deployment of individual services (TFS, Build, Cloud load, analytics, etc).  There’s more work to do here but we are making progress.Implemented a new “lock manager” to better enforce some global service policies/best practices that we saw often being validated based on our root cause analysis.  I hope to write a whole post on this one at some point and maybe even share the code.And much more…
I’d like to think that the smooth deployment this weekend was a reflection of the work we’ve been doing but I’d like to see 3 or 4 smooth ones in a row before I’m willing to give too much credit.  We’ll continue to work hard on it.  I don’t expect to be at a new “plateau” of service stability and excellent for another few months but we’re definitely on the ascent.
Thanks for your patience and understanding as we continue to work to produce the best developer services on the planet.  As always, if you see things we can do better, please let us know.
Brian</sxp:MobileContent>
<sxp:Tag>VSOnline</sxp:Tag>
</item>
<item>
<title>If you had to start over, what technologies would you learn in 2014?</title>
<description>&lt;div&gt;&lt;p&gt;I got an email recently from a long-time programmer who had to step out of the game for a little while. They basically had a hiatus from programming due to situations out of their control, but now are looking at getting back in.&lt;/p&gt;  &lt;p&gt;They asked, quoting from the email:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;b&gt;If you had to “start over,” what are the technologies, languages, paradigms and platforms I need to be up-to-date and mastering in my new world of 2014?&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;It’s daunting if not downright scary.  I can *&lt;b&gt;learn&lt;/b&gt;* anything, and do - quickly.  I feel like I’ve been sooooo out of the loop, it’s not even funny.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~en.wikipedia.org/wiki/File:Bangalore_India_Tech_books_for_sale_IMG_5261.jpg"&gt;&lt;img title="Programming Books used under Wikimedia Commons" style="float: right; margin: 0px 0px 0px 5px; display: inline" alt="Programming Books used under Wikimedia Commons" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/If-you-had-to-start-over-what-technologi_16EC/Programming%20Books_3b5baadc-c482-4da6-965f-89cee324fb21.jpg" width="393" align="right" height="546" /&gt;&lt;/a&gt;I think we can all relate to feeling like this. I've talked about this before in my post "&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ImAPhonyAreYou.aspx"&gt;I'm a phony&lt;/a&gt;" about &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ImAPhonyAreYou.aspx"&gt;imposter syndrome&lt;/a&gt;. Technology is changing so fast it's hard to be a "professional" at anything. Ultimately, we're all amateurs.&lt;/p&gt;  &lt;p&gt;To the root question, though, what technologies would &lt;em&gt;I &lt;/em&gt;learn? &lt;/p&gt;  &lt;p&gt;This question comes up a lot. I tell people this.&lt;strong&gt; Learn one language you can build large systems with AND also learn JavaScript.&lt;/strong&gt; For me, that's C# and JavaScript. For someone else, the "systems" language might be Erlang, or Groovy, or Ruby, or Java, or Scala. That language matters less to me. Your goal is to be able to write applications for the web, as well as write other systems.&lt;/p&gt;  &lt;h3&gt;Pick a language that feels right &lt;/h3&gt;  &lt;p&gt;Learn a language that has a community behind it and that has been a part of building successful systems. Learn a language that lets you create the kinds of systems you want to create. For me, I picked C# because I can write &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net"&gt;web apps&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~msdn.microsoft.com/en-US/windows/"&gt;Windows apps&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://xamarin.com/mac"&gt;Mac apps&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~xamarin.com/ios"&gt;iPhone apps&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~dev.windowsphone.com/en-us"&gt;Windows Phone apps&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ExclusiveSneakPeekTheAGENTSmartWatchEmulatorAndManagedNETCodeOnMyWrist.aspx"&gt;SmartWatch apps&lt;/a&gt;, and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.netduino.com"&gt;tiny embedded apps&lt;/a&gt;, but above all because I enjoy writing C#. &lt;/p&gt;  &lt;p&gt;There are many other languages that have a wonderfully rich breadth of power and expressiveness. Python is one, Java is another, and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~nodebots.io/"&gt;JavaScript and node can even control robots&lt;/a&gt;. Pick a language with personality and breadth, and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hanselminutes.com/407/learning-code-the-hard-way-with-zed-shaw"&gt;learn that language the hard way&lt;/a&gt;, by doing. Read &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ACoderAProgrammerAHackerADeveloperAndAComputerScientistWalkIntoAVennDiagram.aspx"&gt;lots of code and lots of books&lt;/a&gt;. Pick a language that fits your brain and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ProgrammingsNotForYouHowAboutThinkingBeEmpowered.aspx"&gt;helps you learn how to think&lt;/a&gt;, and when you do think, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/PleaseLearnToThinkAboutAbstractions.aspx"&gt;think about abstractions&lt;/a&gt;'.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/YourBlogIsTheEngineOfCommunity.aspx"&gt;Write while you learn your new language&lt;/a&gt;. Write about what you discover, what works, what doesn't. Write even though no one may be reading; you may find that they are reading. Join your new language's community and go to its user groups. Remember not to have ego, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/YouAreNotYourCode.aspx"&gt;you are not your code&lt;/a&gt;. &lt;/p&gt;  &lt;h3&gt;Bet on the Web &lt;/h3&gt;  &lt;p&gt;There's lots of talk about App Stores these days. Everyone has them and they are clearly where the money is made. But today's (2014's) App Stores are still broken. &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/AppsAreTooMuchLike1990sCDROMsAndNotEnoughLikeTheWeb.aspx"&gt;Updates are a hassle&lt;/a&gt;, even when they are automatic. Apps (on all platforms) get stuck in broken updating states and have to be reinstalled, updates are often huge and rarely use smart patching and deltas. App Stores can become &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TheBrokenWindowsTheoryOfAppStores.aspx"&gt;weed-filled gardens&lt;/a&gt; if they aren't attended to.&lt;/p&gt;  &lt;p&gt;The web persists, though. We have issues like net neutrality to work out, and walled gardens like Facebook, our standards orgs are stuck in committee, and we get a new identity subsystem every few years, but the web is winning. The web will persist and the web will win. That's why I suggest you learn JavaScript. (Learn &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/VisualStudio11ExpressForWebForFrontEndDevelopmentJavaScriptHTML5CSS3.aspx"&gt;HTML5 and CSS3 also&lt;/a&gt; and learn to create and consume JSON services.) JavaScript is &lt;strong&gt;the &lt;/strong&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx"&gt;virtual machine&lt;/a&gt; that we all have installed and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebPart2MadnessOrJustInsanity.aspx"&gt;JavaScript is the language of the web&lt;/a&gt;. (For some, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/JavaScriptIsWebAssemblyLanguageAndThatsOK.aspx"&gt;JavaScript is Assembly Language&lt;/a&gt;.) It's not going anywhere, so that why you should learn it. &lt;/p&gt;  &lt;p&gt;Aim to be able to create web sites, web apps, and rich connected apps and systems. Also aim to know a language that lets you write applications that you can put in the App Store for any of a billion connected devices.&lt;/p&gt;  &lt;p&gt;That's my advice to someone starting over in 2014.&lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big Thanks to Aspose for sponsoring the blog this week! &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1kHwDM8" rel="nofollow"&gt;Aspose.Total for .NET&lt;/a&gt; has all the APIs you need to create, manipulate and convert Microsoft Office documents and a host of other file formats in your applications. Curious? &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1kHwDM8" rel="nofollow"&gt;Start a free trial today&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2014 Scott Hanselman. All rights reserved.
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/56272136/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/56272136/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/56272136/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/56272136/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/56272136/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/56272136/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;/div&gt;</description>
<pubDate>Mon, 10 Feb 2014 10:17:20 GMT</pubDate>
<guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=4298b8d7-13d3-4078-aad0-f687dd28ff58</guid>
<link>http://feeds.hanselman.com/~/56272136/0/scotthanselman~If-you-had-to-start-over-what-technologies-would-you-learn-in.aspx</link>
<author>Scott Hanselman</author>
<comments>http://www.hanselman.com/blog/CommentView.aspx?guid=4298b8d7-13d3-4078-aad0-f687dd28ff58</comments>
<category>Musings</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>DotNETFramework</sxp:FeedId>
<sxp:PublishId>6063139</sxp:PublishId>
<sxp:AssetId>http://www.hanselman.com/blog/PermaLink.aspx?guid=4298b8d7-13d3-4078-aad0-f687dd28ff58</sxp:AssetId>
<sxp:Author>Scott Hanselman</sxp:Author>
<sxp:Comments>http://www.hanselman.com/blog/CommentView.aspx?guid=4298b8d7-13d3-4078-aad0-f687dd28ff58</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Mon, 10 Feb 2014 13:28:31 GMT</sxp:LastUpdated>
<sxp:Link>http://feeds.hanselman.com/~/56272136/0/scotthanselman~If-you-had-to-start-over-what-technologies-would-you-learn-in.aspx</sxp:Link>
<sxp:PublishDate>Mon, 10 Feb 2014 10:17:20 GMT</sxp:PublishDate>
<sxp:RelativeTime>1 days ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35398563</sxp:SourceItemId>
<sxp:SourceFeedId>2413</sxp:SourceFeedId>
<sxp:SourceName>hanselman</sxp:SourceName>
<sxp:Title>If you had to start over, what technologies would you learn in 2014?</sxp:Title>
<sxp:Content>&lt;div&gt;&lt;p&gt;I got an email recently from a long-time programmer who had to step out of the game for a little while. They basically had a hiatus from programming due to situations out of their control, but now are looking at getting back in.&lt;/p&gt;  &lt;p&gt;They asked, quoting from the email:&lt;/p&gt;  &lt;blockquote&gt;   &lt;p&gt;&lt;b&gt;If you had to “start over,” what are the technologies, languages, paradigms and platforms I need to be up-to-date and mastering in my new world of 2014?&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&lt;u&gt;&lt;/u&gt;&lt;u&gt;&lt;/u&gt;&lt;/p&gt;    &lt;p&gt;It’s daunting if not downright scary.  I can *&lt;b&gt;learn&lt;/b&gt;* anything, and do - quickly.  I feel like I’ve been sooooo out of the loop, it’s not even funny.&lt;/p&gt; &lt;/blockquote&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~en.wikipedia.org/wiki/File:Bangalore_India_Tech_books_for_sale_IMG_5261.jpg"&gt;&lt;img title="Programming Books used under Wikimedia Commons" style="float: right; margin: 0px 0px 0px 5px; display: inline" alt="Programming Books used under Wikimedia Commons" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/If-you-had-to-start-over-what-technologi_16EC/Programming%20Books_3b5baadc-c482-4da6-965f-89cee324fb21.jpg" width="393" align="right" height="546" /&gt;&lt;/a&gt;I think we can all relate to feeling like this. I've talked about this before in my post "&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ImAPhonyAreYou.aspx"&gt;I'm a phony&lt;/a&gt;" about &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ImAPhonyAreYou.aspx"&gt;imposter syndrome&lt;/a&gt;. Technology is changing so fast it's hard to be a "professional" at anything. Ultimately, we're all amateurs.&lt;/p&gt;  &lt;p&gt;To the root question, though, what technologies would &lt;em&gt;I &lt;/em&gt;learn? &lt;/p&gt;  &lt;p&gt;This question comes up a lot. I tell people this.&lt;strong&gt; Learn one language you can build large systems with AND also learn JavaScript.&lt;/strong&gt; For me, that's C# and JavaScript. For someone else, the "systems" language might be Erlang, or Groovy, or Ruby, or Java, or Scala. That language matters less to me. Your goal is to be able to write applications for the web, as well as write other systems.&lt;/p&gt;  &lt;h3&gt;Pick a language that feels right &lt;/h3&gt;  &lt;p&gt;Learn a language that has a community behind it and that has been a part of building successful systems. Learn a language that lets you create the kinds of systems you want to create. For me, I picked C# because I can write &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net"&gt;web apps&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~msdn.microsoft.com/en-US/windows/"&gt;Windows apps&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~https://xamarin.com/mac"&gt;Mac apps&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~xamarin.com/ios"&gt;iPhone apps&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~dev.windowsphone.com/en-us"&gt;Windows Phone apps&lt;/a&gt;, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ExclusiveSneakPeekTheAGENTSmartWatchEmulatorAndManagedNETCodeOnMyWrist.aspx"&gt;SmartWatch apps&lt;/a&gt;, and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.netduino.com"&gt;tiny embedded apps&lt;/a&gt;, but above all because I enjoy writing C#. &lt;/p&gt;  &lt;p&gt;There are many other languages that have a wonderfully rich breadth of power and expressiveness. Python is one, Java is another, and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~nodebots.io/"&gt;JavaScript and node can even control robots&lt;/a&gt;. Pick a language with personality and breadth, and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hanselminutes.com/407/learning-code-the-hard-way-with-zed-shaw"&gt;learn that language the hard way&lt;/a&gt;, by doing. Read &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ACoderAProgrammerAHackerADeveloperAndAComputerScientistWalkIntoAVennDiagram.aspx"&gt;lots of code and lots of books&lt;/a&gt;. Pick a language that fits your brain and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/ProgrammingsNotForYouHowAboutThinkingBeEmpowered.aspx"&gt;helps you learn how to think&lt;/a&gt;, and when you do think, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/PleaseLearnToThinkAboutAbstractions.aspx"&gt;think about abstractions&lt;/a&gt;'.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/YourBlogIsTheEngineOfCommunity.aspx"&gt;Write while you learn your new language&lt;/a&gt;. Write about what you discover, what works, what doesn't. Write even though no one may be reading; you may find that they are reading. Join your new language's community and go to its user groups. Remember not to have ego, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/YouAreNotYourCode.aspx"&gt;you are not your code&lt;/a&gt;. &lt;/p&gt;  &lt;h3&gt;Bet on the Web &lt;/h3&gt;  &lt;p&gt;There's lots of talk about App Stores these days. Everyone has them and they are clearly where the money is made. But today's (2014's) App Stores are still broken. &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/AppsAreTooMuchLike1990sCDROMsAndNotEnoughLikeTheWeb.aspx"&gt;Updates are a hassle&lt;/a&gt;, even when they are automatic. Apps (on all platforms) get stuck in broken updating states and have to be reinstalled, updates are often huge and rarely use smart patching and deltas. App Stores can become &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/TheBrokenWindowsTheoryOfAppStores.aspx"&gt;weed-filled gardens&lt;/a&gt; if they aren't attended to.&lt;/p&gt;  &lt;p&gt;The web persists, though. We have issues like net neutrality to work out, and walled gardens like Facebook, our standards orgs are stuck in committee, and we get a new identity subsystem every few years, but the web is winning. The web will persist and the web will win. That's why I suggest you learn JavaScript. (Learn &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/VisualStudio11ExpressForWebForFrontEndDevelopmentJavaScriptHTML5CSS3.aspx"&gt;HTML5 and CSS3 also&lt;/a&gt; and learn to create and consume JSON services.) JavaScript is &lt;strong&gt;the &lt;/strong&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx"&gt;virtual machine&lt;/a&gt; that we all have installed and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebPart2MadnessOrJustInsanity.aspx"&gt;JavaScript is the language of the web&lt;/a&gt;. (For some, &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.hanselman.com/blog/JavaScriptIsWebAssemblyLanguageAndThatsOK.aspx"&gt;JavaScript is Assembly Language&lt;/a&gt;.) It's not going anywhere, so that why you should learn it. &lt;/p&gt;  &lt;p&gt;Aim to be able to create web sites, web apps, and rich connected apps and systems. Also aim to know a language that lets you write applications that you can put in the App Store for any of a billion connected devices.&lt;/p&gt;  &lt;p&gt;That's my advice to someone starting over in 2014.&lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big Thanks to Aspose for sponsoring the blog this week! &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1kHwDM8" rel="nofollow"&gt;Aspose.Total for .NET&lt;/a&gt; has all the APIs you need to create, manipulate and convert Microsoft Office documents and a host of other file formats in your applications. Curious? &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1kHwDM8" rel="nofollow"&gt;Start a free trial today&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2014 Scott Hanselman. All rights reserved.
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/56272136/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/56272136/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/56272136/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/56272136/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/56272136/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/56272136/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;/div&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>If you had to start over, what technologies would you learn in 2014?</sxp:MobileTitle>
<sxp:MobileContent>I got an email recently from a long-time programmer who had to step out of the game for a little while. They basically had a hiatus from programming due to situations out of their control, but now are looking at getting back in.
They asked, quoting from the email:
If you had to “start over,” what are the technologies, languages, paradigms and platforms I need to be up-to-date and mastering in my new world of 2014?

It’s daunting if not downright scary.  I can *learn* anything, and do - quickly.  I feel like I’ve been sooooo out of the loop, it’s not even funny.
I think we can all relate to feeling like this. I've talked about this before in my post "I'm a phony" about imposter syndrome. Technology is changing so fast it's hard to be a "professional" at anything. Ultimately, we're all amateurs.
To the root question, though, what technologies would I learn?
This question comes up a lot. I tell people this. Learn one language you can build large systems with AND also learn JavaScript. For me, that's C# and JavaScript. For someone else, the "systems" language might be Erlang, or Groovy, or Ruby, or Java, or Scala. That language matters less to me. Your goal is to be able to write applications for the web, as well as write other systems.Pick a language that feels right
Learn a language that has a community behind it and that has been a part of building successful systems. Learn a language that lets you create the kinds of systems you want to create. For me, I picked C# because I can write web apps, Windows apps, Mac apps, iPhone apps, Windows Phone apps, SmartWatch apps, and tiny embedded apps, but above all because I enjoy writing C#.
There are many other languages that have a wonderfully rich breadth of power and expressiveness. Python is one, Java is another, and JavaScript and node can even control robots. Pick a language with personality and breadth, and learn that language the hard way, by doing. Read lots of code and lots of books. Pick a language that fits your brain and helps you learn how to think, and when you do think, think about abstractions'.
Write while you learn your new language. Write about what you discover, what works, what doesn't. Write even though no one may be reading; you may find that they are reading. Join your new language's community and go to its user groups. Remember not to have ego, you are not your code. Bet on the Web
There's lots of talk about App Stores these days. Everyone has them and they are clearly where the money is made. But today's (2014's) App Stores are still broken. Updates are a hassle, even when they are automatic. Apps (on all platforms) get stuck in broken updating states and have to be reinstalled, updates are often huge and rarely use smart patching and deltas. App Stores can become weed-filled gardens if they aren't attended to.
The web persists, though. We have issues like net neutrality to work out, and walled gardens like Facebook, our standards orgs are stuck in committee, and we get a new identity subsystem every few years, but the web is winning. The web will persist and the web will win. That's why I suggest you learn JavaScript. (Learn HTML5 and CSS3 also and learn to create and consume JSON services.) JavaScript is the virtual machine that we all have installed and JavaScript is the language of the web. (For some, JavaScript is Assembly Language.) It's not going anywhere, so that why you should learn it.
Aim to be able to create web sites, web apps, and rich connected apps and systems. Also aim to know a language that lets you write applications that you can put in the App Store for any of a billion connected devices.
That's my advice to someone starting over in 2014.
Sponsor: Big Thanks to Aspose for sponsoring the blog this week! Aspose.Total for .NET has all the APIs you need to create, manipulate and convert Microsoft Office documents and a host of other file formats in your applications. Curious? Start a free trial today.© 2014 Scott Hanselman. All rights reserved.</sxp:MobileContent>
<sxp:Tag>Musings</sxp:Tag>
</item>
<item>
<title>Vote for the SharePoint Conference App Awards – People’s Choice!</title>
<description>&lt;p&gt;We asked for innovative and high-quality apps for the Office Store, and the response was overwhelming, with over 200 new or updated apps! If you are registered to attend SPC14, now is the time to cast your People’s Choice vote. &lt;/p&gt;  &lt;p&gt;Voting will take place in two rounds – the Preliminaries and the Finals. Preliminary voting starts now and runs until February 14, 2014 16:00 Pacific Time. The Finals voting round will be announced shortly afterwards. There are a lot of apps to choose from, so check out all of them and nominate your favorite for the People’s Choice award. &lt;/p&gt;  &lt;p&gt;SPC14 Attendees: To review the contest apps and cast your vote, see &lt;a href="http://www.sharepointconference.com/Pages/AppAwardsVoting.aspx"&gt;App Awards – People’s Choice&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;For contest details, see &lt;a href="http://www.sharepointconference.com/appawards"&gt;App Awards&lt;/a&gt;.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10497728" width="1" height="1"&gt;</description>
<pubDate>Fri, 07 Feb 2014 23:08:31 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10497728</guid>
<link>http://blogs.msdn.com/b/officeapps/archive/2014/02/07/vote-for-the-sharepoint-conference-app-awards-people-s-choice.aspx</link>
<author>Office Developer Team</author>
<comments>http://blogs.msdn.com/b/officeapps/archive/2014/02/07/vote-for-the-sharepoint-conference-app-awards-people-s-choice.aspx#comments</comments>
<category>Apps for SharePoint</category>
<category>Apps for Office</category>
<category>Announcements</category>
<category>Office Store</category>
<category>App Contest</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>PlatformDevelopment</sxp:FeedId>
<sxp:PublishId>6046713</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10497728</sxp:AssetId>
<sxp:Author>Office Developer Team</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/officeapps/archive/2014/02/07/vote-for-the-sharepoint-conference-app-awards-people-s-choice.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Sat, 08 Feb 2014 02:12:07 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/officeapps/archive/2014/02/07/vote-for-the-sharepoint-conference-app-awards-people-s-choice.aspx</sxp:Link>
<sxp:PublishDate>Fri, 07 Feb 2014 23:08:31 GMT</sxp:PublishDate>
<sxp:RelativeTime>4 days ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35378104</sxp:SourceItemId>
<sxp:SourceFeedId>2583</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>Vote for the SharePoint Conference App Awards – People’s Choice!</sxp:Title>
<sxp:Content>&lt;p&gt;We asked for innovative and high-quality apps for the Office Store, and the response was overwhelming, with over 200 new or updated apps! If you are registered to attend SPC14, now is the time to cast your People’s Choice vote. &lt;/p&gt;  &lt;p&gt;Voting will take place in two rounds – the Preliminaries and the Finals. Preliminary voting starts now and runs until February 14, 2014 16:00 Pacific Time. The Finals voting round will be announced shortly afterwards. There are a lot of apps to choose from, so check out all of them and nominate your favorite for the People’s Choice award. &lt;/p&gt;  &lt;p&gt;SPC14 Attendees: To review the contest apps and cast your vote, see &lt;a href="http://www.sharepointconference.com/Pages/AppAwardsVoting.aspx"&gt;App Awards – People’s Choice&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;For contest details, see &lt;a href="http://www.sharepointconference.com/appawards"&gt;App Awards&lt;/a&gt;.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10497728" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>Vote for the SharePoint Conference App Awards – People’s Choice!</sxp:MobileTitle>
<sxp:MobileContent>We asked for innovative and high-quality apps for the Office Store, and the response was overwhelming, with over 200 new or updated apps! If you are registered to attend SPC14, now is the time to cast your People’s Choice vote.
Voting will take place in two rounds – the Preliminaries and the Finals. Preliminary voting starts now and runs until February 14, 2014 16:00 Pacific Time. The Finals voting round will be announced shortly afterwards. There are a lot of apps to choose from, so check out all of them and nominate your favorite for the People’s Choice award.
SPC14 Attendees: To review the contest apps and cast your vote, see App Awards – People’s Choice.
For contest details, see App Awards.</sxp:MobileContent>
<sxp:Tag>Apps for SharePoint</sxp:Tag>
<sxp:Tag>Apps for Office</sxp:Tag>
<sxp:Tag>Announcements</sxp:Tag>
<sxp:Tag>Office Store</sxp:Tag>
<sxp:Tag>App Contest</sxp:Tag>
</item>
<item>
<title>Advanced Developers Conference 2014</title>
<description>The Advanced Developers Conference 2014 takes place April 29-30 in Munich. This years sessions will be about modern device apps, debugging, drivers, graphics,cloud services and much more.
The conference will host about 200 attendees with a broad range...(&lt;a href="http://blogs.msdn.com/b/vcblog/archive/2014/02/07/advanced-developers-conference-2014.aspx"&gt;read more&lt;/a&gt;)&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10497725" width="1" height="1"&gt;</description>
<pubDate>Fri, 07 Feb 2014 22:43:00 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10497725</guid>
<link>http://blogs.msdn.com/b/vcblog/archive/2014/02/07/advanced-developers-conference-2014.aspx</link>
<author>Eric Battalio</author>
<comments>http://blogs.msdn.com/b/vcblog/archive/2014/02/07/advanced-developers-conference-2014.aspx#comments</comments>
<category>Announcement</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>Languages</sxp:FeedId>
<sxp:PublishId>6046516</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10497725</sxp:AssetId>
<sxp:Author>Eric Battalio</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/vcblog/archive/2014/02/07/advanced-developers-conference-2014.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Fri, 07 Feb 2014 23:37:48 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/vcblog/archive/2014/02/07/advanced-developers-conference-2014.aspx</sxp:Link>
<sxp:PublishDate>Fri, 07 Feb 2014 22:43:00 GMT</sxp:PublishDate>
<sxp:RelativeTime>4 days ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35377733</sxp:SourceItemId>
<sxp:SourceFeedId>2408</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>Advanced Developers Conference 2014</sxp:Title>
<sxp:Content>The Advanced Developers Conference 2014 takes place April 29-30 in Munich. This years sessions will be about modern device apps, debugging, drivers, graphics,cloud services and much more.
The conference will host about 200 attendees with a broad range...(&lt;a href="http://blogs.msdn.com/b/vcblog/archive/2014/02/07/advanced-developers-conference-2014.aspx"&gt;read more&lt;/a&gt;)&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10497725" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>Advanced Developers Conference 2014</sxp:MobileTitle>
<sxp:MobileContent>The Advanced Developers Conference 2014 takes place April 29-30 in Munich. This years sessions will be about modern device apps, debugging, drivers, graphics,cloud services and much more.
The conference will host about 200 attendees with a broad range...(read more)</sxp:MobileContent>
<sxp:Tag>Announcement</sxp:Tag>
</item>
<item>
<title>Checklist: What NOT to do in ASP.NET</title>
<description>&lt;div&gt;&lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~vimeo.com/68390507"&gt;&lt;img title="Damian Edwards at NDC 2013 talking about ASP.NET" style="float: right; margin: 0px 0px 0px 5px; display: inline" alt="Damian Edwards at NDC 2013 talking about ASP.NET" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/What-NOT-to-do-in-ASP.NET_BBDA/image_645fca92-0cdf-4ae4-b0ad-a5db42539bbd.png" width="500" align="right" height="280" /&gt;&lt;/a&gt;About a year ago we thought it would be a good idea to do a talk on "What not to do in ASP.NET?" - basically an anti-patterns talks. We kept seeing folks falling into the same traps and wanted to be prescriptive as there's aspects to ASP.NET that are 10 years old and don't apply to today's internet, but there are also &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/get-started"&gt;new aspects to ASP.NET&lt;/a&gt; that are only a year old, and perhaps haven't soaked into the zeitgeist quite yet. &lt;/p&gt;  &lt;p&gt;Damian Edwards gave &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~vimeo.com/68390507"&gt;his version of this talk at NDC 2013 and you can watch the video here&lt;/a&gt; if you like, it's very entertaining.&lt;/p&gt;  &lt;p&gt;We took the information we gathered from people like Damian, Levi Broderick and others, and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead"&gt;Tom FitzMacken put together a whitepaper on the topic&lt;/a&gt;. It's not complete, but it covers some of the most common "gotchas" folks run into.&lt;/p&gt;  &lt;p&gt;Here are the areas we call out in the whitepaper so far, with highlights below from me.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#standards"&gt;Standards Compliance&lt;/a&gt;       &lt;ul&gt;       &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#adapters"&gt;Control Adapters&lt;/a&gt; - Control adapters were a good idea in .NET 2, but it's best to use solid adaptive CSS and HTML techniques today. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#styleprop"&gt;Style Properties on Controls&lt;/a&gt; - Set CSS classes yourself, don't use inline styles. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#callback"&gt;Page and Control Callbacks&lt;/a&gt; - Page Callbacks pre-date standard AJAX techniques, so today, stick with SignalR, Web API, and JavaScript. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#browsercap"&gt;Browser Capability Detection&lt;/a&gt; - Check for features, not for browsers whenever possible. &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#security"&gt;Security&lt;/a&gt;       &lt;ul&gt;       &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#validation"&gt;Request Validation&lt;/a&gt; - While Request Validation is useful, it's not focused and it doesn't know exactly what you app is doing. Be smart and validate inputs with the full knowledge of what your app is trying to accomplish. Don't trust user input. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#cookieless"&gt;Cookieless Forms Authentication and Session&lt;/a&gt; - Don't pass anything auth related in the query string. Cookieless auth will never be secure. Don't do it. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#viewstatemac"&gt;EnableViewStateMac&lt;/a&gt; - This should never be false. Ever. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#medium"&gt;Medium Trust&lt;/a&gt; - Medium trust isn't a security boundary you should count on. Put apps in separate app pools. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#appsettings"&gt;&lt;appSettings&gt;&lt;/a&gt; - Don't disable security patches with appSettings. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#urlpathencode"&gt;UrlPathEncode&lt;/a&gt; - This doesn't do what you think it does. Use UrlEncode. This method was very specific, poorly named, and is now totally obsolete. &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#performance"&gt;Reliability and Performance&lt;/a&gt;       &lt;ul&gt;       &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#presend"&gt;PreSendRequestHeaders and PreSendRequestContext&lt;/a&gt; - Leave these alone making managed modules. These can be used with native modules, but not IHttpModules. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#asyncevents"&gt;Asynchronous Page Events with Web Forms&lt;/a&gt; - Use Page.RegisterAsyncTask instead. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#fire"&gt;Fire-and-Forget Work&lt;/a&gt; - Avoid using ThreadPool.QueueUserWorkItem as your app pool could disappear at any time. Move this work outside or use WebBackgrounder if you must. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#requestentity"&gt;Request Entity Body&lt;/a&gt; - Stay out of Request.Form and Request.InputStream before your handler's execute event. It may not be ready to go. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#redirect"&gt;Response.Redirect and Response.End&lt;/a&gt; - Be conscious of Thread.Aborts that will happen when you redirect. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#viewstatemode"&gt;EnableViewState and ViewStateMode&lt;/a&gt; - There's no need to hate on ViewState. Turn it off everywhere, then turn it on &lt;em&gt;only for the individual controls that need it. &lt;/em&gt;&lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#sqlprovider"&gt;SqlMembershipProvider&lt;/a&gt; - Consider using ASP.NET User Providers, or better yet, the new ASP.NET Identity system. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#long"&gt;Long Running Requests (&gt;110 seconds)&lt;/a&gt; - ASP.NET isn't meant to handle long running requests that are a minute (or two) long. Use WebSockets or SignalR for connected clients, and use asynchronous I/O operations.&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;I hope this helps someone out! &lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big Thanks to Aspose for sponsoring the blog this week! &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1kHwDM8"&gt;Aspose.Total for .NET&lt;/a&gt; has all the APIs you need to create, manipulate and convert Microsoft Office documents and a host of other file formats in your applications. Curious? &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1kHwDM8"&gt;Start a free trial today&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2014 Scott Hanselman. All rights reserved.
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/56093439/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/56093439/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/56093439/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/56093439/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/56093439/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/56093439/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;/div&gt;</description>
<pubDate>Fri, 07 Feb 2014 21:54:36 GMT</pubDate>
<guid isPermaLink="false">http://www.hanselman.com/blog/PermaLink.aspx?guid=fd3d6389-295e-4919-8864-dbed63ea22de</guid>
<link>http://feeds.hanselman.com/~/56093439/0/scotthanselman~Checklist-What-NOT-to-do-in-ASPNET.aspx</link>
<author>Scott Hanselman</author>
<comments>http://www.hanselman.com/blog/CommentView.aspx?guid=fd3d6389-295e-4919-8864-dbed63ea22de</comments>
<category>ASP.NET</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>DotNETFramework</sxp:FeedId>
<sxp:PublishId>6046731</sxp:PublishId>
<sxp:AssetId>http://www.hanselman.com/blog/PermaLink.aspx?guid=fd3d6389-295e-4919-8864-dbed63ea22de</sxp:AssetId>
<sxp:Author>Scott Hanselman</sxp:Author>
<sxp:Comments>http://www.hanselman.com/blog/CommentView.aspx?guid=fd3d6389-295e-4919-8864-dbed63ea22de</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Sat, 08 Feb 2014 02:12:42 GMT</sxp:LastUpdated>
<sxp:Link>http://feeds.hanselman.com/~/56093439/0/scotthanselman~Checklist-What-NOT-to-do-in-ASPNET.aspx</sxp:Link>
<sxp:PublishDate>Fri, 07 Feb 2014 21:54:36 GMT</sxp:PublishDate>
<sxp:RelativeTime>4 days ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35378133</sxp:SourceItemId>
<sxp:SourceFeedId>2413</sxp:SourceFeedId>
<sxp:SourceName>hanselman</sxp:SourceName>
<sxp:Title>Checklist: What NOT to do in ASP.NET</sxp:Title>
<sxp:Content>&lt;div&gt;&lt;p&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~vimeo.com/68390507"&gt;&lt;img title="Damian Edwards at NDC 2013 talking about ASP.NET" style="float: right; margin: 0px 0px 0px 5px; display: inline" alt="Damian Edwards at NDC 2013 talking about ASP.NET" src="http://www.hanselman.com/blog/content/binary/Windows-Live-Writer/What-NOT-to-do-in-ASP.NET_BBDA/image_645fca92-0cdf-4ae4-b0ad-a5db42539bbd.png" width="500" align="right" height="280" /&gt;&lt;/a&gt;About a year ago we thought it would be a good idea to do a talk on "What not to do in ASP.NET?" - basically an anti-patterns talks. We kept seeing folks falling into the same traps and wanted to be prescriptive as there's aspects to ASP.NET that are 10 years old and don't apply to today's internet, but there are also &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/get-started"&gt;new aspects to ASP.NET&lt;/a&gt; that are only a year old, and perhaps haven't soaked into the zeitgeist quite yet. &lt;/p&gt;  &lt;p&gt;Damian Edwards gave &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~vimeo.com/68390507"&gt;his version of this talk at NDC 2013 and you can watch the video here&lt;/a&gt; if you like, it's very entertaining.&lt;/p&gt;  &lt;p&gt;We took the information we gathered from people like Damian, Levi Broderick and others, and &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead"&gt;Tom FitzMacken put together a whitepaper on the topic&lt;/a&gt;. It's not complete, but it covers some of the most common "gotchas" folks run into.&lt;/p&gt;  &lt;p&gt;Here are the areas we call out in the whitepaper so far, with highlights below from me.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#standards"&gt;Standards Compliance&lt;/a&gt;       &lt;ul&gt;       &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#adapters"&gt;Control Adapters&lt;/a&gt; - Control adapters were a good idea in .NET 2, but it's best to use solid adaptive CSS and HTML techniques today. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#styleprop"&gt;Style Properties on Controls&lt;/a&gt; - Set CSS classes yourself, don't use inline styles. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#callback"&gt;Page and Control Callbacks&lt;/a&gt; - Page Callbacks pre-date standard AJAX techniques, so today, stick with SignalR, Web API, and JavaScript. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#browsercap"&gt;Browser Capability Detection&lt;/a&gt; - Check for features, not for browsers whenever possible. &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#security"&gt;Security&lt;/a&gt;       &lt;ul&gt;       &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#validation"&gt;Request Validation&lt;/a&gt; - While Request Validation is useful, it's not focused and it doesn't know exactly what you app is doing. Be smart and validate inputs with the full knowledge of what your app is trying to accomplish. Don't trust user input. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#cookieless"&gt;Cookieless Forms Authentication and Session&lt;/a&gt; - Don't pass anything auth related in the query string. Cookieless auth will never be secure. Don't do it. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#viewstatemac"&gt;EnableViewStateMac&lt;/a&gt; - This should never be false. Ever. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#medium"&gt;Medium Trust&lt;/a&gt; - Medium trust isn't a security boundary you should count on. Put apps in separate app pools. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#appsettings"&gt;&lt;appSettings&gt;&lt;/a&gt; - Don't disable security patches with appSettings. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#urlpathencode"&gt;UrlPathEncode&lt;/a&gt; - This doesn't do what you think it does. Use UrlEncode. This method was very specific, poorly named, and is now totally obsolete. &lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;    &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#performance"&gt;Reliability and Performance&lt;/a&gt;       &lt;ul&gt;       &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#presend"&gt;PreSendRequestHeaders and PreSendRequestContext&lt;/a&gt; - Leave these alone making managed modules. These can be used with native modules, but not IHttpModules. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#asyncevents"&gt;Asynchronous Page Events with Web Forms&lt;/a&gt; - Use Page.RegisterAsyncTask instead. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#fire"&gt;Fire-and-Forget Work&lt;/a&gt; - Avoid using ThreadPool.QueueUserWorkItem as your app pool could disappear at any time. Move this work outside or use WebBackgrounder if you must. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#requestentity"&gt;Request Entity Body&lt;/a&gt; - Stay out of Request.Form and Request.InputStream before your handler's execute event. It may not be ready to go. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#redirect"&gt;Response.Redirect and Response.End&lt;/a&gt; - Be conscious of Thread.Aborts that will happen when you redirect. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#viewstatemode"&gt;EnableViewState and ViewStateMode&lt;/a&gt; - There's no need to hate on ViewState. Turn it off everywhere, then turn it on &lt;em&gt;only for the individual controls that need it. &lt;/em&gt;&lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#sqlprovider"&gt;SqlMembershipProvider&lt;/a&gt; - Consider using ASP.NET User Providers, or better yet, the new ASP.NET Identity system. &lt;/li&gt;        &lt;li&gt;&lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~www.asp.net/aspnet/overview/web-development-best-practices/what-not-to-do-in-aspnet,-and-what-to-do-instead#long"&gt;Long Running Requests (&gt;110 seconds)&lt;/a&gt; - ASP.NET isn't meant to handle long running requests that are a minute (or two) long. Use WebSockets or SignalR for connected clients, and use asynchronous I/O operations.&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;I hope this helps someone out! &lt;/p&gt;  &lt;hr /&gt;  &lt;p&gt;&lt;strong&gt;Sponsor: &lt;/strong&gt;Big Thanks to Aspose for sponsoring the blog this week! &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1kHwDM8"&gt;Aspose.Total for .NET&lt;/a&gt; has all the APIs you need to create, manipulate and convert Microsoft Office documents and a host of other file formats in your applications. Curious? &lt;a href="http://feeds.hanselman.com/~/t/0/0/scotthanselman/~hnsl.mn/1kHwDM8"&gt;Start a free trial today&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;&lt;hr/&gt;© 2014 Scott Hanselman. All rights reserved.
&lt;br&gt;&lt;/div&gt;&lt;Img align="left" border="0" height="1" width="1" style="border:0;float:left;margin:0;padding:0" hspace="0" src="http://feeds.hanselman.com/~/i/56093439/0/scotthanselman"&gt;


&lt;div style="clear:both;padding-top:0.2em;"&gt;&lt;a title="Like on Facebook" href="http://feeds.hanselman.com/_/28/56093439/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/fblike20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Share on Google+" href="http://feeds.hanselman.com/_/30/56093439/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/googleplus20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Tweet This" href="http://feeds.hanselman.com/_/24/56093439/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/twitter20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Subscribe by email" href="http://feeds.hanselman.com/_/19/56093439/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/email20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;a title="Subscribe by RSS" href="http://feeds.hanselman.com/_/20/56093439/scotthanselman"&gt;&lt;img height="20" src="http://assets.feedblitz.com/i/rss20.png" style="border:0;margin:0;padding:0;"&gt;&lt;/a&gt; &lt;/div&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>Checklist: What NOT to do in ASP.NET</sxp:MobileTitle>
<sxp:MobileContent>About a year ago we thought it would be a good idea to do a talk on "What not to do in ASP.NET?" - basically an anti-patterns talks. We kept seeing folks falling into the same traps and wanted to be prescriptive as there's aspects to ASP.NET that are 10 years old and don't apply to today's internet, but there are also new aspects to ASP.NET that are only a year old, and perhaps haven't soaked into the zeitgeist quite yet.
Damian Edwards gave his version of this talk at NDC 2013 and you can watch the video here if you like, it's very entertaining.
We took the information we gathered from people like Damian, Levi Broderick and others, and Tom FitzMacken put together a whitepaper on the topic. It's not complete, but it covers some of the most common "gotchas" folks run into.
Here are the areas we call out in the whitepaper so far, with highlights below from me.Standards ComplianceControl Adapters - Control adapters were a good idea in .NET 2, but it's best to use solid adaptive CSS and HTML techniques today. Style Properties on Controls - Set CSS classes yourself, don't use inline styles. Page and Control Callbacks - Page Callbacks pre-date standard AJAX techniques, so today, stick with SignalR, Web API, and JavaScript. Browser Capability Detection - Check for features, not for browsers whenever possible. SecurityRequest Validation - While Request Validation is useful, it's not focused and it doesn't know exactly what you app is doing. Be smart and validate inputs with the full knowledge of what your app is trying to accomplish. Don't trust user input. Cookieless Forms Authentication and Session - Don't pass anything auth related in the query string. Cookieless auth will never be secure. Don't do it. EnableViewStateMac - This should never be false. Ever. Medium Trust - Medium trust isn't a security boundary you should count on. Put apps in separate app pools.  - Don't disable security patches with appSettings. UrlPathEncode - This doesn't do what you think it does. Use UrlEncode. This method was very specific, poorly named, and is now totally obsolete. Reliability and PerformancePreSendRequestHeaders and PreSendRequestContext - Leave these alone making managed modules. These can be used with native modules, but not IHttpModules. Asynchronous Page Events with Web Forms - Use Page.RegisterAsyncTask instead. Fire-and-Forget Work - Avoid using ThreadPool.QueueUserWorkItem as your app pool could disappear at any time. Move this work outside or use WebBackgrounder if you must. Request Entity Body - Stay out of Request.Form and Request.InputStream before your handler's execute event. It may not be ready to go. Response.Redirect and Response.End - Be conscious of Thread.Aborts that will happen when you redirect. EnableViewState and ViewStateMode - There's no need to hate on ViewState. Turn it off everywhere, then turn it on only for the individual controls that need it. SqlMembershipProvider - Consider using ASP.NET User Providers, or better yet, the new ASP.NET Identity system. Long Running Requests (&gt;110 seconds) - ASP.NET isn't meant to handle long running requests that are a minute (or two) long. Use WebSockets or SignalR for connected clients, and use asynchronous I/O operations.
I hope this helps someone out!
Sponsor: Big Thanks to Aspose for sponsoring the blog this week! Aspose.Total for .NET has all the APIs you need to create, manipulate and convert Microsoft Office documents and a host of other file formats in your applications. Curious? Start a free trial today.© 2014 Scott Hanselman. All rights reserved.</sxp:MobileContent>
<sxp:Tag>ASP.NET</sxp:Tag>
</item>
<item>
<title>.NET Memory Analysis: Object Inspection</title>
<description>&lt;p&gt;In Visual Studio 2013, we introduced a way to &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/20/using-visual-studio-2013-to-diagnose-net-memory-issues-in-production.aspx"&gt;analyze .NET Memory with Visual Studio&lt;/a&gt;. Now in the Update 2, we’ve added a new feature to inspect values of objects and instances to improve your diagnosing experience.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you are using Managed GCDumps in DiagSession files from Application Insights for Azure (&lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/12/20/investigating-memory-leaks-in-azure-web-sites-with-visual-studio-2013.aspx"&gt;like from this blog post&lt;/a&gt;), you will not have heap to inspect Instances and Values. This feature requires dumps with heap to have the information required for object inspection.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Instance View&lt;/h3&gt;
&lt;p&gt;While on the type summary page, we no longer show a drop down expansion of instances in a type. Instead we pop an icon to enter the new instance view. You can enter this view by clicking the icon or pressing Enter.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/0143.mma1.png"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/0143.mma1.png" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This opens up a new instance view for you to dig deeper into your dump. You can edit the default value shown (instead of just the Type) &lt;a href="http://msdn.microsoft.com/en-us/library/system.diagnostics.debuggerdisplayattribute%28v=vs.110%29.aspx"&gt;by adding a DebuggerDisplayAttribute to your code&lt;/a&gt;. Hovering over items will pop a DataTip to inspect the values for those instances. You can expand down the objects to inspect the data in the subfields. If you want to dig deep down without a DataTip, you can enter into Quick Watch by pressing Enter with the entry selected or through the context menu.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/1513.mma2.png"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/1513.mma2.png" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This also applies in the Paths to Root and Referenced Objects graph at the bottom.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/5672.mma3.png"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/5672.mma3.png" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To return to the previous type overview, you can either select Type from the breadcrumbs at the top or hit the Back button or your Backspace key.&lt;/p&gt;
&lt;h3&gt;In Closing&lt;/h3&gt;
&lt;p&gt;With the addition of these enhancements, we hope these new features will give you more insight to what’s happening inside your .NET Memory dumps. If you wish to know more about .NET Memory Analysis in general, please &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/20/using-visual-studio-2013-to-diagnose-net-memory-issues-in-production.aspx"&gt;revisit our two previous blog entries on the subject&lt;/a&gt;. If you have any questions or comments, please leave them in the comments below or in &lt;a href="http://social.msdn.microsoft.com/Forums/en-US/vsdebug/threads"&gt;our MSDN forum&lt;/a&gt;.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10497476" width="1" height="1"&gt;</description>
<pubDate>Fri, 07 Feb 2014 00:02:00 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10497476</guid>
<link>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/06/net-memory-analysis-object-inspection.aspx</link>
<author>Andrew Chan - MSFT</author>
<comments>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/06/net-memory-analysis-object-inspection.aspx#comments</comments>
<category>Debugging</category>
<category>ALM</category>
<category>Diagnostics</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>ALM</sxp:FeedId>
<sxp:PublishId>6031540</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10497476</sxp:AssetId>
<sxp:Author>Andrew Chan - MSFT</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/06/net-memory-analysis-object-inspection.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Fri, 07 Feb 2014 00:37:44 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/06/net-memory-analysis-object-inspection.aspx</sxp:Link>
<sxp:PublishDate>Fri, 07 Feb 2014 00:02:00 GMT</sxp:PublishDate>
<sxp:RelativeTime>5 days ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35368865</sxp:SourceItemId>
<sxp:SourceFeedId>2403</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>.NET Memory Analysis: Object Inspection</sxp:Title>
<sxp:Content>&lt;p&gt;In Visual Studio 2013, we introduced a way to &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/20/using-visual-studio-2013-to-diagnose-net-memory-issues-in-production.aspx"&gt;analyze .NET Memory with Visual Studio&lt;/a&gt;. Now in the Update 2, we’ve added a new feature to inspect values of objects and instances to improve your diagnosing experience.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you are using Managed GCDumps in DiagSession files from Application Insights for Azure (&lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/12/20/investigating-memory-leaks-in-azure-web-sites-with-visual-studio-2013.aspx"&gt;like from this blog post&lt;/a&gt;), you will not have heap to inspect Instances and Values. This feature requires dumps with heap to have the information required for object inspection.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Instance View&lt;/h3&gt;
&lt;p&gt;While on the type summary page, we no longer show a drop down expansion of instances in a type. Instead we pop an icon to enter the new instance view. You can enter this view by clicking the icon or pressing Enter.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/0143.mma1.png"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/0143.mma1.png" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This opens up a new instance view for you to dig deeper into your dump. You can edit the default value shown (instead of just the Type) &lt;a href="http://msdn.microsoft.com/en-us/library/system.diagnostics.debuggerdisplayattribute%28v=vs.110%29.aspx"&gt;by adding a DebuggerDisplayAttribute to your code&lt;/a&gt;. Hovering over items will pop a DataTip to inspect the values for those instances. You can expand down the objects to inspect the data in the subfields. If you want to dig deep down without a DataTip, you can enter into Quick Watch by pressing Enter with the entry selected or through the context menu.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/1513.mma2.png"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/1513.mma2.png" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This also applies in the Paths to Root and Referenced Objects graph at the bottom.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/5672.mma3.png"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/5672.mma3.png" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To return to the previous type overview, you can either select Type from the breadcrumbs at the top or hit the Back button or your Backspace key.&lt;/p&gt;
&lt;h3&gt;In Closing&lt;/h3&gt;
&lt;p&gt;With the addition of these enhancements, we hope these new features will give you more insight to what’s happening inside your .NET Memory dumps. If you wish to know more about .NET Memory Analysis in general, please &lt;a href="http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/20/using-visual-studio-2013-to-diagnose-net-memory-issues-in-production.aspx"&gt;revisit our two previous blog entries on the subject&lt;/a&gt;. If you have any questions or comments, please leave them in the comments below or in &lt;a href="http://social.msdn.microsoft.com/Forums/en-US/vsdebug/threads"&gt;our MSDN forum&lt;/a&gt;.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10497476" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>.NET Memory Analysis: Object Inspection</sxp:MobileTitle>
<sxp:MobileContent>In Visual Studio 2013, we introduced a way to analyze .NET Memory with Visual Studio. Now in the Update 2, we’ve added a new feature to inspect values of objects and instances to improve your diagnosing experience.
If you are using Managed GCDumps in DiagSession files from Application Insights for Azure (like from this blog post), you will not have heap to inspect Instances and Values. This feature requires dumps with heap to have the information required for object inspection.Instance View
While on the type summary page, we no longer show a drop down expansion of instances in a type. Instead we pop an icon to enter the new instance view. You can enter this view by clicking the icon or pressing Enter.

This opens up a new instance view for you to dig deeper into your dump. You can edit the default value shown (instead of just the Type) by adding a DebuggerDisplayAttribute to your code. Hovering over items will pop a DataTip to inspect the values for those instances. You can expand down the objects to inspect the data in the subfields. If you want to dig deep down without a DataTip, you can enter into Quick Watch by pressing Enter with the entry selected or through the context menu.

This also applies in the Paths to Root and Referenced Objects graph at the bottom.

To return to the previous type overview, you can either select Type from the breadcrumbs at the top or hit the Back button or your Backspace key.In Closing
With the addition of these enhancements, we hope these new features will give you more insight to what’s happening inside your .NET Memory dumps. If you wish to know more about .NET Memory Analysis in general, please revisit our two previous blog entries on the subject. If you have any questions or comments, please leave them in the comments below or in our MSDN forum.</sxp:MobileContent>
<sxp:Tag>Debugging</sxp:Tag>
<sxp:Tag>ALM</sxp:Tag>
<sxp:Tag>Diagnostics</sxp:Tag>
</item>
<item>
<title>Triggering Prefetch for Windows Store Apps in Visual Studio 2013 Update 2</title>
<description>&lt;p&gt;Windows 8.1 introduced a method for Windows Store App developers to pre-register content with the Windows API to cache resources to be used by your apps before your app has been launched. This was to address the issue where your application loads slowly on startup while it waits to pull down the latest information. &lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.networking.backgroundtransfer.contentprefetcher.aspx"&gt;You can read more about ContentPrefetcher on MSDN.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a title="Visual Studio 2013 Update 2" href="http://www.microsoft.com/en-us/download/details.aspx?id=41699"&gt;Visual Studio 2013 Update 2&lt;/a&gt; adds a way to manually trigger Prefetch from the Debug menu. Normally, the Windows system will cache your resources based off of an internal heuristic determined by how often your app has been run. During development, however, the programmer may want to manually trigger this caching to test their program’s behavior to validate that ContentPrefetcher is properly registered. Since the code path that registers these resources are contained within your app itself, there are a number of steps to take to properly test your app.&lt;/p&gt;
&lt;h3&gt;Walkthrough&lt;/h3&gt;
&lt;p&gt;We will be using the &lt;a href="http://code.msdn.microsoft.com/windowsapps/ContentPrefetcher-Sample-432c8309"&gt;Content prefetch sample app&lt;/a&gt;. For the purposes of this post, I will be showing examples from the C# app.&lt;/p&gt;
&lt;h4&gt;Step 1 – Create or Open Your Windows Store App with Prefetch&lt;/h4&gt;
&lt;p&gt;In the sample app, we can do this from the menu system. Enter the URI you wish to cache and add it to the list.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/3312.prefetch1.png"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/3312.prefetch1.png" alt="" width="277" height="382" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For your own app, you can programmatically add URIs to the &lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.networking.backgroundtransfer.contentprefetcher.aspx"&gt;ContentPrefetcher API&lt;/a&gt;. Here is some example code.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;pre class="scroll"&gt;&lt;code class="csharp"&gt; Windows.Networking.BackgroundTransfer.ContentPrefetcher.ContentUris.Clear();&lt;br /&gt; string url = "xhttp://i.s-microsoft.com/global/ImageStore/PublishingImages/logos/hp/logo-lg-1x.png";&lt;br /&gt; Windows.Networking.BackgroundTransfer.ContentPrefetcher.ContentUris.Add(new Uri(url));&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h4&gt;Step 2 – Build and Launch your App&lt;/h4&gt;
&lt;p&gt;Before you can trigger Prefetch, you need to register your resources with the Windows API. Build and launch your app and make sure the code containing your registrations has been executed. Now you’re free to trigger Prefetch. To investigate your startup behavior, close your app to re-launch later.&lt;/p&gt;
&lt;p&gt;Using the sample project, we will execute this code path when clicking Add Uri.&lt;/p&gt;
&lt;h4&gt;Step 3 – Trigger Prefetch&lt;/h4&gt;
&lt;p&gt;The Trigger Prefetch option is found under Debug -&gt; Debug Other Targets -&gt; Trigger Prefetch. When executed successfully, your cache now contains all the items you have registered. You can now launch your app to observe the preloaded cache behavior.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/8780.prefetch2.png"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/8780.prefetch2.png" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Step 4 – Ensure Prefetch has worked correctly&lt;/h4&gt;
&lt;p&gt;After triggering Prefetch, relaunch your app to see how it behaves with your resources cached. In the sample app, you can select a different scenario and click back to see the table update.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/6557.prefetch3.png"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/6557.prefetch3.png" alt="" width="264" height="127" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Step 5 – Edit and Relaunch&lt;/h4&gt;
&lt;p&gt;Now that you’ve seen how Prefetch works, you can now choose to add or edit items in your registration. Before you try to trigger Prefetch again, however, the previous resource registrations are still saved. To update the registrations with your changes, you will need to re-launch your app before attempting Step 3 again.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;[note] For the sample app, the cache does not refresh unless you uninstall the app from the Start Menu. Right click the app and select uninstall before trying again.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Status Dialogs&lt;/h3&gt;
&lt;p&gt;Here are a list of status dialogs you may encounter for specific corner cases that may cause Prefetch to fail. Use this reference to diagnose your issue if you encounter one of these dialogs.&lt;/p&gt;
&lt;h4&gt;“Your startup project is not a Windows Store App project.”&lt;/h4&gt;
&lt;p&gt;ContentPrefetcher uses a Windows System API call to be used by Windows Store Apps. If your startup project is not a Store App, ContentPrefetcher is not available for you to use. We surface this dialog when we detect your startup project type does not match.&lt;/p&gt;
&lt;h4&gt;“Prefetch cannot be started. Start and close your app before trying again.”&lt;/h4&gt;
&lt;p&gt;Before we can determine if you have resources registered for Prefetch, we need to have your app deployed from the current instance of Visual Studio. If you just opened your Visual Studio solution or if you haven’t built and run your app yet, we need you to do so before triggering Prefetch.&lt;/p&gt;
&lt;h4&gt;“No content has been registered or content has been incorrectly registered.”&lt;/h4&gt;
&lt;p&gt;In this case, we just tried to trigger Prefetch, but there weren’t any resources registered to cache. This is caused when the code path that contains your resource registration was not executed, or your resource registration did not execute properly. Double check your code to make sure it correctly follows the API syntax, then re-launch your app and ensure you execute the registration code.&lt;/p&gt;
&lt;h4&gt;“Visual Studio cannot reach the device”&lt;/h4&gt;
&lt;p&gt;If you are remote debugging, this means that we could not reach the target device to trigger Prefetch. &lt;a href="http://msdn.microsoft.com/en-us/library/hh441469.aspx#BKMK_Choosing_the_remote_device_for_C__and_Visual_Basic_projects"&gt;Check your settings in the Project Properties&lt;/a&gt; to ensure that you have specified the correct remote device.&lt;/p&gt;
&lt;h4&gt;“Your Prefetch resources might be stale”&lt;/h4&gt;
&lt;p&gt;This is a general non-blocking warning that displays if you have edited your project but haven’t launched your app before triggering Prefetch. Registering your resources for caching occurs whenever you launch your app. The Windows system does not reflect any changes you’ve made to the registration code until you’ve relaunched your app after making edits. Relaunch your app to update resource registrations.&lt;/p&gt;
&lt;h3&gt;In Closing&lt;/h3&gt;
&lt;p&gt;For Windows Store App developers, I hope this feature enable you to create more responsive apps for your customers. If you have any feedback on this, please let me know in the comments or in our &lt;a href="http://social.msdn.microsoft.com/Forums/vstudio/en-US/home?forum=vsdebug"&gt;MSDN forum&lt;/a&gt;.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10497446" width="1" height="1"&gt;</description>
<pubDate>Thu, 06 Feb 2014 23:00:00 GMT</pubDate>
<guid isPermaLink="false">91d46819-8472-40ad-a661-2c78acb4018c:10497446</guid>
<link>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/06/triggering-prefetch-for-windows-store-apps-in-visual-studio-2013-update-2.aspx</link>
<author>Andrew Chan - MSFT</author>
<comments>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/06/triggering-prefetch-for-windows-store-apps-in-visual-studio-2013-update-2.aspx#comments</comments>
<category>Debugging</category>
<category>ALM</category>
<category>Diagnostics</category>
<sxp:ChannelId>DevBlogs</sxp:ChannelId>
<sxp:FeedId>ALM</sxp:FeedId>
<sxp:PublishId>6031538</sxp:PublishId>
<sxp:AssetId>91d46819-8472-40ad-a661-2c78acb4018c:10497446</sxp:AssetId>
<sxp:Author>Andrew Chan - MSFT</sxp:Author>
<sxp:Comments>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/06/triggering-prefetch-for-windows-store-apps-in-visual-studio-2013-update-2.aspx#comments</sxp:Comments>
<sxp:ContentType>Blog</sxp:ContentType>
<sxp:Copyright />
<sxp:Enclosure_Url />
<sxp:Enclosure_Type />
<sxp:Enclosure_Length>0</sxp:Enclosure_Length>
<sxp:ExpirationDate />
<sxp:GoLiveDate />
<sxp:IncludeInRiver>True</sxp:IncludeInRiver>
<sxp:IsFeatured>False</sxp:IsFeatured>
<sxp:IsMicrosoftOwned>False</sxp:IsMicrosoftOwned>
<sxp:LastUpdated>Fri, 07 Feb 2014 00:37:44 GMT</sxp:LastUpdated>
<sxp:Link>http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/06/triggering-prefetch-for-windows-store-apps-in-visual-studio-2013-update-2.aspx</sxp:Link>
<sxp:PublishDate>Thu, 06 Feb 2014 23:00:00 GMT</sxp:PublishDate>
<sxp:RelativeTime>5 days ago</sxp:RelativeTime>
<sxp:SortOrder>0</sxp:SortOrder>
<sxp:SourceItemId>35368864</sxp:SourceItemId>
<sxp:SourceFeedId>2403</sxp:SourceFeedId>
<sxp:SourceName>msdn</sxp:SourceName>
<sxp:Title>Triggering Prefetch for Windows Store Apps in Visual Studio 2013 Update 2</sxp:Title>
<sxp:Content>&lt;p&gt;Windows 8.1 introduced a method for Windows Store App developers to pre-register content with the Windows API to cache resources to be used by your apps before your app has been launched. This was to address the issue where your application loads slowly on startup while it waits to pull down the latest information. &lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.networking.backgroundtransfer.contentprefetcher.aspx"&gt;You can read more about ContentPrefetcher on MSDN.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a title="Visual Studio 2013 Update 2" href="http://www.microsoft.com/en-us/download/details.aspx?id=41699"&gt;Visual Studio 2013 Update 2&lt;/a&gt; adds a way to manually trigger Prefetch from the Debug menu. Normally, the Windows system will cache your resources based off of an internal heuristic determined by how often your app has been run. During development, however, the programmer may want to manually trigger this caching to test their program’s behavior to validate that ContentPrefetcher is properly registered. Since the code path that registers these resources are contained within your app itself, there are a number of steps to take to properly test your app.&lt;/p&gt;
&lt;h3&gt;Walkthrough&lt;/h3&gt;
&lt;p&gt;We will be using the &lt;a href="http://code.msdn.microsoft.com/windowsapps/ContentPrefetcher-Sample-432c8309"&gt;Content prefetch sample app&lt;/a&gt;. For the purposes of this post, I will be showing examples from the C# app.&lt;/p&gt;
&lt;h4&gt;Step 1 – Create or Open Your Windows Store App with Prefetch&lt;/h4&gt;
&lt;p&gt;In the sample app, we can do this from the menu system. Enter the URI you wish to cache and add it to the list.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/3312.prefetch1.png"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/3312.prefetch1.png" alt="" width="277" height="382" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For your own app, you can programmatically add URIs to the &lt;a href="http://msdn.microsoft.com/en-us/library/windows/apps/windows.networking.backgroundtransfer.contentprefetcher.aspx"&gt;ContentPrefetcher API&lt;/a&gt;. Here is some example code.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;pre class="scroll"&gt;&lt;code class="csharp"&gt; Windows.Networking.BackgroundTransfer.ContentPrefetcher.ContentUris.Clear();&lt;br /&gt; string url = "xhttp://i.s-microsoft.com/global/ImageStore/PublishingImages/logos/hp/logo-lg-1x.png";&lt;br /&gt; Windows.Networking.BackgroundTransfer.ContentPrefetcher.ContentUris.Add(new Uri(url));&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h4&gt;Step 2 – Build and Launch your App&lt;/h4&gt;
&lt;p&gt;Before you can trigger Prefetch, you need to register your resources with the Windows API. Build and launch your app and make sure the code containing your registrations has been executed. Now you’re free to trigger Prefetch. To investigate your startup behavior, close your app to re-launch later.&lt;/p&gt;
&lt;p&gt;Using the sample project, we will execute this code path when clicking Add Uri.&lt;/p&gt;
&lt;h4&gt;Step 3 – Trigger Prefetch&lt;/h4&gt;
&lt;p&gt;The Trigger Prefetch option is found under Debug -&gt; Debug Other Targets -&gt; Trigger Prefetch. When executed successfully, your cache now contains all the items you have registered. You can now launch your app to observe the preloaded cache behavior.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/8780.prefetch2.png"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/8780.prefetch2.png" alt="" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Step 4 – Ensure Prefetch has worked correctly&lt;/h4&gt;
&lt;p&gt;After triggering Prefetch, relaunch your app to see how it behaves with your resources cached. In the sample app, you can select a different scenario and click back to see the table update.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/6557.prefetch3.png"&gt;&lt;img src="http://blogs.msdn.com/resized-image.ashx/__size/550x0/__key/communityserver-blogs-components-weblogfiles/00-00-00-45-92/6557.prefetch3.png" alt="" width="264" height="127" border="0" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Step 5 – Edit and Relaunch&lt;/h4&gt;
&lt;p&gt;Now that you’ve seen how Prefetch works, you can now choose to add or edit items in your registration. Before you try to trigger Prefetch again, however, the previous resource registrations are still saved. To update the registrations with your changes, you will need to re-launch your app before attempting Step 3 again.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;[note] For the sample app, the cache does not refresh unless you uninstall the app from the Start Menu. Right click the app and select uninstall before trying again.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Status Dialogs&lt;/h3&gt;
&lt;p&gt;Here are a list of status dialogs you may encounter for specific corner cases that may cause Prefetch to fail. Use this reference to diagnose your issue if you encounter one of these dialogs.&lt;/p&gt;
&lt;h4&gt;“Your startup project is not a Windows Store App project.”&lt;/h4&gt;
&lt;p&gt;ContentPrefetcher uses a Windows System API call to be used by Windows Store Apps. If your startup project is not a Store App, ContentPrefetcher is not available for you to use. We surface this dialog when we detect your startup project type does not match.&lt;/p&gt;
&lt;h4&gt;“Prefetch cannot be started. Start and close your app before trying again.”&lt;/h4&gt;
&lt;p&gt;Before we can determine if you have resources registered for Prefetch, we need to have your app deployed from the current instance of Visual Studio. If you just opened your Visual Studio solution or if you haven’t built and run your app yet, we need you to do so before triggering Prefetch.&lt;/p&gt;
&lt;h4&gt;“No content has been registered or content has been incorrectly registered.”&lt;/h4&gt;
&lt;p&gt;In this case, we just tried to trigger Prefetch, but there weren’t any resources registered to cache. This is caused when the code path that contains your resource registration was not executed, or your resource registration did not execute properly. Double check your code to make sure it correctly follows the API syntax, then re-launch your app and ensure you execute the registration code.&lt;/p&gt;
&lt;h4&gt;“Visual Studio cannot reach the device”&lt;/h4&gt;
&lt;p&gt;If you are remote debugging, this means that we could not reach the target device to trigger Prefetch. &lt;a href="http://msdn.microsoft.com/en-us/library/hh441469.aspx#BKMK_Choosing_the_remote_device_for_C__and_Visual_Basic_projects"&gt;Check your settings in the Project Properties&lt;/a&gt; to ensure that you have specified the correct remote device.&lt;/p&gt;
&lt;h4&gt;“Your Prefetch resources might be stale”&lt;/h4&gt;
&lt;p&gt;This is a general non-blocking warning that displays if you have edited your project but haven’t launched your app before triggering Prefetch. Registering your resources for caching occurs whenever you launch your app. The Windows system does not reflect any changes you’ve made to the registration code until you’ve relaunched your app after making edits. Relaunch your app to update resource registrations.&lt;/p&gt;
&lt;h3&gt;In Closing&lt;/h3&gt;
&lt;p&gt;For Windows Store App developers, I hope this feature enable you to create more responsive apps for your customers. If you have any feedback on this, please let me know in the comments or in our &lt;a href="http://social.msdn.microsoft.com/Forums/vstudio/en-US/home?forum=vsdebug"&gt;MSDN forum&lt;/a&gt;.&lt;/p&gt;&lt;div style="clear:both;"&gt;&lt;/div&gt;&lt;img src="http://blogs.msdn.com/aggbug.aspx?PostID=10497446" width="1" height="1"&gt;</sxp:Content>
<sxp:Summary />
<sxp:MobileTitle>Triggering Prefetch for Windows Store Apps in Visual Studio 2013 Update 2</sxp:MobileTitle>
<sxp:MobileContent>Windows 8.1 introduced a method for Windows Store App developers to pre-register content with the Windows API to cache resources to be used by your apps before your app has been launched. This was to address the issue where your application loads slowly on startup while it waits to pull down the latest information. You can read more about ContentPrefetcher on MSDN.
Visual Studio 2013 Update 2 adds a way to manually trigger Prefetch from the Debug menu. Normally, the Windows system will cache your resources based off of an internal heuristic determined by how often your app has been run. During development, however, the programmer may want to manually trigger this caching to test their program’s behavior to validate that ContentPrefetcher is properly registered. Since the code path that registers these resources are contained within your app itself, there are a number of steps to take to properly test your app.Walkthrough
We will be using the Content prefetch sample app. For the purposes of this post, I will be showing examples from the C# app.Step 1 – Create or Open Your Windows Store App with Prefetch
In the sample app, we can do this from the menu system. Enter the URI you wish to cache and add it to the list.

For your own app, you can programmatically add URIs to the ContentPrefetcher API. Here is some example code.
Windows.Networking.BackgroundTransfer.ContentPrefetcher.ContentUris.Clear(); string url = "xhttp://i.s-microsoft.com/global/ImageStore/PublishingImages/logos/hp/logo-lg-1x.png"; Windows.Networking.BackgroundTransfer.ContentPrefetcher.ContentUris.Add(new Uri(url));
Step 2 – Build and Launch your App
Before you can trigger Prefetch, you need to register your resources with the Windows API. Build and launch your app and make sure the code containing your registrations has been executed. Now you’re free to trigger Prefetch. To investigate your startup behavior, close your app to re-launch later.
Using the sample project, we will execute this code path when clicking Add Uri.Step 3 – Trigger Prefetch
The Trigger Prefetch option is found under Debug -&gt; Debug Other Targets -&gt; Trigger Prefetch. When executed successfully, your cache now contains all the items you have registered. You can now launch your app to observe the preloaded cache behavior.
Step 4 – Ensure Prefetch has worked correctly
After triggering Prefetch, relaunch your app to see how it behaves with your resources cached. In the sample app, you can select a different scenario and click back to see the table update.
Step 5 – Edit and Relaunch
Now that you’ve seen how Prefetch works, you can now choose to add or edit items in your registration. Before you try to trigger Prefetch again, however, the previous resource registrations are still saved. To update the registrations with your changes, you will need to re-launch your app before attempting Step 3 again.
[note] For the sample app, the cache does not refresh unless you uninstall the app from the Start Menu. Right click the app and select uninstall before trying again.Status Dialogs
Here are a list of status dialogs you may encounter for specific corner cases that may cause Prefetch to fail. Use this reference to diagnose your issue if you encounter one of these dialogs.“Your startup project is not a Windows Store App project.”
ContentPrefetcher uses a Windows System API call to be used by Windows Store Apps. If your startup project is not a Store App, ContentPrefetcher is not available for you to use. We surface this dialog when we detect your startup project type does not match.“Prefetch cannot be started. Start and close your app before trying again.”
Before we can determine if you have resources registered for Prefetch, we need to have your app deployed from the current instance of Visual Studio. If you just opened your Visual Studio solution or if you haven’t built and run your app yet, we need you to do so before triggering Prefetch.“No content has been registered or content has been incorrectly registered.”
In this case, we just tried to trigger Prefetch, but there weren’t any resources registered to cache. This is caused when the code path that contains your resource registration was not executed, or your resource registration did not execute properly. Double check your code to make sure it correctly follows the API syntax, then re-launch your app and ensure you execute the registration code.“Visual Studio cannot reach the device”
If you are remote debugging, this means that we could not reach the target device to trigger Prefetch. Check your settings in the Project Properties to ensure that you have specified the correct remote device.“Your Prefetch resources might be stale”
This is a general non-blocking warning that displays if you have edited your project but haven’t launched your app before triggering Prefetch. Registering your resources for caching occurs whenever you launch your app. The Windows system does not reflect any changes you’ve made to the registration code until you’ve relaunched your app after making edits. Relaunch your app to update resource registrations.In Closing
For Windows Store App developers, I hope this feature enable you to create more responsive apps for your customers. If you have any feedback on this, please let me know in the comments or in our MSDN forum.</sxp:MobileContent>
<sxp:Tag>Debugging</sxp:Tag>
<sxp:Tag>ALM</sxp:Tag>
<sxp:Tag>Diagnostics</sxp:Tag>
</item>
</channel>
</rss>